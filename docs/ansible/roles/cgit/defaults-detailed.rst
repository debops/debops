.. Copyright (C) 2022 David HÃ¤rdeman <david@hardeman.nu>
.. Copyright (C) 2022 DebOps <https://debops.org/>
.. SPDX-License-Identifier: GPL-3.0-only

Default variable details
========================

Some of the ``debops.cgit`` default variables have more extensive configuration
than simple strings or lists, here you can find documentation and examples for
them.

.. only:: html

   .. contents::
      :local:
      :depth: 1

.. _cgit__ref_configuration:

cgit__configuration
-------------------

The ``cgit__*_configuration`` variables define the contents of the
:file:`/etc/cgitrc` configuration file (see :man:`cgitrc(5)` for more details,
including valid options). The contents are defined using YAML data structures,
using :ref:`universal_configuration` syntax, and converted to a valid
configuration file via the role template.

Examples
~~~~~~~~

Define or override some configuration options using simple syntax:

.. code-block:: yaml

   cgit__configuration:

     - cache-size: 0

     - max-commit-count: 100

     - footer: 'generated by cgit'

     - side-by-side-diffs: True

     - snapshots: [ 'tar.gz' ]

Or the same configuration, but using :ref:`universal_configuration_input_kv`:

.. code-block:: yaml

   cgit__configuration:

     - name: 'cache-size'
       value: 0

     - name: 'max-commit-count'
       value: 100

     - name: 'footer'
       value: 'generated by cgit'

     - name: 'side-by-side-diffs'
       value: True

     - name: 'snapshots'
       value: [ 'tar.gz' ]

You can see another example in the :envvar:`cgit__default_configuration`
variable.

Syntax
~~~~~~

As shown in the above examples, the cgit configuration options can be defined
using :ref:`universal_configuration_input_short` or
:ref:`universal_configuration_input_kv` syntax.

``name``
  Required. cgit configuration option name. Configuration entries with the
  same ``name`` parameter are merged in order of appearance; this can be used
  to change configuration options conditionally.

  If the ``option`` parameter is specified, it is used instead of ``name``
  parameter as the configuration option name, but the ``name`` parameter
  is still used to merge options.

``value``
  Required. The value of the cgit configuration option. It can be specified as
  a string, a YAML list, ``True`` or ``False`` boolean, or an integer.  If the
  ``value`` parameter is not specified, the result will be an empty string.

  The ``value`` parameters from multiple configuration entries override each
  other, with exception of YAML lists - the lists are additive and the result
  will contain only unique values. Only strings are supported in lists.

``raw``
  Optional. String or YAML text block which will be included in the generated
  configuration file "as is". If the ``raw`` parameter is defined, it takes
  precedence over ``value`` or ``array`` parameters.

``option``
  Optional. A string which will be used instead of the ``name`` parameter as
  the configuration option name.

``state``
  Optional. If not specified or ``present``, a given option will be present in
  the configuration file. If ``absent``, a given option will be removed from
  the configuration file (or not included if not present).  If ``init``, the
  configuration option will be prepared, but will not be active and won't show
  up on the generated configuration file - this can be used to prepare
  configuration that will be activated conditionally in another configuration
  entry. If ``ignore``, a given configuration entry will not be evaluated
  during role execution. If ``comment``, a given configuration option will be
  present in the generated file, but commented out.

``comment``
  Optional. String or YAML text block with comments about a given configuration
  option.

``weight``
  Optional. Positive or negative number which defines the additional "weight"
  of an option. Smaller or negative weight will move the option higher in the
  configuration file, larger weight will move the configuration option lower in
  the configuration file.
