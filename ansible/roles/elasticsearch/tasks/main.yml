---
# Copyright (C) 2014-2016 Nick Janetakis <nick.janetakis@gmail.com>
# Copyright (C) 2014-2021 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2016      Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# Copyright (C) 2014-2021 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  ansible.builtin.import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  ansible.builtin.import_role:
    name: 'secret'

- name: Install Elasticsearch packages
  ansible.builtin.package:
    name: '{{ q("flattened", (elasticsearch__base_packages
                              + elasticsearch__packages)) }}'
    state: 'present'
  notify: [ 'Refresh host facts' ]
  register: elasticsearch__register_packages
  until: elasticsearch__register_packages is succeeded

- name: Add Elasticsearch UNIX account to selected groups
  ansible.builtin.user:
    name: '{{ elasticsearch__user }}'
    groups: '{{ elasticsearch__additional_groups }}'
    append: True
  when: elasticsearch__additional_groups | d()

- name: Make sure that Ansible local facts directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save Elasticsearch local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/elasticsearch.fact.j2'
    dest: '/etc/ansible/facts.d/elasticsearch.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  ansible.builtin.meta: 'flush_handlers'

- name: Check if the dependent config file exists
  ansible.builtin.stat:
    path: '{{ secret + "/elasticsearch/dependent_config/" + inventory_hostname + "/config.json" }}'
  register: elasticsearch__register_dependent_config_file
  become: False
  delegate_to: 'localhost'
  when: (ansible_local.elasticsearch.installed | d())
  tags: [ 'role::elasticsearch:config' ]

- name: Load the dependent configuration from Ansible Controller
  ansible.builtin.slurp:
    src: '{{ secret + "/elasticsearch/dependent_config/" + inventory_hostname + "/config.json" }}'
  register: elasticsearch__register_dependent_config
  become: False
  delegate_to: 'localhost'
  when: (ansible_local.elasticsearch.installed | d() and
         elasticsearch__register_dependent_config_file.stat.exists | bool)
  tags: [ 'role::elasticsearch:config' ]

- name: Divert original configuration files
  debops.debops.dpkg_divert:
    path: '{{ item }}'
  loop:
    - '/etc/elasticsearch/elasticsearch.yml'
    - '/etc/elasticsearch/jvm.options'
    - '/usr/lib/sysctl.d/elasticsearch.conf'
    - '/usr/share/elasticsearch/jdk/conf/security/java.policy'
  notify: [ 'Start elasticsearch' ]
  tags: [ 'role::elasticsearch:config' ]

- name: Create systemd configuration directory
  ansible.builtin.file:
    path: '/etc/systemd/system/elasticsearch.service.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Generate systemd configuration
  ansible.builtin.template:
    src: 'etc/systemd/system/elasticsearch.service.d/ansible.conf.j2'
    dest: '/etc/systemd/system/elasticsearch.service.d/ansible.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Reload service manager' ]

- name: Generate Elasticsearch configuration
  ansible.builtin.template:
    src: 'etc/elasticsearch/elasticsearch.yml.j2'
    dest: '/etc/elasticsearch/elasticsearch.yml'
    owner: 'root'
    group: '{{ elasticsearch__group }}'
    mode: '0660'
  notify: [ 'Restart elasticsearch' ]
  tags: [ 'role::elasticsearch:config' ]

- name: Generate Elasticsearch JVM configuration
  ansible.builtin.template:
    src: 'etc/elasticsearch/jvm.options.j2'
    dest: '/etc/elasticsearch/jvm.options'
    owner: 'root'
    group: '{{ elasticsearch__group }}'
    mode: '0660'
  notify: [ 'Restart elasticsearch' ]
  when: elasticsearch__version is version("5.0.0", ">=")
  tags: [ 'role::elasticsearch:config' ]

- name: Generate Java Policy configuration file
  ansible.builtin.template:
    src: 'usr/share/elasticsearch/jdk/conf/security/java.policy.j2'
    dest: '/usr/share/elasticsearch/jdk/conf/security/java.policy'
    mode: '0644'
  notify: [ 'Restart elasticsearch' ]
  when: elasticsearch__version is version("7.0.0", ">=")

- name: Manage data paths
  ansible.builtin.file:
    path: '{{ item }}'
    state: 'directory'
    owner: '{{ elasticsearch__user }}'
    group: '{{ elasticsearch__group }}'
    mode: '0750'
  loop: '{{ q("flattened", elasticsearch__path_data) }}'

- name: Reload systemd daemons
  ansible.builtin.meta: 'flush_handlers'

- name: Check state of installed Elasticsearch plugins
  ansible.builtin.command: bin/elasticsearch-plugin list
  args:
    chdir: '/usr/share/elasticsearch'
  register: elasticsearch__register_plugins
  changed_when: False
  check_mode: False

- name: Install Elasticsearch plugins
  ansible.builtin.command: bin/elasticsearch-plugin install {{ item.url | d(item.name) }} --batch
  args:
    chdir: '/usr/share/elasticsearch'
  notify: [ 'Restart elasticsearch' ]
  loop: '{{ q("flattened", elasticsearch__combined_plugins) }}'
  when: (item.name | d() and item.state | d('present') != 'absent' and
         (item.name if ':' not in item.name else item.name.split(':')[1])
         not in elasticsearch__register_plugins.stdout_lines)

- name: Remove Elasticsearch plugins
  ansible.builtin.command: bin/elasticsearch-plugin remove {{ item.name }}
  args:
    chdir: '/usr/share/elasticsearch'
  notify: [ 'Restart elasticsearch' ]
  loop: '{{ q("flattened", elasticsearch__combined_plugins) }}'
  when: (item.name | d() and item.state | d('present') == 'absent' and
         (item.name if ':' not in item.name else item.name.split(':')[1])
         in elasticsearch__register_plugins.stdout_lines)

- name: Save Elasticsearch dependent configuration on Ansible Controller
  ansible.builtin.template:
    src: 'secret/elasticsearch/dependent_config/config.json.j2'
    dest: '{{ secret + "/elasticsearch/dependent_config/" + inventory_hostname + "/config.json" }}'
    mode: '0644'
  become: False
  delegate_to: 'localhost'
  tags: [ 'role::elasticsearch:config' ]

- name: Ensure that Elasticsearch is restarted
  ansible.builtin.meta: 'flush_handlers'

- name: Manage Elasticsearch authentication
  ansible.builtin.import_tasks: 'authentication.yml'
  run_once: True
  when: elasticsearch__xpack_enabled | bool and elasticsearch__pki_enabled | bool
