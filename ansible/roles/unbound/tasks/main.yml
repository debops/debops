---
# Copyright (C) 2017 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2017 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  ansible.builtin.import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Create a fact that knows the Ansible connection type
  ansible.builtin.set_fact:
    unbound__fact_ansible_connection: '{{ ansible_connection }}'

- name: Make sure systemd-resolved is stopped and disabled
  ansible.builtin.service:
    name: systemd-resolved.service
    state: stopped
    enabled: false

- name: Create Unbound configuration directory
  ansible.builtin.file:
    path: '/etc/unbound/unbound.conf.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Remove Unbound server configuration
  ansible.builtin.file:
    path: '/etc/unbound/unbound.conf.d/ansible-server.conf'
    state: 'absent'
  notify: [ 'Check unbound configuration and reload' ]
  when: not unbound__combined_server | d()

- name: Remove Unbound remote control configuration
  ansible.builtin.file:
    path: '/etc/unbound/unbound.conf.d/ansible-remote-control.conf'
    state: 'absent'
  notify: [ 'Check unbound configuration and reload' ]
  when: not unbound__combined_remote_control | d()

- name: Generate Unbound server configuration
  ansible.builtin.template:
    src: 'etc/unbound/unbound.conf.d/ansible-server.conf.j2'
    dest: '/etc/unbound/unbound.conf.d/ansible-server.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Check unbound configuration and reload' ]
  when: unbound__combined_server | d()

- name: Generate Unbound remote control configuration
  ansible.builtin.template:
    src: 'etc/unbound/unbound.conf.d/ansible-remote-control.conf.j2'
    dest: '/etc/unbound/unbound.conf.d/ansible-remote-control.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Check unbound configuration and reload' ]
  when: unbound__combined_remote_control | d()

- name: Remove DNS zones if requested
  ansible.builtin.file:
    path: '/etc/unbound/unbound.conf.d/zone_{{ item.name }}.conf'
    state: 'absent'
  loop: '{{ q("flattened", unbound__parsed_zones) }}'
  notify: [ 'Check unbound configuration and reload' ]
  when: item.name | d() and item.state | d('present') == 'absent'

- name: Configure DNS zones
  ansible.builtin.template:
    src: 'etc/unbound/unbound.conf.d/zone.conf.j2'
    dest: '/etc/unbound/unbound.conf.d/zone_{{ item.name }}.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  loop: '{{ q("flattened", unbound__parsed_zones) }}'
  notify: [ 'Check unbound configuration and reload' ]
  when: item.name | d() and item.state | d('present') != 'absent'

- name: Install unbound APT packages
  ansible.builtin.package:
    name: '{{ q("flattened", (unbound__base_packages
                              + unbound__packages)) }}'
    state: 'present'
  register: unbound__register_packages
  until: unbound__register_packages is succeeded

- name: Make sure that Ansible local facts directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save Unbound local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/unbound.fact.j2'
    dest: '/etc/ansible/facts.d/unbound.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  ansible.builtin.meta: 'flush_handlers'
