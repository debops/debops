---

- name: Create gitusers scripts path
  file:
    path: '{{ gitusers_git_scripts }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Install gitusers scripts
  copy:
    src: 'var/lib/gitusers/'
    dest: '{{ gitusers_git_scripts }}'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Prepare gituser environment
  template:
    src: 'srv/gitusers/{{ item.1 }}.j2'
    dest: '{{ item.0.home | default(gitusers_default_home_prefix + "/"
                                    + item.0.name + gitusers_name_suffix) }}/.{{ item.1 }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_nested:
    - '{{ gitusers_list + gitusers_group_list + gitusers_host_list }}'
    - [ 'forward', 'gitconfig', 'motd' ]
  when: ((item.0.name is defined and item.0.name) and
         (item.0.state is undefined or (item.0.state is defined and item.0.state != 'absent')))

- name: Create base directory for user websites
  file:
    path: '{{ gitusers_default_www_prefix }}/{{ item.group | default(item.name + gitusers_name_suffix) }}'
    state: 'directory'
    owner: 'root'
    group: '{{ gitusers_default_www_group }}'
    mode: '0711'
  with_flattened:
    - '{{ gitusers_list }}'
    - '{{ gitusers_group_list }}'
    - '{{ gitusers_host_list }}'
  when: ((item.name is defined and item.name) and
         (item.state is undefined or (item.state is defined and item.state != 'absent')))

- name: Create root directory for user websites
  file:
    path: '{{ gitusers_default_www_prefix }}/{{ item.0.group | default(item.0.name
                                                                       + gitusers_name_suffix) }}/{{ item.1 }}'
    state: 'directory'
    owner: 'root'
    group: '{{ item.0.group | default(item.0.name + gitusers_name_suffix) }}'
    mode: '02775'
  with_nested:
    - '{{ gitusers_list + gitusers_group_list + gitusers_host_list }}'
    - [ 'checkouts', 'sites', 'userdir' ]
  when: ((item.0.name is defined and item.0.name) and
         (item.0.state is undefined or (item.0.state is defined and item.0.state != 'absent')))

- name: Symlink git-shell-commands to user directories
  file:
    path: '{{ item.home | default(gitusers_default_home_prefix + "/"
                                  + item.name + gitusers_name_suffix) + "/git-shell-commands" }}'
    src: '{{ gitusers_git_scripts + "/git-shell-commands/" }}'
    state: 'link'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_flattened:
    - '{{ gitusers_list }}'
    - '{{ gitusers_group_list }}'
    - '{{ gitusers_host_list }}'
  when: ((item.name is defined and item.name) and
         (item.state is undefined or (item.state is defined and item.state != 'absent')))
