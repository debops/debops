---
# vim: foldmarker=[[[,]]]:foldmethod=marker

- name: Enable required Apache modules
  apache2_module:
    name: 'php5'
    state: 'present'
  when: owncloud__webserver == "apache"
  with_flattened: '{{ owncloud__apache_modules }}'

- name: Ensure restrictive permissions are set for the data directory
  file:
    path: '{{ owncloud__data_path }}'
    state: 'directory'
    owner: '{{ owncloud__app_user }}'
    group: '{{ owncloud__app_group }}'
    mode: '0770'

# ownCloud ./config/ [[[

- name: Install ownCloud config file
  template:
    src: 'srv/www/sites/config/debops.config.php.j2'
    dest: '{{ owncloud__deploy_path }}/config/debops.config.php'
    owner: '{{ owncloud__app_user }}'
    group: '{{ owncloud__app_group }}'
    mode: '0640'
    validate: 'php -f %s'

- name: Install ownCloud mail config file
  template:
    src: 'srv/www/sites/config/mail.config.php.j2'
    dest: '{{ owncloud__deploy_path }}/config/mail.config.php'
    owner: '{{ owncloud__app_user }}'
    group: '{{ owncloud__app_group }}'
    mode: '0640'
    validate: 'php -f %s'
  when: ((owncloud__mail_conf_map.keys() | length) >= 1)
  tags: [ 'role::owncloud:mail' ]

- name: Ensure the ownCloud mail config file is absent
  file:
    path: '{{ owncloud__deploy_path }}/config/mail.config.php'
    state: 'absent'
    validate: 'php -f %s'
  when: ((owncloud__mail_conf_map.keys() | length) == 0)

- name: Ensure deprecated configuration files are absent
  file:
    path: '{{ item }}'
    state: 'absent'
  with_flattened:
    - '{{ owncloud__deploy_path }}/config/custom.config.php'

# .. ]]]

# Setup the occ command [[[

- name: Remove legacy files
  file:
    state: 'absent'
    path: '{{ (ansible_local.php.etc_base
              if (ansible_local|d() and ansible_local.php|d() and
                  ansible_local.php.etc_base|d())
              else "/etc/php") + "/cli/conf.d/enable_apc.ini" }}'
  tags: [ 'role::owncloud:occ' ]

- name: Setup shortcut for the occ command
  template:
    src: 'usr/local/bin/occ.j2'
    dest: '{{ owncloud__occ_bin_file_path }}'
    owner: 'root'
    group: '{{ owncloud__app_group }}'
    mode: '0755'
  tags: [ 'role::owncloud:occ' ]

# .. ]]]

# Auto setup [[[

- name: Get ownCloud setup status
  command: '{{ owncloud__occ_bin_file_path | quote }} check'
  register: owncloud__register_occ_check
  changed_when: False

- name: Determine if ownCloud autosetup should be done
  set_fact:
    owncloud__do_autosetup: '{{ (owncloud__autosetup and
                                 owncloud__admin_username|d() and
                                 (owncloud__register_occ_check is not skipped) and
                                 "is not installed" in owncloud__register_occ_check.stdout) }}'

- name: Automatically finish setup via the occ tool
  command: |
           {{ owncloud__occ_bin_file_path | quote }} maintenance:install
           '--data-dir={{ owncloud__data_path }}'
           '--database={{ owncloud__database_map[owncloud__database].dbtype }}'
           '--database-name={{ owncloud__database_map[owncloud__database].dbname }}'
           '--database-host={{ owncloud__database_map[owncloud__database].dbhost }}'
           '--database-user={{ owncloud__database_map[owncloud__database].dbuser }}'
           '--database-pass={{ owncloud__database_map[owncloud__database].dbpass }}'
           {% if owncloud__admin_username %}
           '--admin-user={{ owncloud__admin_username }}'
           '--admin-pass={{ owncloud__admin_password }}'
           {% endif %}
  register: owncloud__register_occ_install
  when: owncloud__do_autosetup|bool

# .. ]]]

# ownCloud applications configuration [[[1

- name: Get current ownCloud configuration via occ config:list
  include: 'run_occ.yml'
  loop_control:
    loop_var: 'owncloud__occ_item'
  tags: [ 'role::owncloud:occ_config' ]
  when: (owncloud__apps_config_combined is mapping and owncloud__apps_config_combined.keys() | length)
  with_flattened:
    - command: 'config:list'
      get_output: True

- name: Capture occ output in variable
  set_fact:
    owncloud__occ_config_current: '{{ owncloud__occ_run_output }}'
  when: (owncloud__do_autosetup|bool and owncloud__apps_config_combined is mapping and owncloud__apps_config_combined.keys() | length and
         (not ansible_check_mode))
  tags: [ 'role::owncloud:occ_config' ]

- name: Set ownCloud apps configuration for each app
  include: 'run_occ_app_set.yml'
  loop_control:
    loop_var: 'owncloud__apps_item'
  with_dict: '{{ owncloud__apps_config_combined|d({}) }}'
  when: (owncloud__do_autosetup|d()|bool and not ansible_check_mode)
  tags: [ 'role::owncloud:occ_config' ]

# .. ]]]

# Run occ commands as specified in the inventory [[[
- name: Run occ commands as specified in the inventory
  include: 'run_occ.yml'
  loop_control:
    loop_var: 'owncloud__occ_item'
  tags: [ 'role::owncloud:occ' ]
  with_flattened:
    - '{{ owncloud__role_occ_cmd_list }}'
    - '{{ owncloud__occ_cmd_list }}'
    - '{{ owncloud__group_occ_cmd_list }}'
    - '{{ owncloud__host_occ_cmd_list }}'
    - '{{ owncloud__dependent_occ_cmd_list }}'
# .. ]]]

# Configure cron job for background tasks [[[

- name: Setup cron service
  cron:
    name: 'ownCloud Background Jobs'
    minute: '{{ owncloud__cron_minute }}'
    user: '{{ owncloud__app_user }}'
    job: 'test -x /usr/bin/php && test -e {{ (owncloud__deploy_path + "/cron.php") | quote }}
          && /usr/bin/php -f {{ (owncloud__deploy_path + "/cron.php") | quote }}'
    cron_file: 'owncloud'

# .. ]]]

# ownCloud upgrades [[[

- name: Enable the package manager hook script for ownCloud
  template:
    src: 'etc/apt/apt.conf.d/dpkg-hook.j2'
    dest: '/etc/apt/apt.conf.d/80owncloud-dpkg-hook'
    owner: 'root'
    group: 'root'
    mode: '0644'
  tags: [ 'role::owncloud:auto_upgrade' ]
  when: (owncloud__auto_database_upgrade_enabled | bool)

- name: Disable the package manager hook script for ownCloud
  file:
    path: '/etc/apt/apt.conf.d/80owncloud-dpkg-hook'
    state: 'absent'
  when: not (owncloud__auto_database_upgrade_enabled | bool)

# .. ]]]

# ownCloud integrity check [[[

- name: Check ownCloud core integrity
  command: '{{ owncloud__occ_bin_file_path | quote }} integrity:check-core'
  register: owncloud__register_occ_integrity_check_core
  failed_when: (owncloud__register_occ_integrity_check_core.rc != 0 or
                owncloud__register_occ_integrity_check_core.stdout_lines|length != 0)
  changed_when: False
  when: owncloud__do_autosetup|bool

# ]]]
