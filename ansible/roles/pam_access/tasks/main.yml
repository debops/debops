---
# Copyright (C) 2019 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2019 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  ansible.builtin.import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Add/remove diversion of PAM access control files
  vars:
    pam_access__var_access_conf: '{{ "/etc/security/"
                                     + item.filename | d("access-" + (item.name | regex_replace("\.conf$", "")) + ".conf") }}'
  debops.debops.dpkg_divert:
    path: '{{ pam_access__var_access_conf }}'
    state: '{{ item.state | d("present") }}'
    delete: True
  loop: '{{ pam_access__combined_rules | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ {"access_conf": pam_access__var_access_conf, "state": item.state | d("present")} }}'
  when: (pam_access__enabled | bool and item.name | d() and
         item.divert | d(False) | bool and
         item.state | d('present') in ['present', 'absent'])

- name: Generate PAM access control files
  vars:
    pam_access__var_access_conf: '{{ "/etc/security/"
                                     + item.filename | d("access-" + (item.name | regex_replace("\.conf$", "")) + ".conf") }}'
  ansible.builtin.template:
    src: 'etc/security/access.conf.j2'
    dest: '/etc/security/{{ item.filename | d("access-" + (item.name | regex_replace("\.conf$", "")) + ".conf") }}'
    mode: '0644'
  loop: '{{ pam_access__combined_rules | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ {"access_conf": pam_access__var_access_conf, "state": item.state | d("present")} }}'
  when: pam_access__enabled | bool and item.name | d() and item.options | d() and
        item.state | d('present') not in ['absent', 'init', 'ignore']

- name: Remove PAM access control files
  vars:
    pam_access__var_access_conf: '{{ "/etc/security/"
                                     + item.filename | d("access-" + (item.name | regex_replace("\.conf$", "")) + ".conf") }}'
  ansible.builtin.file:
    path: '/etc/security/{{ item.filename | d("access-" + (item.name | regex_replace("\.conf$", "")) + ".conf") }}'
    state: 'absent'
  loop: '{{ pam_access__combined_rules | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ {"access_conf": pam_access__var_access_conf, "state": item.state | d("present")} }}'
  when: pam_access__enabled | bool and item.name | d() and
        not item.divert | d(False) | bool and
        item.state | d('present') == 'absent'

- name: Make sure that Ansible local facts directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save pam_access local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/pam_access.fact.j2'
    dest: '/etc/ansible/facts.d/pam_access.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  ansible.builtin.meta: 'flush_handlers'
