---

- import_role:
    name: 'secret'

- name: Check if the dependent recipients file exists
  stat:
    path: '{{ secret + "/etc_aliases/dependent_config/" + inventory_hostname + "/recipients.json" }}'
  register: etc_aliases__register_dependent_recipients_file
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.etc_aliases|d() and
         ansible_local.etc_aliases.configured is defined and
         ansible_local.etc_aliases.configured|bool)

- name: Load the dependent recipients from Ansible Controller
  slurp:
    src: '{{ secret + "/etc_aliases/dependent_config/" + inventory_hostname + "/recipients.json" }}'
  register: etc_aliases__register_dependent_recipients
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.etc_aliases|d() and
         ansible_local.etc_aliases.configured is defined and
         ansible_local.etc_aliases.configured|bool and
         etc_aliases__register_dependent_recipients_file.stat.exists|bool)

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save etc_aliases local facts
  template:
    src: 'etc/ansible/facts.d/etc_aliases.fact.j2'
    dest: '/etc/ansible/facts.d/etc_aliases.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: etc_aliases__register_facts

- name: Update Ansible facts if they were modified
  action: setup
  when: etc_aliases__register_facts is changed

- name: Generate the /etc/aliases file
  template:
    src: 'etc/aliases.j2'
    dest: '/etc/aliases'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Update /etc/aliases.db database' ]

- name: Save etc_aliases dependent recipients on Ansible Controller
  template:
    src: 'secret/etc_aliases/dependent_config/inventory_hostname/recipients.json.j2'
    dest: '{{ secret + "/etc_aliases/dependent_config/" + inventory_hostname + "/recipients.json" }}'
  become: False
  delegate_to: 'localhost'
