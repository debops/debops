---

- name: Remove module configuration
  file:
    dest: '/etc/modprobe.d/{{ module.filename | d(module.name | replace("_","-") + ".conf") }}'
    state: 'absent'
  register: kmod__register_module_config_delete
  when: module.name|d() and module.state|d('present') == 'absent'

- name: Generate module configuration
  template:
    src: 'etc/modprobe.d/module.conf.j2'
    dest: '/etc/modprobe.d/{{ module.filename | d(module.name | replace("_","-") + ".conf") }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: kmod__register_module_config_create
  when: module.name|d() and module.state|d('present') != 'absent'

- name: Unload kernel module if configuration changed
  modprobe:
    name: '{{ module.name }}'
    state: 'absent'
  when: ((kmod__register_module_config_delete is changed or
          kmod__register_module_config_create is changed) and
         module.blacklist is not defined and
         ansible_local|d() and ansible_local.kmod|d() and ansible_local.kmod.modules|d() and
         module.name in ansible_local.kmod.modules and
         module.state|d('present') not in [ 'config' ])

- name: Load kernel module if configuration changed
  modprobe:
    name: '{{ module.name }}'
    state: 'present'
  when: ((kmod__register_module_config_delete is changed or
          kmod__register_module_config_create is changed) and
         module.blacklist is not defined and
         module.state|d('present') not in [ 'config', 'absent', 'blacklist' ])

- name: Update Ansible facts if the list of loaded kernel modules might have changed
  action: setup
  when: (kmod__register_module_config_delete is changed or
         kmod__register_module_config_create is changed)
