---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. Copyright (C) 2020 Pedro Luis Lopez <pedroluis.lopezsanchez@gmail.com>
# .. Copyright (C) 2020 DebOps <https://debops.org/>
# .. SPDX-License-Identifier: GPL-3.0-or-later

# .. _prometheus_exporter__ref_defaults:

# debops.prometheus_exporter default variables
# ============================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# Prometheus server configuration [[[
# --------------------------------

# .. envvar:: prometheus_exporter__server [[[
#
# FQDN hostname of the Prometheus server.
prometheus_exporter__server: '{{ ansible_fqdn }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__delegate_to [[[
#
# When the Prometheus server is used remotely, Ansible needs to run tasks on the
# correct host. This variable controls the task delegation to the correct
# database server.
#
# If the Prometheus server is run locally, this should point to the inventory name
# of the current host, NOT ``localhost`` because that would delegate the tasks
# to the Ansible Controller.
prometheus_exporter__delegate_to: '{{ prometheus_exporter__server
                                      if (prometheus_exporter__server|d() and
                                          prometheus_exporter__server != "localhost")
                                      else inventory_hostname }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__server_file_based_discovery_service [[[
#
# Use file-based discovery service in server
prometheus_exporter__server_file_based_discovery_service: True

                                                                   # ]]]
                                                                   # ]]]
# Basic configuration [[[
# -----------------------

# .. envvar:: prometheus_exporter__default_append_groups [[[
#
# List of default additional system groups to append to the Prometheus system user.
prometheus_exporter__default_append_groups: '{{ [ "ssl-cert" ] if prometheus_exporter__pki|bool else [] }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__append_groups [[[
#
# List of additional system groups to append to the Prometheus system user.
# Some groups are required for access to sockets.
prometheus_exporter__append_groups: []

                                                                   # ]]]
# .. envvar:: prometheus_exporter__combined_append_groups [[[
#
# The variable which combines all other Prometheus additional system groups
# to append to the Prometheus system user and is used in the role tasks and templates.
prometheus_exporter__combined_append_groups: '{{ prometheus_exporter__default_append_groups
                                                 + prometheus_exporter__append_groups }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__default_exporters [[[
#
# Default Prometheus exporters to install and configure.
prometheus_exporter__default_exporters:

  - name: 'node'
    private_port: '3100'
    public_port: '9100'
    apt_packages: 'prometheus-node-exporter'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__exporters [[[
#
# Prometheus exporters to install and configure.
# :ref:`prometheus_exporter__exporters` for more details.
prometheus_exporter__exporters: []

                                                                   # ]]]
# .. envvar:: prometheus_exporter__group_exporters [[[
#
# Prometheus exporters to install and configure in specific Ansible
# inventory group.
prometheus_exporter__group_exporters: []

                                                                   # ]]]
# .. envvar:: prometheus_exporter__host_exporters [[[
#
# Prometheus exporters to install and configure in specific Ansible
# inventory host.
prometheus_exporter__host_exporters: []

                                                                   # ]]]
# .. envvar:: prometheus_exporter__combined_exporters [[[
#
# The variable which combines all other Prometheus exporters
# configuration variables and is used in the role tasks and templates.
prometheus_exporter__combined_exporters: '{{ prometheus_exporter__default_exporters
                                             + prometheus_exporter__exporters
                                             + prometheus_exporter__group_exporters
                                             + prometheus_exporter__host_exporters }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__apm_exporters [[[
#
# Prometheus APM exporters to configure.
# :ref:`prometheus_exporter__apm_exporters` for more details.
prometheus_exporter__apm_exporters: []

                                                                    # ]]]
# .. envvar:: prometheus_exporter__labels [[[
#
# An optional dict of labels used to filter nodes for a given service.
prometheus_exporter__labels: {}

                                                                   # ]]]
# .. envvar:: prometheus_exporter__group_labels [[[
#
# An optional dict of labels used to filter nodes for a given service
# in specific Ansible inventory group.
prometheus_exporter__group_labels: {}

                                                                   # ]]]
# .. envvar:: prometheus_exporter__host_labels [[[
#
# An optional list of labels used to filter nodes for a given service
# in specific Ansible inventory host.
prometheus_exporter__host_labels: {}

                                                                   # ]]]
# .. envvar:: prometheus_exporter__combined_labels [[[
#
# The variable which combines all other optional dict of labels used to
# filter nodes and is used in the role tasks and templates.
prometheus_exporter__combined_labels: '{{ prometheus_exporter__labels |
                                          combine(prometheus_exporter__group_labels) |
                                          combine(prometheus_exporter__host_labels) }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__allow [[[
#
# List of IP addresses or CIDR subnets which will be permitted to access the
# Prometheus exporters. If the list is empty, nobody can access the service.
prometheus_exporter__allow: []

                                                                   # ]]]
# .. envvar:: prometheus_exporter__bind [[[
#
# A valid string consisting of a hostname or IP. To allow connections from
# remote hosts you need to change this to empty string, the default.
prometheus_exporter__bind: ''

                                                                   # ]]]
                                                                   # ]]]
# Prometheus default file [[[
# -------------------------------

# The variables below define the contents of the
# :file:`/etc/default/prometheus-*-exporter` configuration files.

# .. envvar:: prometheus_exporter__default_args [[[
#
# The default configuration options which should be present in the exporters
# configuration files.
# :ref:`prometheus_exporter__args` for more details.
prometheus_exporter__default_args:

  - name: 'common'
    options:
      - web.listen-address: '{{ ("localhost" if prometheus_exporter__pki|bool else prometheus_exporter__bind) + ":" +
                                (item.private_port if prometheus_exporter__pki|bool else
                                item.public_port) }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__args [[[
#
# The configuration options which should be present in the exporters
# configuration files.
# :ref:`prometheus_exporter__args` for more details.
prometheus_exporter__args: []

                                                                   # ]]]
# .. envvar:: prometheus_exporter__combined_args [[[
#
# The variable which combines all other Prometheus exporters
# configuration options and is used in the role tasks and templates.
prometheus_exporter__combined_args: '{{ prometheus_exporter__default_args
                                        + prometheus_exporter__args }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__env [[[
#
# The configuration env variables which should be present in the exporters
# configuration files.
prometheus_exporter__env: []

                                                                   # ]]]
                                                                   # ]]]
# SSL configuration [[[
# ---------------------

# .. envvar:: prometheus_exporter__ghostunnel_version [[[
#
# Version of Ghostunnel TLS proxy
prometheus_exporter__ghostunnel_version: 'v1.5.2'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__ghostunnel_resource [[[
#
# Resource release of Ghostunnel TLS proxy.
prometheus_exporter__ghostunnel_resource: '{{ "https://github.com/square/ghostunnel" +
                                              "/releases/download/" + prometheus_exporter__ghostunnel_version +
                                              "/ghostunnel-" + prometheus_exporter__ghostunnel_version +
                                              "-linux-amd64-with-pkcs11" }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__pki [[[
#
# Enable or disable support for SSL in Prometheus exporters (using :ref:`debops.pki`).
prometheus_exporter__pki: '{{ True
                              if (ansible_local.pki.enabled|d()|bool and
                                  prometheus_exporter__pki_realm in ansible_local.pki.known_realms)
                              else False }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__pki_path [[[
#
# Base path for PKI directory.
prometheus_exporter__pki_path: '{{ ansible_local.pki.base_path|d("/etc/pki") }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__pki_realm [[[
#
# Default PKI realm used by Prometheus exporters.
prometheus_exporter__pki_realm: '{{ ansible_local.pki.realm|d("domain") }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__pki_ca [[[
#
# Root CA certificate used by Prometheus exporters, relative to :envvar:`prometheus_exporter__pki_realm`.
prometheus_exporter__pki_ca: 'CA.crt'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__pki_crt [[[
#
# Host certificate used by Prometheus exporters, relative to :envvar:`prometheus_exporter__pki_realm`.
prometheus_exporter__pki_crt: 'default.crt'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__pki_key [[[
#
# Host private key used by Prometheus exporters, relative to :envvar:`prometheus_exporter__pki_realm`.
prometheus_exporter__pki_key: 'default.key'

                                                                   # ]]]
                                                                   # ]]]
# Configuration for other Ansible roles [[[
# -----------------------------------------

# .. envvar:: prometheus_exporter__golang__dependent_packages [[[
#
# Configuration of the :ref:`debops.golang` role.
prometheus_exporter__golang__dependent_packages: '{{ prometheus_exporter__combined_exporters }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__apt_preferences__dependent_list [[[
#
# Configuration of the :ref:`debops.apt_preferences` role.
prometheus_exporter__apt_preferences__dependent_list:

  - packages: [ 'prometheus-*-exporter' ]
    pin: 'release o=Debian Backports,n={{ ansible_distribution_release }}-backports'
    priority: '500'
    reason: 'Prefer Prometheus exporter packages from the stretch backports for metrics naming consistency'
    role: 'debops.prometheus_exporter'
    suffix: '_backports'
    state: '{{ "present" if ansible_distribution_release == "stretch" else "absent" }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__etc_services__dependent_list [[[
#
# Configuration for the :ref:`debops.etc_services` Ansible role.
prometheus_exporter__etc_services__dependent_list: '{{ lookup("template",
                                                       "lookup/prometheus_exporter__etc_services__dependent_list.j2") }}'

                                                                   # ]]]
# .. envvar:: prometheus_exporter__ferm__dependent_rules [[[
#
# Configuration for the :ref:`debops.ferm` Ansible role.
prometheus_exporter__ferm__dependent_rules:

  - name: 'prometheus_exporter'
    type: 'accept'
    saddr: '{{ prometheus_exporter__allow }}'
    dport: '{{ lookup("template",
               "lookup/prometheus_exporter__ferm__dependent_rules_dport.j2") }}'
    accept_any: False
    role: 'prometheus_exporter'

                                                                   # ]]]
                                                                   # ]]]
