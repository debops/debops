---
# Copyright (C) 2017 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2017 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  import_role:
    name: 'secret'

- name: Install required packages
  package:
    name: '{{ q("flattened", (saslauthd__base_packages
                              + saslauthd__packages)) }}'
    state: 'present'
  register: saslauthd__register_packages
  until: saslauthd__register_packages is succeeded

- name: Stop saslauthd instance before removal
  command: /etc/init.d/saslauthd stop-instance saslauthd-{{ item.name }}
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  when: item.name|d() and item.socket_path|d() and
        item.state|d('present') == 'absent'

- name: Remove saslauthd instance if requested
  file:
    path: '/etc/default/saslauthd-{{ item.name }}'
    state: 'absent'
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  when: item.name|d() and item.socket_path|d() and
        item.state|d('present') == 'absent'

- name: Generate saslauthd instance configuration
  template:
    src: 'etc/default/saslauthd.j2'
    dest: '/etc/default/saslauthd-{{ item.name }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  notify: [ 'Restart saslauthd' ]
  when: item.name|d() and item.socket_path|d() and
        item.state|d('present') != 'absent'

- name: Ensure that required UNIX groups exist
  group:
    name: '{{ item.group }}'
    state: 'present'
    system: '{{ (item.system | d(True)) | bool }}'
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  when: item.name|d() and item.group|d() and
        item.state|d('present') != 'absent'

- name: Create SASL config directory
  file:
    path: '{{ item.config_path | dirname }}'
    state: 'directory'
    owner: '{{ item.config_dir_owner | d("root") }}'
    group: '{{ item.config_dir_group | d("root") }}'
    mode: '{{ item.config_dir_mode   | d("0755") }}'
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  when: item.name|d() and item.config_path|d() and
        item.state|d('present') != 'absent'

- name: Remove SASL instance configuration if requested
  file:
    path: '{{ item.config_path }}'
    state: 'absent'
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  notify: '{{ item.notify if item.notify|d() else omit }}'
  when: item.name|d() and item.config_path|d() and
        item.state|d('present') == 'absent'

- name: Generate SASL instance configuration
  template:
    src: 'etc/instance.conf.j2'
    dest: '{{ item.config_path }}'
    owner: '{{ item.config_owner | d("root") }}'
    group: '{{ item.config_group | d("sasl") }}'
    mode: '{{ item.config_mode | d("0640") }}'
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  notify: '{{ item.notify if item.notify|d() else omit }}'
  when: item.name|d() and item.config_path|d() and
        item.state|d('present') != 'absent'

- name: Remove SASL LDAP profiles if requested
  file:
    path: '{{ "/etc/saslauthd.conf"
              if (item.name == "global")
              else "/etc/saslauthd-" + item.name + ".conf" }}'
    state: 'absent'
  with_items: '{{ saslauthd__ldap_combined_profiles | debops.debops.parse_kv_items }}'
  when: item.name|d() and item.state|d('present') == 'absent'

- name: Generate SASL LDAP profiles
  template:
    src: 'etc/saslauthd.conf.j2'
    dest: '{{ "/etc/saslauthd.conf"
              if (item.name == "global")
              else "/etc/saslauthd-" + item.name + ".conf" }}'
    owner: '{{ item.owner | d("root") }}'
    group: '{{ item.group | d("sasl") }}'
    mode: '{{ item.mode | d("0640") }}'
  with_items: '{{ saslauthd__ldap_combined_profiles | debops.debops.parse_kv_items }}'
  notify: [ 'Restart saslauthd' ]
  when: item.name|d() and item.state|d('present') not in [ 'absent', 'ignore' ]

- name: Get list of dpkg-stateoverride paths
  shell: set -o nounset -o pipefail -o errexit && dpkg-statoverride --list | awk '{print $4}'
  args:
    executable: 'bash'
  register: saslauthd__register_statoverride
  changed_when: False
  check_mode: False

- name: Remove a dpkg-statoverride entry if requested
  command: dpkg-statoverride --remove {{ item.socket_path }}
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  notify: [ 'Restart saslauthd' ]
  when: item.name|d() and item.socket_path|d() and item.state|d('present') == 'absent' and
        item.socket_path in saslauthd__register_statoverride.stdout_lines

- name: Create a dpkg-statoverride entry
  command: dpkg-statoverride --add
           {{ item.socket_owner | d('root') }}
           {{ item.socket_group | d('sasl') }}
           {{ item.socket_mode  | d('710') }}
           {{ item.socket_path }}
  with_items: '{{ saslauthd__combined_instances | debops.debops.parse_kv_items }}'
  notify: [ 'Restart saslauthd' ]
  when: item.name|d() and item.socket_path|d() and item.state|d('present') != 'absent' and
        item.socket_path not in saslauthd__register_statoverride.stdout_lines

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save saslauthd local facts
  template:
    src: 'etc/ansible/facts.d/saslauthd.fact.j2'
    dest: '/etc/ansible/facts.d/saslauthd.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  meta: 'flush_handlers'
