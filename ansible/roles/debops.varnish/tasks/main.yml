---

- name: DebOps pre_tasks hook
  include: "{{ lookup('task_src', 'varnish/pre_main.yml') }}"

- name: Install required APT packages
  package:
    name: '{{ q("flattened", varnish__base_packages
                             + varnish__packages) }}'
    state: 'present'
  register: varnish__register_packages
  until: varnish__register_packages is succeeded
  notify: [ 'Restart varnish' ]

- name: Divert the original varnish configuration file
  command: dpkg-divert --quiet --local --divert /etc/varnish/default.vcl.dpkg-divert --rename /etc/varnish/default.vcl
  args:
    creates: '/etc/varnsih/default.vcl.dpkg-divert'

- name: Generate default varnish configuration
  template:
    src: '{{ lookup("template_src", "varnish/default.vcl") }}'
    dest: '/etc/varnish/default.vcl'
    mode: '0644'
  notify: [ 'Restart varnish' ]

- name: Generate varnish.service file
  template:
    src: '{{ lookup("template_src", "varnish/varnish.service") }}'
    dest: '/lib/systemd/system/varnish.service'
    mode: '0644'
  notify: [ 'Reload daemon' ]

# - name: Reconfigure systemd services when modified
#   systemd:
#     name: '{{ "lxc-net.service" if (lxc__net_deploy_state == "present") else omit }}'
#     state: '{{ "restarted" if (lxc__net_deploy_state == "present") else omit }}'
#     daemon_reload: True
#   when: ansible_service_mgr == 'systemd'

# - name: Load varnish.service file if
#   lineinfile:
#     path: /lib/systemd/system/varnish.service
#     regexp: 'ExecStart=/usr/sbin/varnishd -j unix,user=vcache -F -a :6081 -T localhost:6082 -f /etc/varnish/default.vcl -S /etc/varnish/secret -s malloc,256m'
#     line: 'ExecStart=/usr/sbin/varnishd -j unix,user=vcache -F -a :80 -T localhost:6082 -f /etc/varnish/default.vcl -S /etc/varnish/secret -s malloc,256m'
#   when: ansible_service_mgr == 'systemd'

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save Varnish local facts
  template:
    src: 'etc/ansible/facts.d/varnish.fact.j2'
    dest: '/etc/ansible/facts.d/varnish.fact'
    mode: '0755'
  register: varnish__register_facts

- name: Update Ansible facts if they were modified
  action: setup
  when: varnish__register_facts is changed




# - name: Ensure Varnish services are started enabled on startup (Xenial specific)
#   service:
#     name: "{{ item }}"
#     state: started
#     enabled: true
#     use: "service"
#   with_items: "{{ varnish_enabled_services | default([]) }}"
#   when:
#     - varnish_enabled_services
#     - (ansible_os_family == 'Debian' and ansible_distribution_release == "xenial")








- name: DebOps post_tasks hook
  include: "{{ lookup('task_src', 'varnish/post_main.yml') }}"
