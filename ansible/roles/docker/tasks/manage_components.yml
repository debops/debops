---
# Copyright (C) 2019 CipherMail B.V. https://www.ciphermail.com/
# Copyright (C) 2019 Imre Jonk <imre@imrejonk.nl>
# Copyright (C) 2019 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Manage Docker networks
  docker_network:
    api_version:    '{{ item.api_version    |d(docker__api_version) }}'
    appends:        '{{ item.appends        |d(omit) }}'
    cacert_path:    '{{ item.cacert_path    |d(docker__pki_ca_path) }}'
    cert_path:      '{{ item.cert_path      |d(docker__pki_crt_path) }}'
    connected:      '{{ item.connected      |d(omit) }}'
    debug:          '{{ item.debug          |d(docker__debug) }}'
    docker_host:    '{{ item.docker_host    |d(docker__docker_host) }}'
    driver:         '{{ item.driver         |d(omit) }}'
    driver_options: '{{ item.driver_options |d(omit) }}'
    force:          '{{ item.force          |d(omit) }}'
    ipam_driver:    '{{ item.ipam_driver    |d(omit) }}'
    ipam_options:   '{{ item.ipam_options   |d(omit) }}'
    key_path:       '{{ item.key_path       |d(docker__pki_key_path) }}'
    name:           '{{ item.name }}'
    ssl_version:    '{{ item.ssl_version    |d(docker__ssl_version) }}'
    state:          '{{ item.state          |d(omit) }}'
    timeout:        '{{ item.timeout        |d(docker__timeout) }}'
    tls:            '{{ item.tls            |d(omit) }}'
    tls_hostname:   '{{ item.tls_hostname   |d(docker__tls_hostname) }}'
    tls_verify:     '{{ item.tls_verify     |d(docker__pki) }}'
  with_items: '{{ docker__combined_networks }}'

- name: Authenticate to Docker registries
  docker_login:
    api_version:  '{{ item.api_version  |d(docker__api_version) }}'
    cacert_path:  '{{ item.cacert_path  |d(docker__pki_ca_path) }}'
    cert_path:    '{{ item.cert_path    |d(docker__pki_crt_path) }}'
    config_path:  '{{ item.config_path  |d(omit) }}'
    debug:        '{{ item.debug        |d(docker__debug) }}'
    docker_host:  '{{ item.docker_host  |d(docker__docker_host) }}'
    email:        '{{ item.email        |d(omit) }}'
    key_path:     '{{ item.key_path     |d(docker__pki_key_path) }}'
    password:     '{{ item.password }}'
    reauthorize:  '{{ item.reauthorize  |d(omit) }}'
    registry_url: '{{ item.registry_url |d(omit) }}'
    ssl_version:  '{{ item.ssl_version  |d(docker__ssl_version) }}'
    state:        '{{ item.state        |d(omit) }}'
    timeout:      '{{ item.timeout      |d(docker__timeout) }}'
    tls:          '{{ item.tls          |d(omit) }}'
    tls_hostname: '{{ item.tls_hostname |d(docker__tls_hostname) }}'
    tls_verify:   '{{ item.tls_verify   |d(docker__pki) }}'
    username:     '{{ item.username }}'
  with_items: '{{ docker__combined_registry_accounts }}'
  no_log: '{{ secret__no_log|d(True) }}'

- name: Manage Docker containers
  docker_container:
    api_version:         '{{ item.api_version         |d(docker__api_version) }}'
    auto_remove:         '{{ item.auto_remove         |d(docker__auto_remove) }}'
    blkio_weight:        '{{ item.blkio_weight        |d(omit) }}'
    cacert_path:         '{{ item.cacert_path         |d(docker__pki_ca_path) }}'
    cap_drop:            '{{ item.cap_drop            |d(omit) }}'
    capabilities:        '{{ item.capabilities        |d(omit) }}'
    cert_path:           '{{ item.cert_path           |d(docker__pki_crt_path) }}'
    cleanup:             '{{ item.cleanup             |d(omit) }}'
    command:             '{{ item.command             |d(omit) }}'
    cpu_period:          '{{ item.cpu_period          |d(omit) }}'
    cpu_quota:           '{{ item.cpu_quota           |d(omit) }}'
    cpu_shares:          '{{ item.cpu_shares          |d(omit) }}'
    cpuset_cpus:         '{{ item.cpuset_cpus         |d(omit) }}'
    cpuset_mems:         '{{ item.cpuset_mems         |d(omit) }}'
    debug:               '{{ item.debug               |d(docker__debug) }}'
    detach:              '{{ item.detach              |d(omit) }}'
    devices:             '{{ item.devices             |d(omit) }}'
    dns_opts:            '{{ item.dns_opts            |d(omit) }}'
    dns_search_domains:  '{{ item.dns_search_domains  |d(omit) }}'
    dns_servers:         '{{ item.dns_servers         |d(omit) }}'
    docker_host:         '{{ item.docker_host         |d(docker__docker_host) }}'
    domainname:          '{{ item.domainname          |d(omit) }}'
    entrypoint:          '{{ item.entrypoint          |d(omit) }}'
    env:                 '{{ item.env                 |d(omit) }}'
    env_file:            '{{ item.env_file            |d(omit) }}'
    etc_hosts:           '{{ item.etc_hosts           |d(omit) }}'
    exposed_ports:       '{{ item.exposed_ports       |d(omit) }}'
    force_kill:          '{{ item.force_kill          |d(omit) }}'
    groups:              '{{ item.groups              |d(omit) }}'
    hostname:            '{{ item.hostname            |d(omit) }}'
    ignore_image:        '{{ item.ignore_image        |d(omit) }}'
    image:               '{{ item.image               |d(omit) }}'
    init:                '{{ item.init                |d(omit) }}'
    interactive:         '{{ item.interactive         |d(omit) }}'
    ipc_mode:            '{{ item.ipc_mode            |d(omit) }}'
    keep_volumes:        '{{ item.keep_volumes        |d(omit) }}'
    kernel_memory:       '{{ item.kernel_memory       |d(omit) }}'
    key_path:            '{{ item.key_path            |d(docker__pki_key_path) }}'
    kill_signal:         '{{ item.kill_signal         |d(omit) }}'
    labels:              '{{ item.labels              |d(omit) }}'
    links:               '{{ item.links               |d(omit) }}'
    log_driver:          '{{ item.log_driver          |d(omit) }}'
    log_options:         '{{ item.log_options         |d(omit) }}'
    mac_address:         '{{ item.mac_address         |d(omit) }}'
    memory:              '{{ item.memory              |d(omit) }}'
    memory_reservation:  '{{ item.memory_reservation  |d(omit) }}'
    memory_swap:         '{{ item.memory_swap         |d(omit) }}'
    memory_swappiness:   '{{ item.memory_swappiness   |d(omit) }}'
    name:                '{{ item.name }}'
    network_mode:        '{{ item.network_mode        |d(omit) }}'
    networks:            '{{ item.networks            |d(omit) }}'
    oom_killer:          '{{ item.oom_killer          |d(omit) }}'
    oom_score_adj:       '{{ item.oom_score_adj       |d(omit) }}'
    output_logs:         '{{ item.output_logs         |d(omit) }}'
    paused:              '{{ item.paused              |d(omit) }}'
    pid_mode:            '{{ item.pid_mode            |d(omit) }}'
    privileged:          '{{ item.privileged          |d(omit) }}'
    published_ports:     '{{ item.published_ports     |d(omit) }}'
    pull:                '{{ item.pull                |d(docker__pull) }}'
    purge_networks:      '{{ item.purge_networks      |d(omit) }}'
    read_only:           '{{ item.read_only           |d(omit) }}'
    recreate:            '{{ item.recreate            |d(omit) }}'
    restart:             '{{ item.restart             |d(omit) }}'
    restart_policy:      '{{ item.restart_policy      |d(docker__restart_policy) }}'
    restart_retries:     '{{ item.restart_retries     |d(omit) }}'
    security_opts:       '{{ item.security_opts       |d(omit) }}'
    shm_size:            '{{ item.shm_size            |d(omit) }}'
    ssl_version:         '{{ item.ssl_version         |d(docker__ssl_version) }}'
    state:               '{{ item.state               |d(omit) }}'
    stop_signal:         '{{ item.stop_signal         |d(omit) }}'
    stop_timeout:        '{{ item.stop_timeout        |d(omit) }}'
    sysctls:             '{{ item.sysctls             |d(omit) }}'
    timeout:             '{{ item.timeout             |d(docker__timeout) }}'
    tls:                 '{{ item.tls                 |d(omit) }}'
    tls_hostname:        '{{ item.tls_hostname        |d(docker__tls_hostname) }}'
    tls_verify:          '{{ item.tls_verify          |d(docker__pki) }}'
    tmpfs:               '{{ item.tmpfs               |d(omit) }}'
    trust_image_content: '{{ item.trust_image_content |d(omit) }}'
    tty:                 '{{ item.tty                 |d(omit) }}'
    ulimits:             '{{ item.ulimits             |d(omit) }}'
    user:                '{{ item.user                |d(omit) }}'
    userns_mode:         '{{ item.userns_mode         |d(omit) }}'
    uts:                 '{{ item.uts                 |d(omit) }}'
    volume_driver:       '{{ item.volume_driver       |d(omit) }}'
    volumes:             '{{ item.volumes             |d(omit) }}'
    volumes_from:        '{{ item.volumes_from        |d(omit) }}'
    working_dir:         '{{ item.working_dir         |d(omit) }}'
  with_items: '{{ docker__combined_containers }}'
  no_log: '{{ secret__no_log|d(True) }}'
