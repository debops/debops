---
# Copyright (C) 2018 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2018 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  import_role:
    name: 'secret'

- name: Configure access to LDAP directory
  template:
    src: 'etc/sudo-ldap.conf.j2'
    dest: '/etc/sudo-ldap.conf'
    mode: '0440'
  when: sudo__enabled|bool and sudo__ldap_enabled|bool

- name: Install required packages
  environment:
    SUDO_FORCE_REMOVE: 'yes'
  package:
    name: '{{ q("flattened", (sudo__base_packages
                              + sudo__packages)) }}'
    state: 'present'
  register: sudo__register_packages
  until: sudo__register_packages is succeeded
  when: sudo__enabled|bool

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save sudo local facts
  template:
    src: 'etc/ansible/facts.d/sudo.fact.j2'
    dest: '/etc/ansible/facts.d/sudo.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  meta: 'flush_handlers'

- name: Ensure that '/etc/sudoers' includes '/etc/sudoers.d'
  lineinfile:
    dest: '/etc/sudoers'
    regexp: '^(?:@|#)includedir\s+\/etc\/sudoers.d$'
    line: '{{ ("#"
               if ansible_local.sudo.version|d("0.0.0") is version("1.9.1", "<")
               else "@") + "includedir /etc/sudoers.d" }}'
    insertafter: 'EOF'
    state: 'present'
    validate: 'visudo -cf "%s"'
    mode: '0440'
  when: sudo__enabled|bool

- name: Remove sudoers configuration if requested
  file:
    path: '/etc/sudoers.d/{{ item.filename | d(item.name) }}'
    state: 'absent'
  with_items: '{{ sudo__combined_sudoers | flatten | debops.debops.parse_kv_items }}'
  notify: [ 'Refresh host facts' ]
  when: sudo__enabled|bool and
        item.name|d() and item.state|d('present') == 'absent'

- name: Configure sudoers
  template:
    src: 'etc/sudoers.d/config.j2'
    dest: '/etc/sudoers.d/{{ item.filename | d(item.name) }}'
    owner: 'root'
    group: 'root'
    mode: '0440'
    validate: 'visudo -cf %s'
  with_items: '{{ sudo__combined_sudoers | flatten | debops.debops.parse_kv_items }}'
  notify: [ 'Refresh host facts' ]
  when: sudo__enabled|bool and
        item.name|d() and item.state|d('present') not in [ 'init', 'absent', 'ignore' ]

- name: Configure workaround for logind sessions via sudo
  template:
    src: 'etc/profile.d/sudo_logind_session.sh.j2'
    dest: '/etc/profile.d/sudo_logind_session.sh'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: sudo__enabled|bool and sudo__logind_session|bool

- name: Update Ansible facts if they were modified
  meta: 'flush_handlers'
