---
# Copyright (C) 2015-2016 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2016 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Rescan LVM Volume Groups
  ansible.builtin.command: 'vgscan'  # noqa no-handler
  when: ((lvm__register_devices_filter | d() and lvm__register_devices_filter is changed) or
         (lvm__register_devices_global_filter | d() and lvm__register_devices_global_filter is changed))

- name: Unmount filesystems if requested
  ansible.posix.mount:
    name:   '{{ item.mount }}'
    src:    '{{ "/dev/mapper/" + item.vg | regex_replace("-", "--") + "-" + item.lv | regex_replace("-", "--") }}'
    fstype: '{{ item.fs_type | d(lvm__default_fs_type) }}'
    state:  'absent'
  with_items: '{{ lvm__logical_volumes }}'
  when: lvm__logical_volumes | d(False) and
        item.vg | d() and item.lv | d() and item.size | d() and
        item.mount | d(False) and
        item.state | d('present') == 'absent'

- name: Remove Logical Volumes if requested
  community.general.lvol:
    vg:    '{{ item.vg }}'
    lv:    '{{ item.lv }}'
    size:  '{{ item.size }}'
    force: '{{ item.force | d(omit) }}'
    state: 'absent'
  with_items: '{{ lvm__logical_volumes }}'
  when: lvm__logical_volumes | d(False) and
        item.vg | d() and item.lv | d() and item.size | d() and
        item.state | d('present') == 'absent'

- name: Manage LVM Volume Groups
  community.general.lvg:
    vg:         '{{ item.vg }}'
    pvs:        '{{ item.pvs if item.pvs is string else (item.pvs | join(",")) }}'
    state:      '{{ item.state | d("present") }}'
    pesize:     '{{ item.pesize | d(omit) }}'
    force:      '{{ item.force | d(omit) }}'
    vg_options: '{{ item.options | d(omit) }}'
  with_items: '{{ lvm__volume_groups }}'
  when: item.vg | d(False) and item.pvs | d(False)

- name: Manage LVM Thin Pools
  community.general.lvol:
    vg:       '{{ item.vg }}'
    thinpool: '{{ item.thinpool }}'
    size:     '{{ item.size }}'
    opts:     '{{ item.opts | d(omit) }}'
  with_items: '{{ lvm__thin_pools }}'
  when: lvm__thin_pools | d(False) and
        item.vg | d() and item.thinpool | d() and item.size | d() and
        item.state | d('present') != 'absent'

- name: Manage LVM Logical Volumes
  community.general.lvol:
    lv:         '{{ item.lv }}'
    vg:         '{{ item.vg }}'
    size:       '{{ item.size }}'
    opts:       '{{ item.opts | d(omit) }}'
    thinpool:   '{{ item.thinpool | d(omit) }}'
    force:      '{{ item.force | d(omit) }}'
    shrink:     '{{ item.force | d(False) }}'
    state:      'present'
  with_items: '{{ lvm__logical_volumes }}'
  when: lvm__logical_volumes | d(False) and
        item.vg | d() and item.lv | d() and item.size | d() and
        item.state | d('present') != 'absent'
  register: lvm__register_logical_volumes

- name: Manage filesystems
  community.general.filesystem:
    dev:    '{{ "/dev/mapper/" + item.vg | regex_replace("-", "--") + "-" + item.lv | regex_replace("-", "--") }}'
    fstype: '{{ item.fs_type | d(lvm__default_fs_type) }}'
    force:  '{{ item.fs_force | d(omit) }}'
    opts:   '{{ item.fs_opts | d(omit) }}'
    resizefs: '{{ item.fs_resizefs | d(omit) }}'
  with_items: '{{ lvm__logical_volumes }}'
  when: lvm__logical_volumes | d(False) and
        item.vg | d() and item.lv | d() and item.size | d() and
        item.state | d('present') != 'absent' and
        ((item.mount | d() and item.fs | d(True)) or item.fs | d()) and
        (not ansible_check_mode or
         (ansible_check_mode and lvm__register_logical_volumes is not changed))

- name: Manage mount points
  ansible.posix.mount:
    name:   '{{ item.mount }}'
    src:    '{{ "/dev/mapper/" + item.vg | regex_replace("-", "--") + "-" + item.lv | regex_replace("-", "--") }}'
    fstype: '{{ item.fs_type | d(lvm__default_fs_type) }}'
    opts:   '{{ item.mount_opts | d(lvm__default_mount_options) }}'
    state:  '{{ item.mount_state | d("mounted") }}'
    dump:   '{{ item.mount_dump | d(omit) }}'
    passno: '{{ item.mount_passno | d(omit) }}'
    fstab:  '{{ item.mount_fstab | d(omit) }}'
  with_items: '{{ lvm__logical_volumes }}'
  when: lvm__logical_volumes | d(False) and
        item.vg | d() and item.lv | d() and item.size | d() and
        item.fs | d(True) and item.mount | d() and
        item.state | d('present') != 'absent'
