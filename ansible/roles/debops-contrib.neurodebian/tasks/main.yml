---

- name: Configure NeuroDebian APT repository
  template:
    src: 'etc/apt/sources.list.d/neurodebian.sources.list.j2'
    dest: '/etc/apt/sources.list.d/neurodebian.sources.list'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: (neurodebian__deploy_state == "present")
  register: neurodebian__register_apt_repository

- name: Ensure the NeuroDebian APT repository is disabled
  file:
    path: '/etc/apt/sources.list.d/neurodebian.sources.list'
    state: 'absent'
  when: (neurodebian__deploy_state == "absent")
  register: neurodebian__register_apt_repository_absent

- name: Ensure NeuroDebian APT OpenPGP public key is in it's desired state
  apt_key:
    id: '{{ neurodebian__apt_key.id }}'
    data: '{{ neurodebian__apt_key.data | d(omit) }}'
    keyserver: '{{ neurodebian__apt_key.keyserver | d(omit) }}'
    state: '{{ "present" if (neurodebian__deploy_state == "present") else "absent" }}'
  register: neurodebian__register_apt_key
  until: neurodebian__register_apt_key is succeeded

- name: Update APT repository cache
  apt:
    update_cache: True
  # Not using a handler here as the handler would need to be flushed at this
  # point which is discouraged in DebOps because that would also flush all
  # other handlers notified up to this point.
  register: neurodebian__register_apt_update
  until: neurodebian__register_apt_update is succeeded
  when: neurodebian__register_apt_repository is changed or
        neurodebian__register_apt_repository_absent is changed or
        neurodebian__register_apt_key is changed

- name: Ensure specified packages are in there desired state
  package:
    name: '{{ item }}'
    state: '{{ "present" if (neurodebian__deploy_state == "present") else "absent" }}'
  with_flattened:
    - '{{ neurodebian__packages }}'
    - '{{ neurodebian__group_packages }}'
    - '{{ neurodebian__host_packages }}'
    - '{{ neurodebian__dependent_packages }}'
  register: neurodebian__register_packages
  until: neurodebian__register_packages is succeeded
  tags: [ 'role::neurodebian:pkgs' ]
