---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. Copyright (C) 2019 Innobyte Bechea Leonardo <https://www.innobyte.com/>
# .. Copyright (C) 2019 Innobyte Alin Alexandru <https://www.innobyte.com/>
# .. Copyright (C) 2021 DebOps <https://debops.org/>
# .. SPDX-License-Identifier: GPL-3.0-only

# .. _grafana__ref_defaults:

# .. contents:: Sections
#    :local:

# Installation, APT packages [[[
# ------------------------------

# .. envvar:: grafana__base_packages [[[
#
# List of APT packages which are required by the Grafana role.
grafana__base_packages: [ 'grafana' ]

                                                                   # ]]]
# .. envvar:: grafana__packages [[[
#
# List of APT packages to install on all hosts in Grafana inventory.
grafana__packages: []

                                                                   # ]]]
                                                                   # ]]]
# Network configuration [[[
# -------------------------

# .. envvar:: grafana__allow [[[
#
# List of IP addresses or CIDR subnets which are allowed to connect to the
# Grafana instances over the network, on all hosts in the Ansible inventory.
# If not specified, all hosts can connect to Grafana service.
grafana__allow: []

                                                                   # ]]]
# .. envvar:: grafana__group_allow [[[
#
# List of IP addresses or CIDR subnets which are allowed to connect to the
# Grafana instances over the network, on hosts in a specific Ansible inventory
# group. If not specified, all hosts can connect to Grafana service.
grafana__group_allow: []

                                                                   # ]]]
# .. envvar:: grafana__host_allow [[[
#
# List of IP addresses or CIDR subnets which are allowed to connect to the
# Grafana instances over the network, on specific hosts in the Ansible
# inventory. If not specified, all hosts can connect to Grafana service.
grafana__host_allow: []

                                                                   # ]]]
                                                                   # ]]]
# Grafana configuration [[[
# -------------------------
# .. envvar:: grafana__port [[[
#
# Port number on which this Grafana listens on.
grafana__port: '3000'

                                                                   # ]]]
# .. envvar:: grafana__domain [[[
#
# Domain of the Grafana instance.
grafana__domain: '{{ ansible_domain }}'

                                                                   # ]]]
# .. envvar:: grafana__fqdn [[[
#
# FQDN of the Grafana instance.
grafana__fqdn: 'grafana.{{ grafana__domain }}'

                                                                   # ]]]
# .. envvar:: grafana__additional_domains [[[
#
# Additional DNS names used by the grafana webserver. The users will be
# automatically redirected to the main FQDN of the service.
grafana__additional_domains: []

                                                                   # ]]]
# .. envvar:: grafana__nginx_enabled [[[
#
# Enable nginx as a proxy frontend to Grafana.
grafana__nginx_enabled: true

                                                                   # ]]]
# .. envvar:: grafana__secret_key [[[
#
# Secret key used for signing
grafana__secret_key: '{{ lookup("password", secret
                       + "/grafana/credentials/" + inventory_hostname
                       + "/secret_key length=20 chars=ascii_letters,digits") }}'
                                                                   # ]]]
# .. envvar:: grafana_admin__password [[[
#
# Password set on admin account, saved in secrets. If not specified,
# a random password will be generated for the admin account.
grafana__admin_password: '{{ lookup("password", secret
                           + "/grafana/credentials/" + inventory_hostname
                           + "/admin_password length=12 chars=ascii_letters,digits") }}'
                                                                   # ]]]
                                                                   # ]]]

# Configuration for other Ansible roles [[[
# -----------------------------------------

# .. envvar:: grafana__upstream_apt_id [[[
#
# The Grafana fingerprint.
grafana__upstream_apt_id: '4E40 DDF6 D76E 284A 4A67  80E4 8C8C 34C5 2409 8CB6'

                                                                   # ]]]
# .. envvar:: grafana__upstream_apt_repository [[[
#
# The APT repository URI of the upstream Grafana repository.
grafana__upstream_apt_repository: 'deb https://packages.grafana.com/oss/deb stable main'

                                                                   # ]]]
# .. envvar:: grafana__keyring__dependent_apt_keys [[[
#
# Configuration for the :ref:`debops.keyring` Ansible role.
grafana__keyring__dependent_apt_keys:
  - id: '{{ grafana__upstream_apt_id }}'
    repo: '{{ grafana__upstream_apt_repository }}'

                                                                   # ]]]
# .. envvar:: grafana__ferm__dependent_rules [[[
#
# Configuration for the :ref:`debops.ferm` Ansible role.
grafana__ferm__dependent_rules:
  - type: 'accept'
    dport: [ 'grafana' ]
    protocol: [ 'tcp' ]
    saddr: '{{ grafana__allow + grafana__group_allow + grafana__host_allow }}'
    weight: '50'
    by_role: 'debops.grafana'
    rule_state: '{{ "absent"
                    if grafana__nginx_enabled|bool
                    else "present" }}'

  - type: 'accept'
    dport: [ 'http' ]
    protocol: [ 'tcp' ]
    saddr: '{{ grafana__allow + grafana__group_allow + grafana__host_allow }}'
    weight: '50'
    by_role: 'debops.grafana'
    rule_state: '{{ "present"
                    if grafana__nginx_enabled|bool
                    else "absent" }}'

  - type: 'accept'
    dport: [ 'https' ]
    protocol: [ 'tcp' ]
    saddr: '{{ grafana__allow + grafana__group_allow + grafana__host_allow }}'
    weight: '50'
    by_role: 'debops.grafana'
    rule_state: '{{ "present"
                    if grafana__nginx_enabled|bool and pki_enabled|bool
                    else "absent" }}'


                                                                   # ]]]
# .. envvar:: grafana__etc_services__dependent_list [[[
#
# Configuration for the :ref:`debops.etc_services` Ansible role.
grafana__etc_services__dependent_list:
  - name: 'grafana'
    port: '{{ grafana__port }}'
    protocol: [ 'tcp' ]
    comment: 'Grafana Web Interface'
                                                                   # ]]]
# .. envvar:: grafana__nginx__dependent_upstreams [[[
#
# Configuration of the Grafana nginx upstream, used by the :ref:`debops.nginx`
# Ansible role.
grafana__nginx__dependent_upstreams:
  - name: 'grafana'
    server: 'localhost:{{ grafana__port }}'

                                                                   # ]]]
# .. envvar:: grafana__nginx__dependent_servers [[[
#
# Configuration of the Grafana nginx server, used by the :ref:`debops.nginx`
# Ansible role.
grafana__nginx__dependent_servers:
  - by_role: 'debops.grafana'
    name: '{{ [ grafana__fqdn ] + grafana__additional_domains }}'
    filename: 'debops.grafana'
    redirect_from: True
    favicon: False
    location:
      '/': |
        proxy_pass 'http://localhost:{{ grafana__port }}';
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

                                                                   # ]]]
                                                                   # ]]]
