---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. Copyright (C) 2021 Pedro Luis Lopez <pedroluis.lopezsanchez@gmail.com>
# .. Copyright (C) 2021 DebOps <https://debops.org/>
# .. SPDX-License-Identifier: GPL-3.0-or-later

# .. _ghostunnel__ref_defaults:

# debops.ghostunnel default variables
# ===================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# Basic configuration [[[
# -----------------------

# .. envvar:: ghostunnel__user [[[
#
# Name of the UNIX system account which is used to run Ghostunnel.
ghostunnel__user: 'ghostunnel'

                                                                   # ]]]
# .. envvar:: ghostunnel__group [[[
#
# Name of the UNIX system group which is used to run Ghostunnel.
ghostunnel__group: 'ghostunnel'

                                                                   # ]]]
# .. envvar:: ghostunnel__default_append_groups [[[
#
# List of default additional system groups to append to the Ghostunnel system user.
ghostunnel__default_append_groups:

  - 'ssl-cert'

                                                                   # ]]]
# .. envvar:: ghostunnel__append_groups [[[
#
# List of additional system groups to append to the Ghostunnel system user.
# Some groups are required for access to sockets.
ghostunnel__append_groups: []

                                                                   # ]]]
# .. envvar:: ghostunnel__combined_append_groups [[[
#
# The variable which combines all other Ghostunnel additional system groups
# to append to the Ghostunnel system user and is used in the role tasks and templates.
ghostunnel__combined_append_groups: '{{ ghostunnel__default_append_groups
                                        + ghostunnel__append_groups }}'

                                                                   # ]]]
# .. envvar:: ghostunnel__services [[[
#
# Ghostunnel services to configure.
# :ref:`ghostunnel__services` for more details.
ghostunnel__services: []

                                                                   # ]]]
# .. envvar:: ghostunnel__group_services [[[
#
# Ghostunnel services to configure in specific Ansible
# inventory group.
ghostunnel__group_services: []

                                                                   # ]]]
# .. envvar:: ghostunnel__host_services [[[
#
# Ghostunnel services to configure in specific Ansible
# inventory host.
ghostunnel__host_services: []

                                                                   # ]]]
# .. envvar:: ghostunnel__dependent_services [[[
#
# Ghostunnel services configured by other Ansible roles using role
# dependent variables.
ghostunnel__dependent_services: []

                                                                   # ]]]
# .. envvar:: ghostunnel__combined_services [[[
#
# The variable which combines all other Ghostunnel services
# configuration variables and is used in the role tasks and templates.
ghostunnel__combined_services: '{{ ghostunnel__services
                                   + ghostunnel__group_services
                                   + ghostunnel__host_services
                                   + ghostunnel__dependent_services }}'

                                                                   # ]]]
                                                                   # ]]]
# Go application deployment [[[
# -----------------------------

# These variables control how the :command:`ghostunnel` binary is installed on the
# host. The installation is performed by the :ref:`debops.golang` role, refer
# to its documentation for details. The installation definition can be found in
# the :envvar:`ghostunnel__golang__dependent_packages` variable.

# .. envvar:: ghostunnel__upstream_gpg_key [[[
#
# The fingerprint of the GPG key which is used to sign the Ghostunnel releases. It
# will be used to verify the downloaded signature file as well as the
# :command:`git` tags in the source repository.
ghostunnel__upstream_gpg_key: '2C67 955A 411C D552 810E 7598 CE8B 85D9 1C00 4E26'

                                                                   # ]]]
# .. envvar:: ghostunnel__upstream_release [[[
#
# The version of Ghostunnel to download from upstream on a given host. You should
# specify the ``vX.Y.Z`` tagged release number.
#
# Available Ghostunnel releases and tags: https://github.com/ghostunnel/ghostunnel/releases
ghostunnel__upstream_release: 'v1.5.3'

                                                                   # ]]]
# .. envvar:: ghostunnel__upstream_type [[[
#
# Specify the method which should be used to install Ghostunnel binary. Either
# ``url`` to download the configured binary directly and verify it using the
# specified checksum, or ``git`` to clone the Ghostunnel :command:`git` repository
# and build the specified version from source.
ghostunnel__upstream_type: 'url'

                                                                   # ]]]
# .. envvar:: ghostunnel__upstream_url_mirror [[[
#
# The base URL of the Ghostunnel download page, should end with the ``/`` character.
ghostunnel__upstream_url_mirror: 'https://github.com/ghostunnel/ghostunnel/releases/'

                                                                   # ]]]
# .. envvar:: ghostunnel__upstream_platform [[[
#
# Specify the OS type and platform architecture to use for installation. The
# list of supported architectures and OS types can be found on the
# https://github.com/ghostunnel/ghostunnel/releases/ page.
ghostunnel__upstream_platform: 'linux-amd64-with-pkcs11'

                                                                   # ]]]
# .. envvar:: ghostunnel__upstream_url_checksum [[[
#
# The checksum of release of Ghostunnel.
# Available Ghostunnel releases: https://github.com/ghostunnel/ghostunnel/releases
ghostunnel__upstream_url_checksum: 'ab39ce50e9797cd30fbf90a13d9bc87976e94d5a2231051884e1033ffe57fe45'

                                                                   # ]]]
# .. envvar:: ghostunnel__upstream_url_binary [[[
#
# The path to the Ghostunnel binary on the upstream HTTPS server.
ghostunnel__upstream_url_binary: '{{ ghostunnel__upstream_release +
                                     "/ghostunnel-" + ghostunnel__upstream_release +
                                     "-" + ghostunnel__upstream_platform }}'

                                                                   # ]]]
# .. envvar:: ghostunnel__upstream_git_repository [[[
#
# The URL of the upstream :command:`git` repository which contains Ghostunnel source
# code.
ghostunnel__upstream_git_repository: 'https://github.com/ghostunnel/ghostunnel'

                                                                   # ]]]
# .. envvar:: ghostunnel__binary [[[
#
# Absolute path to the :command:`ghostunnel` Go binary installed on the host.
# See the :ref:`debops.golang` role for more details.
ghostunnel__binary: '{{ ansible_local.golang.binaries["ghostunnel"]
                        if (ansible_local.golang.binaries|d() and
                            ansible_local.golang.binaries.ghostunnel|d())
                        else "" }}'
                                                                   # ]]]
                                                                   # ]]]
# Ghostunnel default configuration [[[
# ------------------------------------

# .. envvar:: ghostunnel__default_configuration [[[
#
# The default configuration options which should be present in the ghostunnel
# configuration files.
# :ref:`ghostunnel__services` for more details.
ghostunnel__default_configuration:

  # Graceful shutdown timeout. Terminates after timeout even if connections
  # still open.
  # For services that keep connections open like Elasticseearch, set a shutdown
  # timeout in '1s' for correct Ghostunnel service restarts.
  shutdown_timeout: '5m'

  # Timeout for establishing connections, handshakes.
  connect_timeout: '10s'

  # Silence log messages (can be all, conns, conn-errs, handshake-errs;
  # or list for more than one)
  quiet: 'conns'

                                                                   # ]]]
# .. envvar:: ghostunnel__configuration [[[
#
# The global configuration options which should be present in the ghostunnel
# configuration files. It overrides ``ghostunnel__default_configuration``
# :ref:`ghostunnel__services` for more details.
ghostunnel__configuration: {}

                                                                   # ]]]
                                                                   # ]]]
# SSL configuration [[[
# ---------------------

# .. envvar:: ghostunnel__pki [[[
#
# Enable or disable support for SSL in Ghostunnel (using :ref:`debops.pki`).
# You can not use Ghostunnel role with pki disabled.
ghostunnel__pki: '{{ True
                     if (ansible_local.pki.enabled|d()|bool and
                         ghostunnel__pki_realm in ansible_local.pki.known_realms)
                     else False }}'

                                                                   # ]]]
# .. envvar:: ghostunnel__pki_path [[[
#
# Base path for PKI directory.
ghostunnel__pki_path: '{{ ansible_local.pki.base_path|d("/etc/pki") }}'

                                                                   # ]]]
# .. envvar:: ghostunnel__pki_realm [[[
#
# Default PKI realm used by Ghostunnel servers and clients.
ghostunnel__pki_realm: '{{ ansible_local.pki.realm|d("domain") }}'

                                                                   # ]]]
# .. envvar:: ghostunnel__pki_ca [[[
#
# Root CA certificate used by Ghostunnel servers and clients, relative to :envvar:`ghostunnel__pki_realm`.
ghostunnel__pki_ca: 'CA.crt'

                                                                   # ]]]
# .. envvar:: ghostunnel__pki_crt [[[
#
# Host certificate used by Ghostunnel servers and clients, relative to :envvar:`ghostunnel__pki_realm`.
ghostunnel__pki_crt: 'default.crt'

                                                                   # ]]]
# .. envvar:: ghostunnel__pki_key [[[
#
# Host private key used by Ghostunnel servers and clients, relative to :envvar:`ghostunnel__pki_realm`.
ghostunnel__pki_key: 'default.key'

                                                                   # ]]]
                                                                   # ]]]
# Configuration for other Ansible roles [[[
# -----------------------------------------

# .. envvar:: ghostunnel__golang__dependent_packages [[[
#
# Configuration of the :ref:`debops.golang` role.
ghostunnel__golang__dependent_packages:

  - name: 'ghostunnel'
    upstream_type: '{{ ghostunnel__upstream_type }}'
    gpg: '{{ ghostunnel__upstream_gpg_key }}'
    url:

      - src: '{{ ghostunnel__upstream_url_mirror + "download/" + ghostunnel__upstream_url_binary }}'
        dest: 'releases/{{ ghostunnel__upstream_platform }}/ghostunnel/ghostunnel/{{ ghostunnel__upstream_url_binary }}'
        checksum: 'sha256:{{ ghostunnel__upstream_url_checksum }}'

    url_binaries:

      - src: 'releases/{{ ghostunnel__upstream_platform }}/ghostunnel/ghostunnel/{{ ghostunnel__upstream_url_binary }}'
        dest: 'ghostunnel'
        notify: 'Restart ghostunnel services'

    git:

      - repo: '{{ ghostunnel__upstream_git_repository }}'
        version: '{{ ghostunnel__upstream_release }}'
        build_script: |
          make clean ghostunnel

    git_binaries:

      - src: '{{ ghostunnel__upstream_git_repository.split("://")[1] + "/ghostunnel" }}'
        dest: 'ghostunnel'
        notify: 'Restart ghostunnel services'

                                                                   # ]]]
# .. envvar:: ghostunnel__etc_services__dependent_list [[[
#
# Configuration for the :ref:`debops.etc_services` Ansible role.
ghostunnel__etc_services__dependent_list: '{{ lookup("template",
                                              "lookup/ghostunnel__etc_services__dependent_list.j2") }}'

                                                                   # ]]]
# .. envvar:: ghostunnel__ferm__dependent_rules [[[
#
# Configuration for the :ref:`debops.ferm` Ansible role.
ghostunnel__ferm__dependent_rules: '{{ lookup("template",
                                       "lookup/ghostunnel__ferm__dependent_rules.j2") }}'

                                                                   # ]]]
                                                                   # ]]]
