---
# Copyright (C) 2015-2017 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2017 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  import_role:
    name: 'secret'

- name: Get default PostgreSQL version
  environment:
    LC_ALL: 'C'
  shell: "set -o nounset -o pipefail -o errexit &&
          apt-cache policy postgresql | grep -E '^\\s+Candidate:\\s+' | awk '{print $2}' | cut -d+ -f1"
  args:
    executable: 'bash'
  register: postgresql_server__register_version
  changed_when: False
  check_mode: False
  tags: [ 'role::postgresql_server:packages', 'role::postgresql_server:config',
          'role::postgresql_server:auto_backup' ]

- name: Set default PostgreSQL version variable
  set_fact:
    postgresql_server__version: '{{ (ansible_local.postgresql.version
                                     if (ansible_local.postgresql.version|d())
                                     else (postgresql_server__preferred_version
                                           if postgresql_server__preferred_version|d()
                                           else postgresql_server__register_version.stdout)) }}'
  tags: [ 'role::postgresql_server:packages', 'role::postgresql_server:config',
          'role::postgresql_server:auto_backup' ]

- include: install_postgresql.yml
  tags: [ 'role::postgresql_server:packages' ]

- name: Configure custom PostgreSQL data directory
  lineinfile:
    path: '/etc/postgresql-common/createcluster.conf'
    regexp: '^data_directory\s+='
    line: "data_directory = '{{ postgresql_server__data_directory }}/%v/%c'"
    mode: '0644'
  when: postgresql_server__data_directory != '/var/lib/postgresql'

- name: Make sure that custom PostgreSQL data directory exists
  file:
    path: '{{ postgresql_server__data_directory }}'
    state: 'directory'
    owner: '{{ postgresql_server__user }}'
    group: '{{ postgresql_server__group }}'
    mode: '0750'
  when: postgresql_server__data_directory != '/var/lib/postgresql'

- name: Make sure that custom PostgreSQL Log directory exists
  file:
    path: '{{ postgresql_server__log_directory }}'
    state: 'directory'
    owner: '{{ postgresql_server__user }}'
    group: '{{ postgresql_server__group }}'
    mode: '0750'
  when: postgresql_server__log_directory|d()

- name: Count number of currently configured clusters
  set_fact:
    postgresql_server__fact_cluster_count: '{{ (postgresql_server__clusters|length|int) * 1 }}'
  tags: [ 'role::postgresql_server:config' ]

- name: Get current maximum shared memory value
  command: cat /proc/sys/kernel/shmmax
  register: postgresql_server__register_sysctl_shmmax
  changed_when: False
  check_mode: False
  tags: [ 'role::postgresql_server:config' ]

- include: manage_clusters.yml

- include: secure_installation.yml

- include: manage_autopostgresqlbackup.yml
  when: postgresql_server__autopostgresqlbackup|bool
  tags: [ 'role::postgresql_server:auto_backup' ]

- name: Make sure that Ansible local fact directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save PostgreSQL local facts
  template:
    src: 'etc/ansible/facts.d/postgresql.fact.j2'
    dest: '/etc/ansible/facts.d/postgresql.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts', 'role::postgresql_server:config' ]

- name: Re-read local facts if they have been modified
  meta: 'flush_handlers'
  #tags: [ 'role::postgresql_server:config' ]
