---
# Copyright (C) 2014-2020 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2014-2020 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  import_role:
    name: 'secret'

- name: Install required APT packages
  package:
    name: '{{ q("flattened", mailman__base_packages
                             + mailman__packages) }}'
    state: 'present'
  register: mailman__register_packages
  until: mailman__register_packages is succeeded

- name: Create systemd configuration directories
  file:
    path: '{{ "/etc/systemd/system/" + item }}'
    state: 'directory'
    mode: '0755'
  loop: [ 'mailman3.service.d', 'mailman3-web.service.d' ]
  when: ansible_service_mgr == 'systemd'

- name: Configure systemd services
  template:
    src: '{{ "etc/systemd/system/" + item + "/dependencies.conf.j2" }}'
    dest: '{{ "/etc/systemd/system/" + item + "/dependencies.conf" }}'
    mode: '0644'
  loop: [ 'mailman3.service.d', 'mailman3-web.service.d' ]
  notify: [ 'Reload service manager' ]
  when: ansible_service_mgr == 'systemd'

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save Mailman local facts
  template:
    src: 'etc/ansible/facts.d/mailman.fact.j2'
    dest: '/etc/ansible/facts.d/mailman.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  meta: 'flush_handlers'

- name: Generate Mailman Core configuration
  template:
    src: 'etc/mailman3/{{ item }}.j2'
    dest: '/etc/mailman3/{{ item }}'
    group: '{{ mailman__group }}'
    mode: '0640'
  loop: [ 'mailman.cfg', 'mailman-hyperkitty.cfg' ]
  notify: [ 'Restart mailman3' ]

- name: Generate Mailman Web configuration
  template:
    src: 'etc/mailman3/mailman-web.py.j2'
    dest: '/etc/mailman3/mailman-web.py'
    group: 'www-data'
    mode: '0640'
  notify: [ 'Restart mailman3-web' ]

- name: Create required template directories
  file:
    path: '{{ "/var/lib/mailman3/templates/" + (item.name | dirname) }}'
    state: 'directory'
    owner: '{{ mailman__user }}'
    group: '{{ mailman__group }}'
    mode: '0755'
  loop: '{{ mailman__combined_templates | debops.debops.parse_kv_items }}'
  when: item.state|d('present') != 'absent'

- name: Remove custom Mailman templates if requested
  file:
    path: '{{ "/var/lib/mailman3/templates/" + item.name }}'
    state: 'absent'
  loop: '{{ mailman__combined_templates | debops.debops.parse_kv_items }}'
  when: item.state|d('present') == 'absent'

- name: Generate custom Mailman templates
  copy:
    content: '{{ item.content | d("") }}'
    dest: '{{ "/var/lib/mailman3/templates/" + item.name }}'
    owner: '{{ mailman__user }}'
    group: '{{ mailman__group }}'
    mode: '0644'
  loop: '{{ mailman__combined_templates | debops.debops.parse_kv_items }}'
  when: item.state|d('present') != 'absent'

- name: Ensure Postfix lookup tables exist
  command: 'mailman aliases'
  args:
    creates: '/var/lib/mailman3/data/postfix_domains'
  register: mailman__register_aliases
  become: True
  become_user: '{{ mailman__user }}'

- name: Create Django superuser account
  django_manage:  # noqa no-handler
    command: 'createsuperuser --noinput --username={{ mailman__superuser_name }} --email={{ mailman__superuser_email }}'
    app_path: '/usr/share/mailman3-web'
  when: mailman__register_aliases is changed and
        not mailman__ldap_enabled|bool
