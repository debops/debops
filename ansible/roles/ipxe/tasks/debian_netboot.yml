---

- name: Create Debian netboot directories
  file:
    path: '{{ ipxe__debian_netboot_src + "/" + item.release + "/" + item.architecture
              + "/" + item.netboot_version + (item.netboot_subdir | d("")) }}'
    state: 'directory'
    mode: '0755'
  loop: '{{ ipxe__debian_netboot_combined_release_map | parse_kv_items }}'
  when: item.name|d() and item.state|d('present') not in [ 'absent', 'ignore' ] and
        item.release in ipxe__debian_netboot_releases and item.architecture in ipxe__debian_netboot_architectures

- name: Create Debian installer directories
  file:
    path: '{{ ipxe__debian_netboot_pxe_root + "/" + item.release + "/" + item.architecture
              + "/" + item.netboot_version + (item.netboot_subdir | d("")) }}'
    state: 'directory'
    mode: '0775'  # tarball enforces this mode
  loop: '{{ ipxe__debian_netboot_combined_release_map | parse_kv_items }}'
  when: item.name|d() and item.state|d('present') not in [ 'absent', 'ignore' ] and
        item.release in ipxe__debian_netboot_releases and item.architecture in ipxe__debian_netboot_architectures

- name: Download Debian netboot tarballs
  get_url:
    url: '{{ item.netboot_url | d(ipxe__debian_netboot_mirror + "/dists/" + item.release
                                  + "/main/installer-" + item.architecture + "/"
                                  + item.netboot_version + "/images/netboot"
                                  + (item.netboot_subdir | d("")) + "/netboot.tar.gz") }}'
    dest: '{{ ipxe__debian_netboot_src + "/" + item.release + "/" + item.architecture + "/"
              + item.netboot_version + (item.netboot_subdir | d("")) + "/netboot.tar.gz" }}'
    checksum: '{{ item.netboot_checksum | d(omit) }}'
  loop: '{{ ipxe__debian_netboot_combined_release_map | parse_kv_items }}'
  when: item.name|d() and item.state|d('present') not in [ 'absent', 'ignore' ] and
        item.release in ipxe__debian_netboot_releases and item.architecture in ipxe__debian_netboot_architectures
  register: ipxe__register_get_netboot
  until: ipxe__register_get_netboot is succeeded

- name: Unpack Debian netboot tarballs
  unarchive:
    src: '{{ ipxe__debian_netboot_src + "/" + item.release + "/" + item.architecture + "/"
             + item.netboot_version + (item.netboot_subdir | d("")) + "/netboot.tar.gz" }}'
    dest: '{{ ipxe__debian_netboot_pxe_root + "/" + item.release + "/" + item.architecture + "/"
              + item.netboot_version + (item.netboot_subdir | d("")) }}'
    remote_src: True
    creates: '{{ ipxe__debian_netboot_pxe_root + "/" + item.release + "/" + item.architecture + "/"
                 + item.netboot_version + (item.netboot_subdir | d("")) + "/pxelinux.0" }}'
  loop: '{{ ipxe__debian_netboot_combined_release_map | parse_kv_items }}'
  register: ipxe__register_debian_installer
  when: item.name|d() and item.state|d('present') not in [ 'absent', 'ignore' ] and
        item.release in ipxe__debian_netboot_releases and item.architecture in ipxe__debian_netboot_architectures

- name: Point current Debian netboot symlink to correct version
  file:
    path: '{{ ipxe__debian_netboot_pxe_root + "/" + item.release + "/" + item.architecture + "/current" }}'
    src: '{{ item.netboot_version }}'
    state: 'link'
  loop: '{{ ipxe__debian_netboot_combined_release_map | parse_kv_items }}'
  when: item.name|d() and item.state|d('present') not in [ 'absent', 'ignore' ] and
        item.release in ipxe__debian_netboot_releases and item.architecture in ipxe__debian_netboot_architectures and
        (item.netboot_current|d(True))|bool

- name: Create Debian firmware directories
  file:
    path: '{{ ipxe__debian_netboot_src + "/" + item.release + "/non-free/" + item.firmware_version }}'
    state: 'directory'
    mode: '0755'
  loop: '{{ ipxe__debian_netboot_combined_release_map | parse_kv_items }}'
  when: ipxe__debian_netboot_firmware|bool and item.name|d() and item.state|d('present') not in [ 'absent', 'ignore' ] and
        item.release in ipxe__debian_netboot_releases and item.firmware_version|d()

- name: Download Debian firmware tarballs
  get_url:
    url: '{{ item.firmware_url | d(ipxe__debian_netboot_firmware_mirror + "/" + item.release + "/"
                                   + item.firmware_version + "/firmware.cpio.gz") }}'
    dest: '{{ ipxe__debian_netboot_src + "/" + item.release + "/non-free/"
              + item.firmware_version + "/firmware.cpio.gz" }}'
    checksum: '{{ item.firmware_checksum | d(omit) }}'
  loop: '{{ ipxe__debian_netboot_combined_release_map | parse_kv_items }}'
  when: ipxe__debian_netboot_firmware|bool and item.name|d() and item.state|d('present') not in [ 'absent', 'ignore' ] and
        item.release in ipxe__debian_netboot_releases and item.firmware_version|d()
  register: ipxe__register_get_firmware
  until: ipxe__register_get_firmware is succeeded

- name: Include firmware in the Debian netboot installers
  shell: cat {{ ipxe__debian_netboot_src + "/" + item.item.release + "/non-free/"
                + item.item.firmware_version + "/firmware.cpio.gz" }}
             >> {{ ipxe__debian_netboot_pxe_root + "/" + item.item.release + "/" + item.item.architecture + "/"
                   + item.item.netboot_version + (item.item.netboot_subdir | d("")) + "/debian-installer/"
                   + item.item.architecture + "/initrd.gz" }}
  loop: '{{ ipxe__register_debian_installer.results }}'
  when: ipxe__debian_netboot_firmware|bool and item.item.firmware_version|d() and item is changed
