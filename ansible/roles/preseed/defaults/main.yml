---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. _preseed__ref_defaults:

# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# .. Preseed server configuration [[[1
#
# --------------------------------
#   Preseed server configuration
# --------------------------------

# .. envvar:: preseed__subdomain
#
# Name of the subdomain which will be used to serve Preseed files.
preseed__subdomain: 'seed'


# .. envvar:: preseed__base_domain
#
# Full base domain on which the Preseed files are located, required for download of
# postinst scripts.
preseed__base_domain: '{{ preseed__subdomain + "." + ansible_domain }}'


# .. envvar:: preseed__domains
#
# A set of domains configured in nginx which server Preseed files. First
# element of the list should be a "normal" domain, the rest are regular
# expressions which look up correct subdirectories to serve files.
preseed__domains:
  - '{{ preseed__base_domain }}'
  - '{{ preseed__base_domain | split(".") | first }}'
  - '{{ "~^(?<preseed>.+)\." + preseed__base_domain | replace(".","\.") + "$" }}'
  - '{{ "~^(?<preseed>.+)\." + ansible_domain      | replace(".","\.") + "$" }}'
  - '{{ "~^(?<preseed>.+)\." + preseed__subdomain   | replace(".","\.") + "$" }}'
  - '{{ "~^(?<preseed>.+)$" }}'


# .. envvar:: preseed__www
#
# Path to main directory where Preseed files are served from.
preseed__www: '{{ (ansible_local.nginx.www
                   if (ansible_local|d() and ansible_local.nginx|d() and
                       ansible_local.nginx.www|d())
                   else "/srv/www") + "/preseed/configs" }}'


# .. envvar:: preseed__www_webserver
#
# Path to "current" Preseed root directory, configured in the webserver
preseed__www_webserver: '{{ preseed__www + "/$preseed" }}'


# .. envvar:: preseed__nginx_auth_realm
#
# Text displayed in the web browser login dialog when :ref:`debops.nginx` access
# policy is enabled.
preseed__nginx_auth_realm: 'Preseed access is restricted'


# .. envvar:: preseed__nginx_access_policy
#
# Name of the :program:`nginx` access policy to configure for Preseed server.
# See :ref:`debops.nginx` role for more details.
preseed__nginx_access_policy: ''


# .. envvar:: preseed__user
#
# System user account which owns the Preseed files.
preseed__user: 'preseed'


# .. envvar:: preseed__group
#
# System group which owns the Preseed files.
preseed__group: 'preseed'


# .. envvar:: preseed__home
#
# Home directory of the Pressed user account.
preseed__home: '{{ (ansible_local.root.home
                    if (ansible_local|d() and ansible_local.root|d() and
                        ansible_local.root.home|d())
                    else "/var/local") + "/" + preseed__user }}'


# .. Default Preseed list [[[1
#
# ------------------------
#   Default Preseed list
# ------------------------

# .. envvar:: preseed__distribution
#
# Linux distribution configured by default for preseeding
preseed__distribution: '{{ ansible_distribution }}'


# .. envvar:: preseed__release
#
# Linux distribution release configured by default for preseeding
preseed__release: '{{ ansible_distribution_release }}'


# .. envvar:: preseed__configs
#
# List of Preseed definitions. See :ref:`preseed__ref_configs` for more details.
preseed__configs:

  # Debian - default configuration which will ask the user for disk
  # configuration during installation.
  - name: 'debian'
    type: 'debian'
    release: 'wheezy'

  - name: 'debian'
    type: 'debian'
    release: 'jessie'

  # Automated Debian configuration which will format the first disk as a ``/``
  # (system) partition. Useful for virtual machines, but nothing else. Use at
  # your own risk.
  - name: 'debian-vm'
    type: 'debian-destroy'
    release: 'wheezy'

  - name: 'debian-vm'
    type: 'debian-destroy'
    release: 'jessie'


# .. Administrator account options [[[1
#
# ---------------------------------
#   Administrator account options
# ---------------------------------

# .. envvar:: preseed__admin
#
# Enable or disable creation of an administrator account using a
# :file:`postinst.sh` script.
preseed__admin: True


# .. envvar:: preseed__admin_system
#
# If enabled, administrator account will be created as a "system" account (UID
# < 1000, usually ~104). If disabled (default), administrator account will be
# a regular user account (UID >= 1000).
preseed__admin_system: True


# .. envvar:: preseed__admin_name
#
# Name of the administrator account. By default the same as the
# user that runs Ansible, taken from Ansible Controller.
preseed__admin_name: '{{ (ansible_ssh_user
                          if (ansible_ssh_user|d() and
                              ansible_ssh_user != "root")
                          else lookup("env","USER")) }}'


# .. envvar:: preseed__admin_groups
#
# Default system groups to add the administrator account to. They will be
# created if not present.
preseed__admin_groups: [ 'admins', 'staff', 'adm' ]


# .. envvar:: preseed__admin_home
#
# Home directory of the administrator account, when it's a regular user
# account.
preseed__admin_home: '{{ "/home/" + preseed__admin_name }}'


# .. envvar:: preseed__admin_system_home
#
# Home directory of the administrator account, when it's a system account.
preseed__admin_system_home: '{{ (ansible_local.root.home
                                 if (ansible_local|d() and ansible_local.root|d() and
                                     ansible_local.root.home|d())
                                 else "/var/local") + "/" + preseed__admin_name }}'


# .. envvar:: preseed__admin_home_group
#
# Specify administrator account home directory group
preseed__admin_home_group: '{{ preseed__admin_groups[0] }}'


# .. envvar:: preseed__admin_home_mode
#
# Specify permissions for administrator account home directory
preseed__admin_home_mode: '0750'


# .. envvar:: preseed__admin_comment
#
# A contents of the GECOS field of the administrator account.
preseed__admin_comment: "System Administrator"


# .. envvar:: preseed__admin_shell
#
# Shell set by default on administrator account.
preseed__admin_shell: '/bin/bash'


# .. envvar:: preseed__sudo
#
# If enabled, specified admin group will be configured in :command:`sudo` to allow
# access to ``root`` account without password.
preseed__sudo: True


# .. envvar:: preseed__sudo_group
#
# Name of the system group which will be configured with passwordless :command:`sudo`
# access. By default it's the first group set in :envvar:`preseed__admin_groups`.
preseed__sudo_group: '{{ preseed__admin_groups[0] }}'


# .. envvar:: preseed__admin_sshkeys
#
# List of SSH public keys installed on administrator account, as well as the
# ``root`` account.
preseed__admin_sshkeys: [ '{{ lookup("pipe", "ssh-add -L | grep ^ssh || cat ~/.ssh/id_rsa.pub || true") }}' ]


# .. Debian Preseed configuration [[[1
#
# --------------------------------
#   Debian Preseed configuration
# --------------------------------
#
# This is a non-exhaustive list of parameters that can be used to configure
# Debian Preseed provided with the role. More parameters can be found inside
# the :file:`preseed.cfg` as well as the :file:`postinst.sh` script.


# .. envvar:: preseed__debian_locale
#
# Default locale configuration enabled during installation.
preseed__debian_locale: 'en_US.UTF-8'


# .. envvar:: preseed__debian_keyboard_keymap
#
# Keyboard layout enabled during installation.
# The current keymap layout can be looked up via :command:`setxkbmap -query`.
preseed__debian_keyboard_keymap: 'en'


# .. envvar:: preseed__debian_language
#
# Default interface language enabled during installation.
preseed__debian_language: 'English'


# .. envvar:: preseed__debian_timezone
#
# Time zone configured on the host during installation.
preseed__debian_timezone: 'Etc/UTC'


# .. envvar:: preseed__debian_ntp_server
#
# NTP server to get the time from when installing.
# If False, the default will not be changed.
preseed__debian_ntp_server: False


# .. envvar:: preseed__debian_mirror_hostname
#
# Address of HTTP mirror used during installation.
preseed__debian_mirror_hostname: 'httpredir.debian.org'


# .. envvar:: preseed__debian_mirror_directory
#
# Subdirectory on the HTTP mirror which holds the Debian repository.
preseed__debian_mirror_directory: '/debian'


# .. envvar:: preseed__debian_mirror_proxy
#
# Proxy server to use for APT. Be careful when you set because of a bug which
# causes this proxy to be used for all programs and not just apt as one might
# expect. The default scripts use a workaround to still allow the apt proxy
# preseeding.
preseed__debian_mirror_proxy: ''


# .. envvar:: preseed__debian_packages
#
# List of base Debian packages to install on the new host
preseed__debian_packages: [ 'ed', 'lsb-release', 'wget',
                            'make', 'sudo', 'gnupg-curl', 'git',
                            'curl', 'rsync', 'netcat-openbsd', 'vlan',
                            'bridge-utils', 'openssh-server', 'bsdutils',
                            'acl', 'apt-transport-https', 'resolvconf' ]


# .. envvar:: preseed__debian_root_password_length
#
# Length of the ``root`` account password generated by Ansible
preseed__debian_root_password_length: '32'


# .. envvar:: preseed__debian_root_password
#
# Encrypted random ``root`` password generated by Ansible and saved in
# :file:`secret/` directory. See :ref:`debops.secret` role for more details.
preseed__debian_root_password: "{{ lookup('password', secret + '/credentials/' + ansible_fqdn +
                                  '/preseed/debian/root/password encrypt=sha512_crypt length=' +
                                  preseed__debian_root_password_length) }}"


# .. envvar:: preseed__debian_ask_for_additional_install_media
#
# Should the installer when configuring APT ask for additional installation media?
# This seems to be only relevant when not installing from network/PXE.
preseed__debian_ask_for_additional_install_media: False


# .. Debian Preseed GRUB configuration [[[[1
#
# -------------------------------------
#   Debian Preseed GRUB configuration
# -------------------------------------

# .. envvar:: preseed__grub_preseed
#
# Should GRUB be configured by this role?
# If set to ``False``, all following options in the ``preseed__grub_``
# namespace will not have any effect.
preseed__grub_preseed: True


# .. envvar:: preseed__grub_timeout
#
# GRUB timeout for devices.
# :ref:`debops.grub` can be used to set different
# timeout values for phyisical and virtual machines.
preseed__grub_timeout: 1


# .. envvar:: preseed__grub_kernel_options
#
# Kernel options.
preseed__grub_kernel_options:

  ## Linux I/O Scheduler
  - 'elevator=noop'

  - 'cgroup_enable=memory'

  - 'swapaccount=1'


# .. SaltStack options [[[1
#
# ---------------------
#   SaltStack options
# ---------------------

# .. envvar:: preseed__salt
#
# Enable SaltStack support, ``salt-minion`` will be installed on the host and
# started at boot.
preseed__salt: False


# .. envvar:: preseed__salt_packages
#
# List of packages to install for Salt.
preseed__salt_packages: [ 'salt-minion' ]


# .. envvar:: preseed__salt_apt_key_url
#
# SaltStack Debian repository GPG key.
preseed__salt_apt_key_url: 'http://debian.saltstack.com/debian-salt-team-joehealy.gpg.key'


# .. envvar:: preseed__salt_upstream_repository
#
# SaltStack Debian APT repository.
preseed__salt_upstream_repository: 'deb http://debian.saltstack.com/debian {{ ansible_distribution_release.split("/")[0] }}-saltstack main'


# .. envvar:: preseed__salt_options
#
# Additional options for Salt defined as a text block; they will be added to
# the :file:`/etc/salt/minion.d/ansible.conf` file.
preseed__salt_options: ''


# .. Role-dependent configuration [[[1
#
# --------------------------------
#   Role-dependent configuration
# --------------------------------

# .. envvar:: preseed__nginx__server_location
#
# :program:`nginx` server locations managed by the :ref:`debops.nginx` role.
preseed__nginx__server_location:
  '/': |
    try_files $uri $uri/ $uri.html /index.html =404;
    autoindex on;
    types {
            text/plain cfg sh;
    }

  '~ /d-i/': |
    index index.html index.htm preseed.cfg ;
    try_files $uri $uri/ $uri.html /index.html =404;
    autoindex on;
    types {
            text/plain cfg sh;
    }


# .. envvar:: preseed__nginx__server_http
#
# HTTP :program:`nginx` server configurations managed by the :ref:`debops.nginx`
# role.
preseed__nginx__server_http:
  by_role: 'debops.preseed'
  enabled: True
  ssl: False
  filename: '{{ preseed__domains[0] + "_http" }}'
  name: '{{ preseed__domains }}'
  root: '{{ preseed__www_webserver }}'
  webroot_create: False

  access_policy: '{{ preseed__nginx_access_policy }}'
  auth_basic_realm: '{{ preseed__nginx_auth_realm }}'

  location: '{{ preseed__nginx__server_location }}'


# .. envvar:: preseed__nginx__server_https
#
# HTTPS :program:`nginx` server configurations managed by the :ref:`debops.nginx`
# role.
preseed__nginx__server_https:
  by_role: 'debops.preseed'
  enabled: True
  listen: False
  filename: '{{ preseed__domains[0] + "_https" }}'
  name: '{{ preseed__domains }}'
  root: '{{ preseed__www_webserver }}'
  webroot_create: False
  state: '{{ "present"
             if (ansible_local|d() and ansible_local.pki|d() and
                 (ansible_local.pki.enabled|d())|bool)
             else "absent" }}'

  access_policy: '{{ preseed__nginx_access_policy }}'
  auth_basic_realm: '{{ preseed__nginx_auth_realm }}'

  location: '{{ preseed__nginx__server_location }}'


# .. envvar:: preseed__nginx__servers
#
# List of :program:`nginx` server configurations managed by the
# :ref:`debops.nginx` role.
preseed__nginx__servers:
  - '{{ preseed__nginx__server_http }}'
  - '{{ preseed__nginx__server_https }}'


# Configuration for other Ansible roles [[[
# ----------------------------------------

# .. envvar:: preseed__python__dependent_packages3 [[[
#
# Configuration for the :ref:`debops.python` Ansible role.
preseed__python__dependent_packages3:

  - 'python3'
  - 'python3-apt'
  - 'python3-pycurl'
  - 'python3-httplib2'
  - 'python3-pip'

                                                                   # ]]]
# .. envvar:: preseed__python__dependent_packages2 [[[
#
# Configuration for the :ref:`debops.python` Ansible role.
preseed__python__dependent_packages2:

  - 'python'
  - 'python-apt'
  - 'python-pycurl'
  - 'python-httplib2'
  - 'python-pip'

                                                                   # ]]]
                                                                   # ]]]
