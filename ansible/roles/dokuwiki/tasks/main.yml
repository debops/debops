---
# Copyright (C) 2015-2019 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2019 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Pre hooks
  include: '{{ lookup("debops.debops.task_src", "dokuwiki/pre_main.yml") }}'

- name: Install requested packages
  package:
    name: '{{ q("flattened", (dokuwiki__base_packages
                              + dokuwiki__packages)) }}'
    state: 'present'
  register: dokuwiki__register_packages
  until: dokuwiki__register_packages is succeeded

- name: Create DokuWiki group
  group:
    name: '{{ dokuwiki__group }}'
    system: True
    state: 'present'

- name: Create DokuWiki user
  user:
    name: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__group }}'
    home: '{{ dokuwiki__home }}'
    shell: '{{ dokuwiki__shell }}'
    comment: 'DokuWiki'
    createhome: False
    system: True
    state: 'present'


# ---- Deployment ----

- name: Create DokuWiki source directory
  file:
    path: '{{ dokuwiki__src }}'
    state: 'directory'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__group }}'
    mode: '0750'

- name: Clone DokuWiki source from deploy server
  git:
    repo: '{{ dokuwiki__git_repo }}'
    dest: '{{ dokuwiki__git_dest }}'
    version: 'master'
    bare: True
    update: True
  become: True
  become_user: '{{ dokuwiki__user }}'
  register: dokuwiki__register_source
  until: dokuwiki__register_source is succeeded

- name: Create DokuWiki checkout directory
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__webserver_user }}'
    mode: '0750'
  with_items: [ '{{ dokuwiki__www }}', '{{ dokuwiki__git_checkout }}' ]

- name: Prepare DokuWiki worktree
  copy:
    content: 'gitdir: {{ dokuwiki__git_dest }}'
    dest: '{{ dokuwiki__git_checkout + "/.git" }}'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__group }}'
    mode: '0644'

- name: Get commit hash of target checkout
  environment:
    GIT_WORK_TREE: '{{ dokuwiki__git_checkout }}'
  command: git rev-parse {{ dokuwiki__git_version }}
  args:
    chdir: '{{ dokuwiki__git_dest }}'
  become: True
  become_user: '{{ dokuwiki__user }}'
  register: dokuwiki__register_target_branch
  changed_when: dokuwiki__register_target_branch.stdout != dokuwiki__register_source.before

- name: Checkout DokuWiki
  environment:
    GIT_WORK_TREE: '{{ dokuwiki__git_checkout }}'
  command: git checkout -f {{ dokuwiki__git_version }}
  args:
    chdir: '{{ dokuwiki__git_dest }}'
  become: True
  become_user: '{{ dokuwiki__user }}'
  register: dokuwiki__register_checkout
  when: (dokuwiki__register_source.before is undefined or
         (dokuwiki__register_source.before is defined and
          dokuwiki__register_target_branch.stdout is defined and
          dokuwiki__register_source.before != dokuwiki__register_target_branch.stdout))


# ---- Configuration ----

- name: Remove specified plugins if requested
  file:
    path: '{{ dokuwiki__git_checkout + "/lib/plugins/" + item.dest }}'
    state: 'absent'
  with_flattened:
    - '{{ dokuwiki__default_plugins }}'
    - '{{ dokuwiki__plugins }}'
  when: (dokuwiki__plugins_enabled|bool and
         (item.dest|d() and item.dest) and (item.state|d() and item.state == 'absent'))

- name: Install specified plugins from git repositories
  git:
    repo: '{{ item.repo }}'
    dest: '{{ dokuwiki__git_checkout + "/lib/plugins/" + item.dest }}'
    version: '{{ item.version | d(omit) }}'
    update: True
  become: True
  become_user: '{{ dokuwiki__user }}'
  with_flattened:
    - '{{ dokuwiki__default_plugins }}'
    - '{{ dokuwiki__plugins }}'
  register: dokuwiki__register_git_plugins
  until: dokuwiki__register_git_plugins is succeeded
  when: (dokuwiki__plugins_enabled|bool and
         (item.repo|d() and item.repo) and (item.dest|d() and item.dest) and
         (item.state is undefined or (item.state|d() and item.state != 'absent')))

- name: Remove specified templates if requested
  file:
    path: '{{ dokuwiki__git_checkout + "/lib/tpl/" + item.dest }}'
    state: 'absent'
  with_flattened:
    - '{{ dokuwiki__default_templates }}'
    - '{{ dokuwiki__templates }}'
  when: (dokuwiki__plugins_enabled|bool and
         (item.dest|d() and item.dest) and (item.state|d() and item.state == 'absent'))

- name: Install specified templates from git repositories
  git:
    repo: '{{ item.repo }}'
    dest: '{{ dokuwiki__git_checkout + "/lib/tpl/" + item.dest }}'
    version: '{{ item.version | d(omit) }}'
    update: True
  become: True
  become_user: '{{ dokuwiki__user }}'
  with_flattened:
    - '{{ dokuwiki__default_templates }}'
    - '{{ dokuwiki__templates }}'
  register: dokuwiki__register_git_templates
  until: dokuwiki__register_git_templates is succeeded
  when: (dokuwiki__plugins_enabled|bool and
         (item.repo|d() and item.repo) and (item.dest|d() and item.dest) and
         (item.state is undefined or (item.state|d() and item.state != 'absent')))

- name: Generate protected local configuration file
  template:
    src: 'srv/www/dokuwiki/sites/public/conf/local.protected.php.j2'
    dest: '{{ dokuwiki__git_checkout + "/conf/local.protected.php" }}'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__group }}'
    mode: '0600'
  no_log: '{{ debops__no_log | d(True) }}'
  tags: [ 'role::dokuwiki:conf' ]

- name: Generate protected plugin configuration file
  template:
    src: 'srv/www/dokuwiki/sites/public/conf/plugins.protected.php.j2'
    dest: '{{ dokuwiki__git_checkout + "/conf/plugins.protected.php" }}'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__group }}'
    mode: '0600'
  no_log: '{{ debops__no_log | d(True) }}'
  tags: [ 'role::dokuwiki:conf' ]

- name: Generate local MIME configuration file
  template:
    src: 'srv/www/dokuwiki/sites/public/conf/mime.local.conf.j2'
    dest: '{{ dokuwiki__git_checkout + "/conf/mime.local.conf" }}'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__group }}'
    mode: '0600'
  tags: [ 'role::dokuwiki:conf', 'role::dokuwiki:mime' ]

- name: Install maintenance scripts
  template:
    src: '{{ item }}.j2'
    dest: '/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items:
    - 'etc/cron.daily/dokuwiki-cleanup'
    - 'etc/cron.weekly/dokuwiki-wikipedia-blacklist'

- name: Create farm base directory
  file:
    path: '{{ dokuwiki__farm_path }}'
    state: 'directory'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__webserver_user }}'
    mode: '0750'
  when: dokuwiki__farm|bool

- name: Create farm animal directories
  copy:
    src: 'srv/www/dokuwiki/farm/animal/'
    dest: '{{ dokuwiki__farm_path + "/" + item + "/" }}'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__webserver_user }}'
    mode: '0750'
    force: False
  with_items: '{{ dokuwiki__farm_animals }}'
  when: (dokuwiki__farm|bool and dokuwiki__farm_animals)

- name: Disable DokuWiki farm if not enabled
  file:
    path: '{{ dokuwiki__git_checkout + "/inc/preload.php" }}'
    state: 'absent'
  when: (not dokuwiki__farm|bool or not dokuwiki__farm_animals)

- name: Configure DokuWiki farm preload script
  template:
    src: 'srv/www/dokuwiki/sites/public/inc/preload.php.j2'
    dest: '{{ dokuwiki__git_checkout + "/inc/preload.php" }}'
    owner: '{{ dokuwiki__user }}'
    group: '{{ dokuwiki__group }}'
    mode: '0644'
  when: (dokuwiki__farm|bool and dokuwiki__farm_animals)

- name: Download initial anti-spam blacklist
  command: /etc/cron.weekly/dokuwiki-wikipedia-blacklist
  args:
    creates: '{{ dokuwiki__git_checkout + "/conf/wordblock.local.conf" }}'

- name: Delete extra files on remote host
  file:
    path:  '{{ item.dest | d(item.path | d(item.name)) }}'
    state: 'absent'
  with_flattened:
    - '{{ dokuwiki__extra_files }}'
    - '{{ dokuwiki__group_extra_files }}'
    - '{{ dokuwiki__host_extra_files }}'
  when: (item.dest|d() or item.path|d() or item.name|d()) and
        (item.state|d('present') == 'absent')
  tags: [ 'role::dokuwiki' ]

- name: Copy extra files to remote host
  copy:
    dest:     '{{ item.dest     | d(item.path | d(item.name)) }}'
    src:      '{{ item.src      | d(omit) }}'
    content:  '{{ item.content  | d(omit) }}'
    owner:    '{{ item.owner    | d(omit) }}'
    group:    '{{ item.group    | d(omit) }}'
    mode:     '{{ item.mode     | d(omit) }}'
    selevel:  '{{ item.selevel  | d(omit) }}'
    serole:   '{{ item.serole   | d(omit) }}'
    setype:   '{{ item.setype   | d(omit) }}'
    seuser:   '{{ item.seuser   | d(omit) }}'
    follow:   '{{ item.follow   | d(omit) }}'
    force:    '{{ item.force    | d(omit) }}'
    backup:   '{{ item.backup   | d(omit) }}'
    validate: '{{ item.validate | d(omit) }}'
    remote_src: '{{ item.remote_src | d(omit) }}'
    directory_mode: '{{ item.directory_mode | d(omit) }}'
  with_flattened:
    - '{{ dokuwiki__extra_files }}'
    - '{{ dokuwiki__group_extra_files }}'
    - '{{ dokuwiki__host_extra_files }}'
  when: (item.src|d() or item.content is defined) and
        (item.dest|d() or item.path|d() or item.name|d()) and
        (item.state|d('present') != 'absent')
  tags: [ 'role::dokuwiki' ]

- name: Post hooks
  include: '{{ lookup("debops.debops.task_src", "dokuwiki/post_main.yml") }}'
