---

- name: Create directory for htpasswd files
  file:
    path: '{{ nginx_private_path }}'
    state: 'directory'
    owner: 'root'
    group: '{{ nginx_user }}'
    mode: '0750'

- name: Remove htpasswd files if requested
  file:
    dest: '{{ nginx_private_path + "/" + item.name }}'
    state: 'absent'
  with_flattened:
    - '{{ nginx__htpasswd }}'
    - '{{ nginx__default_htpasswd }}'
    - '{{ nginx__dependent_htpasswd }}'
    - '{{ nginx_htpasswd | d([]) }}'
  when: (item.name|d() and (item.state|d() and item.state == 'absent'))
  no_log: True

- name: Manage users in htpasswd files
  htpasswd:
    path: '{{ nginx_private_path + "/" + item.0.name }}'
    name: '{{ item.1 }}'
    crypt_scheme: '{{ nginx__htpasswd_crypt_scheme }}'
    password: '{{ item.0.password
                  if item.0.password|d()
                  else lookup("password", nginx_htpasswd_secret_path + "/" + item.0.name + "/" + item.1) }}'
    state: '{{ "present" if not (item.0.delete | d(False) |bool) else "absent" }}'
    owner: 'root'
    group: '{{ nginx_user }}'
    mode: '0640'
  with_subelements:
    - '{{ nginx__htpasswd + nginx__default_htpasswd + nginx__dependent_htpasswd + nginx_htpasswd|d([]) }}'
    - 'users'
  when: (item.0.name|d() and item.0.state|d('present') != 'absent' and item.1|d())
  no_log: True
