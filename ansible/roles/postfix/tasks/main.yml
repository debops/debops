---

- import_role:
    name: 'ansible_plugins'

- import_role:
    name: 'secret'

- name: Install Postfix APT packages
  apt:
    name: '{{ (postfix__base_packages
             + postfix__dependent_packages
             + postfix__packages)
             | flatten }}'
    state: 'present'
    install_recommends: False
  register: postfix__register_packages
  until: postfix__register_packages is succeeded
  when: ansible_pkg_mgr == 'apt'
  tags: [ 'meta::provision' ]

- name: Purge other SMTP servers
  apt:
    name: '{{ postfix__purge_packages | flatten }}'
    state: 'absent'
    purge: True
  when: postfix__purge_packages|d() and ansible_pkg_mgr == 'apt'
  tags: [ 'meta::provision' ]

- name: Disable Postfix configuration in debconf
  debconf:
    name: 'postfix'
    question: 'postfix/main_mailer_type'
    vtype: 'select'
    value: 'No configuration'
  when: ansible_pkg_mgr == 'apt'

- name: Check if the dependent main.cf configuration exists
  stat:
    path: '{{ secret + "/postfix/dependent_config/" + inventory_hostname + "/maincf.json" }}'
  register: postfix__register_dependent_maincf_file
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.postfix|d() and
         ansible_local.postfix.installed is defined and
         ansible_local.postfix.installed|bool)

- name: Check if the dependent master.cf configuration exists
  stat:
    path: '{{ secret + "/postfix/dependent_config/" + inventory_hostname + "/mastercf.json" }}'
  register: postfix__register_dependent_mastercf_file
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.postfix|d() and
         ansible_local.postfix.installed is defined and
         ansible_local.postfix.installed|bool)

- name: Load the dependent main.cf configuration from Ansible Controller
  slurp:
    src: '{{ secret + "/postfix/dependent_config/" + inventory_hostname + "/maincf.json" }}'
  register: postfix__register_dependent_maincf
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.postfix|d() and
         ansible_local.postfix.installed is defined and
         ansible_local.postfix.installed|bool and
         postfix__register_dependent_maincf_file.stat.exists|bool)

- name: Load the dependent master.cf configuration from Ansible Controller
  slurp:
    src: '{{ secret + "/postfix/dependent_config/" + inventory_hostname + "/mastercf.json" }}'
  register: postfix__register_dependent_mastercf
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.postfix|d() and
         ansible_local.postfix.installed is defined and
         ansible_local.postfix.installed|bool and
         postfix__register_dependent_mastercf_file.stat.exists|bool)

- name: Make sure Ansible local facts directory exists
  file:
    dest: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Configure Postfix local facts
  template:
    src: 'etc/ansible/facts.d/postfix.fact.j2'
    dest: '/etc/ansible/facts.d/postfix.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: postfix__register_facts

- name: Re-read local facts if they have been modified
  action: setup
  when: postfix__register_facts is changed

- name: Configure /etc/mailname
  copy:
    content: "{{ postfix__mailname + '\n' }}"
    dest: '/etc/mailname'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Check postfix and reload' ]

- name: Install /etc/postfix/Makefile
  template:
    src: 'etc/postfix/Makefile.j2'
    dest: '/etc/postfix/Makefile'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Generate Postfix 'main.cf' configuration
  template:
    src: 'etc/postfix/main.cf.j2'
    dest: '/etc/postfix/main.cf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Check postfix and reload' ]

- name: Generate Postfix 'master.cf' configuration
  template:
    src: 'etc/postfix/master.cf.j2'
    dest: '/etc/postfix/master.cf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Check postfix and reload' ]

- name: Remove Postfix lookup tables
  file:
    path: '/etc/postfix/{{ item.name }}'
    state: 'absent'
  with_flattened:
    - '{{ postfix__combined_lookup_tables | parse_kv_items }}'
  when: item.name|d() and item.state|d('present') == 'absent'
  notify: [ 'Process Postfix Makefile', 'Check postfix and reload' ]
  no_log: '{{ item.no_log | d(True if (item.mode|d("0644") == "0600") else False) }}'

- name: Generate Postfix lookup tables
  template:
    src:   'etc/postfix/lookup_table.j2'
    dest:  '/etc/postfix/{{ item.name }}'
    owner: '{{ item.owner | d("root") }}'
    group: '{{ item.group | d("postfix") }}'
    mode:  '{{ item.mode  | d("0640") }}'
  with_flattened:
    - '{{ postfix__combined_lookup_tables | parse_kv_items }}'
  notify: [ 'Process Postfix Makefile', 'Check postfix and reload' ]
  when: item.name|d() and item.state|d('present') != 'absent'
  no_log: '{{ item.no_log | d(True
                              if (item.mode|d("0640") in ["0640","0600"])
                              else False) }}'

- name: Save dependent configuration on Ansible Controller
  template:
    src: '{{ "secret/postfix/dependent_config/inventory_hostname/" + item + ".j2" }}'
    dest: '{{ secret + "/postfix/dependent_config/" + inventory_hostname + "/" + item }}'
  become: False
  delegate_to: 'localhost'
  with_items: [ 'maincf.json', 'mastercf.json' ]
