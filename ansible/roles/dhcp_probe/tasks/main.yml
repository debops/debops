---
# Copyright (C) 2014-2018 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2014-2018 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Install required packages
  package:
    name: '{{ q("flattened", (dhcp_probe__base_packages + dhcp_probe__packages)) }}'
    state: 'present'
  register: dhcp_probe__register_packages
  until: dhcp_probe__register_packages is succeeded

- name: Ensure that sysvinit dhcp-probe service is stopped on install
  systemd:
    name: 'dhcp-probe.service'
    state: 'stopped'
  when: ((ansible_local is undefined or
          ansible_local.dhcp_probe is undefined) and
         ansible_service_mgr == 'systemd')

- name: Install custom systemd unit files
  template:
    src: 'etc/systemd/system/{{ item }}.j2'
    dest: '/etc/systemd/system/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  loop: [ 'dhcp-probe@.service', 'dhcp-probe.service' ]
  notify: [ 'Reload service manager' ]
  when: ansible_service_mgr == 'systemd'

- name: Reload systemd configuration when needed
  meta: 'flush_handlers'

- name: Disable DHCP Probe instances if requested
  systemd:
    name: 'dhcp-probe@{{ item.name }}.service'
    state: 'stopped'
    enabled: False
  loop: '{{ dhcp_probe__combined_interfaces | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ {"name": item.name, "state": item.state} }}'
  when: ansible_service_mgr == 'systemd' and item.name|d() and
        item.state|d('present') == 'absent'

- name: Enable DHCP Probe instances if requested
  systemd:
    name: 'dhcp-probe@{{ item.name }}.service'
    enabled: True
  loop: '{{ dhcp_probe__combined_interfaces | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ {"name": item.name, "state": item.state} }}'
  when: ansible_service_mgr == 'systemd' and item.name|d() and
        item.state|d('present') != 'absent'
  notify: [ 'Restart dhcp-probe' ]

- name: Ensure that required directories exist
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  loop: [ '{{ dhcp_probe__cache }}', '{{ dhcp_probe__lib }}' ]

- name: Install custom notification scripts
  template:
    src: 'usr/local/lib/dhcp-probe/{{ item }}.j2'
    dest: '{{ dhcp_probe__lib + "/" + item }}'
    owner: 'root'
    group: 'root'
    mode: '0755'
  loop: [ 'dhcp_probe_notify2', 'mail-throttled' ]

- name: Generate dhcp_probe.cf configuration file
  template:
    src: 'etc/dhcp_probe.cf.j2'
    dest: '/etc/dhcp_probe.cf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart dhcp-probe' ]

- name: Make sure Ansible fact directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Setup DHCP Probe local facts
  template:
    src: 'etc/ansible/facts.d/dhcp_probe.fact.j2'
    dest: '/etc/ansible/facts.d/dhcp_probe.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Reload facts if they were modified
  meta: 'flush_handlers'
