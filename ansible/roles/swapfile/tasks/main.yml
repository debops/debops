---
# Copyright (C) 2015-2016 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2016 Robin Schneider <ypid@riseup.net>
# Copyright (C) 2015-2016 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Disable swap files when requested
  ansible.builtin.shell: test -f {{ item.path | d(item) }} && swapoff {{ item.path | d(item) }} || true
  changed_when: False
  with_items: '{{ swapfile__files }}'
  when: (item.state | d("present") == 'absent' and
         ((ansible_system_capabilities_enforced | d()) | bool and
          "cap_sys_admin" in ansible_system_capabilities) or
         not (ansible_system_capabilities_enforced | d(True)) | bool)

- name: Create swap files
  ansible.builtin.command: |
    {% if swapfile__use_dd | bool %}
    dd if=/dev/zero of={{ item.path | d(item) }} bs=1M count={{ item.size | d(swapfile__size) }}
    {% else %}
    fallocate -l {{ ((item.size | d(swapfile__size)) | int * 1024 * 1024) }} {{ item.path | d(item) }}
    {% endif %}
  args:
    creates: '{{ item.path | d(item) }}'
  register: swapfile__register_allocation
  with_items: '{{ swapfile__files }}'
  when: (item.state | d("present") != 'absent')

- name: Enforce permissions
  ansible.builtin.file:
    path: '{{ item.path | d(item) }}'
    state: 'file'
    owner: 'root'
    group: 'root'
    mode: '0600'
  with_items: '{{ swapfile__files }}'
  when: (item.state | d("present") != 'absent' and not ansible_check_mode)

- name: Initialize swap files
  ansible.builtin.command: 'mkswap {{ item.item.path | d(item.item) }}'  # noqa no-handler
  register: swapfile__register_init
  changed_when: swapfile__register_init.changed | bool
  with_items: '{{ swapfile__register_allocation.results | d([]) }}'
  when: (item is changed and item.state | d("present") != 'absent')

- name: Enable swap files
  ansible.builtin.command: 'swapon -p {{ item.item.priority | d(swapfile__priority) }} {{ item.item.path | d(item.item) }}'  # noqa no-handler
  with_items: '{{ swapfile__register_allocation.results | d([]) }}'
  register: swapfile__register_swapon
  changed_when: swapfile__register_swapon.changed | bool
  when: (
        (item is changed and item.state | d("present") != 'absent') and
        ((
            (ansible_system_capabilities_enforced | d()) | bool and
            "cap_sys_admin" in ansible_system_capabilities
        ) or not (ansible_system_capabilities_enforced | d(True)) | bool )
        )

- name: Disable swap files
  ansible.builtin.shell: 'test -f {{ item.path | d(item) }} && swapoff -v {{ item.path | d(item) }} || true'  # noqa no-handler
  with_items: '{{ swapfile__files }}'
  register: swapfile__register_swapoff
  changed_when: swapfile__register_swapoff.stdout == ('swapoff ' + item.path | d(item))
  when: (
        (item.state | d("present") == 'absent') and
        ((
            (ansible_system_capabilities_enforced | d()) | bool and
            "cap_sys_admin" in ansible_system_capabilities
        ) or not (ansible_system_capabilities_enforced | d(True)) | bool )
        )

- name: Manage swap files in /etc/fstab
  ansible.posix.mount:
    src: '{{ item.path | d(item) }}'
    name:   'none'
    fstype: 'swap'
    opts:   'sw,nofail,pri={{ item.priority | d(swapfile__priority) }}'
    dump:   '0'
    passno: '0'
    state:  '{{ item.state | d("present") }}'
  with_items: '{{ swapfile__files }}'

- name: Remove swap files
  ansible.builtin.file:
    path: '{{ item.path | d(item) }}'
    state: 'absent'
  with_items: '{{ swapfile__files }}'
  when: (item.state | d("present") == 'absent')

- name: Remove legacy kernel parameters file
  ansible.builtin.file:
    path: '{{ swapfile__sysctl_file | d("/etc/sysctl.d/30-debops.swapfile.conf") }}'
    state: 'absent'
