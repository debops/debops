---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. Copyright (C) 2015-2022 Pablo Escobar Lopez <pescobar001@gmail.com>
# .. Copyright (C) 2015-2022 DebOps <https://debops.org/>
# .. SPDX-License-Identifier: GPL-3.0-only

# .. _netplan__ref_defaults:

# debops.netplan default variables [[[
# =====================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# APT packages [[[
# ----------------

# .. envvar:: netplan__base_packages [[[
#
# List of base APT packages to install.
netplan__base_packages:
  - [ 'netplan.io' ]

                                                                   # ]]]
# .. envvar:: netplan__packages [[[
#
# List of additional APT packages to install with the role.
netplan__packages: []
                                                                   # ]]]

# .. envvar:: netplan__purge_packages [[[
#
# List of APT packages which will be purged when this role is
# enabled, to stop them from interfering with ``netplan``.
netplan__purge_packages: []
                                                                   # ]]]
                                                                   # ]]]

# General role configuration [[[
# ------------------------------

# .. envvar:: netplan__reconfigure_auto [[[
#
# If ``True``, the role will reconfigure interfaces automatically after changes
# are detected by Ansible. If ``False``, role will install the reconfiguration
# script on the remote host so that the user can run it to apply the changes by
# hand.
netplan__apply_config_auto: True

                                                                   # ]]]
# .. envvar:: netplan__config_file [[[
#
# Full path to the netplan config file to deploy
netplan__config_file: '/etc/netplan/ansible-config.yaml'

                                                                   # ]]]
# .. envvar:: netplan__purge_existing_configs [[[
#
# If ``True``, the role will delete every existing config files in /etc/netplan/
# not deployed by this role
netplan__purge_existing_config: False

                                                                   # ]]]
# .. envvar:: netplan__renderer [[[
#
# Choices are:
#
# * ``networkd``
# * ``NetworkManager``
#
netplan__renderer: 'networkd'

                                                                   # ]]]
# Netplan configuration [[[
# -----------------------------------

# .. envvar:: neplan__configuration [[[
#
# Dictionary with the netplan config to deploy e.g.
#
# netplan__configuration:
#   network:
#     version: 2
#     ethernets:
#       eth0:
#         dhcp4: true
#       eth1:
#         addresses:
#           - 192.168.2.22/24
#         nameservers:
#           addresses: [192.168.2.1]
#         routes:
#           - to: default
#             via: 192.168.2.1
#       {{ ansible_default_ipv4.interface }}:
#         dhcp4: true

netplan__configuration: {}

                                                                   # ]]]
                                                                   # ]]]

# Configuration for other Ansible roles [[[
# -----------------------------------------

                                                                   # ]]]

# Role metadata [[[
# -----------------

                                                                   # ]]]
                                                                   # ]]]
