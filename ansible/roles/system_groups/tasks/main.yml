---
# Copyright (C) 2018 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2018 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Create a fact that knows the Ansible connection type
  set_fact:
    system_groups__fact_ansible_connection: '{{ ansible_connection }}'
  tags: [ 'meta::facts' ]

- name: Ensure that requested UNIX system groups exist
  group:
    name: '{{ item.name }}'
    gid: '{{ item.gid | d(omit) }}'
    state: 'present'
    system: '{{ item.system | d(True) }}'
  with_items: '{{ system_groups__combined_list | debops.debops.parse_kv_items }}'
  when: system_groups__enabled|bool and
        item.name|d() and item.state|d('present') not in [ 'init', 'absent', 'ignore' ]

- name: Get list of existing UNIX accounts
  getent:
    database: 'passwd'
  when: system_groups__enabled|bool

- name: Add specified UNIX accounts to system groups if present
  user:
    name: '{{ item.name }}'
    append: '{{ item.append }}'
    groups: '{{ item.groups }}'
    create_home: False
  with_items: '{{ lookup("template", "lookup/system_groups_members.j2") | from_yaml }}'
  when: system_groups__enabled|bool
  throttle: '{{ system_groups__throttle }}'

- name: Remove sudo configuration if not specified
  file:
    path: '/etc/sudoers.d/{{ item.sudoers_filename | d("system_groups-" + item.name) }}'
    state: 'absent'
  with_items: '{{ system_groups__combined_list | debops.debops.parse_kv_items }}'
  when: system_groups__enabled|bool and system_groups__sudo_enabled|bool and
        item.name|d() and item.state|d('present') not in [ 'init', 'absent', 'ignore' ] and
        not item.sudoers|d()

- name: Configure sudo for UNIX system groups
  template:
    src: 'etc/sudoers.d/system_groups.j2'
    dest: '/etc/sudoers.d/{{ item.sudoers_filename | d("system_groups-" + item.name) }}'
    owner: 'root'
    group: 'root'
    mode: '0440'
    validate: '/usr/sbin/visudo -cf %s'
  with_items: '{{ system_groups__combined_list | debops.debops.parse_kv_items }}'
  when: system_groups__enabled|bool and system_groups__sudo_enabled|bool and
        item.name|d() and item.state|d('present') not in [ 'init', 'absent', 'ignore' ] and
        item.sudoers|d()

- name: Remove tmpfiles configuration if not specified
  file:
    path: '/etc/tmpfiles.d/{{ item.tmpfiles_filename | d("system_groups-" + item.name + ".conf") }}'
    state: 'absent'
  with_items: '{{ system_groups__combined_list | debops.debops.parse_kv_items }}'
  when: system_groups__enabled|bool and ansible_service_mgr == 'systemd' and
        item.name|d() and item.state|d('present') not in [ 'init', 'absent', 'ignore' ] and
        not item.tmpfiles|d()

- name: Generate tmpfiles configuration for UNIX system groups
  template:
    src: 'etc/tmpfiles.d/system_groups.conf.j2'
    dest: '/etc/tmpfiles.d/{{ item.tmpfiles_filename | d("system_groups-" + item.name + ".conf") }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: '{{ system_groups__combined_list | debops.debops.parse_kv_items }}'
  notify: [ 'Create temporary files' ]
  when: system_groups__enabled|bool and ansible_service_mgr == 'systemd' and
        item.name|d() and item.state|d('present') not in [ 'init', 'absent', 'ignore' ] and
        item.tmpfiles|d()

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save system groups local facts
  template:
    src: 'etc/ansible/facts.d/system_groups.fact.j2'
    dest: '/etc/ansible/facts.d/system_groups.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  meta: 'flush_handlers'
