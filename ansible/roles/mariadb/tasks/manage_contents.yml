---

- name: Drop databases if requested
  mysql_db:
    name: '{{ item.database | d(item.name) }}'
    state: 'absent'
  with_flattened: '{{ mariadb__databases + mariadb__dependent_databases + mariadb_databases|d([]) }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.database|d(False) or item.name|d(False)) and
         (item.state is defined and item.state == 'absent'))

- name: Create databases
  mysql_db:
    name: '{{ item.database | d(item.name) }}'
    state: 'present'
    encoding: '{{ item.encoding | d(omit) }}'
    collation: '{{ item.collation | d(omit) }}'
  with_flattened: '{{ mariadb__databases + mariadb__dependent_databases + mariadb_databases|d([]) }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.database|d(False) or item.name|d(False)) and
         (item.state is undefined or item.state != 'absent'))
  register: mariadb__register_database_status

- name: Copy database source file to remote host
  copy:
    src: '{{ item.0.source }}'
    dest: '{{ item.0.target }}'
    owner: 'root'
    group: 'root'
    mode: '0600'
  with_together:
    - '{{ mariadb__databases
          + lookup("flattened", mariadb__dependent_databases, wantlist=True)
          + mariadb_databases|d([]) }}'
    - '{{ mariadb__register_database_status.results }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.0.database|d(False) or item.0.name|d(False)) and
         (item.0.state is undefined or item.0.state != 'absent') and
         (item.0.source|d(False) and item.0.target|d(False)) and
         (item.0.name == item.1.db and item.1 is changed))

- name: Import source file contents into database
  mysql_db:
    name: '{{ item.0.database | d(item.0.name) }}'
    target: '{{ item.0.target }}'
    state: 'import'
  with_together:
    - '{{ mariadb__databases
          + lookup("flattened", mariadb__dependent_databases, wantlist=True)
          + mariadb_databases|d([]) }}'
    - '{{ mariadb__register_database_status.results }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.0.database|d(False) or item.0.name|d(False)) and
         (item.0.state is undefined or item.0.state != 'absent') and
         item.0.target|d(False) and (item.0.name == item.1.db and item.1 is changed))

- name: Remove source files
  file:
    dest: '{{ item.target }}'
    state: 'absent'
  with_flattened: '{{ mariadb__databases + mariadb__dependent_databases + mariadb_databases|d([]) }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.database|d(False) or item.name|d(False)) and
         (item.state is undefined or item.state != 'absent') and
         (item.source|d(False) and item.target|d(False)) and
         (item.target_delete is undefined or item.target_delete))

- name: Drop user accounts if requested
  mysql_user:
    name: '{{ item.user | d(item.name) }}'
    host: '{{ item.host | default(mariadb__client) }}'
    state: 'absent'
  with_flattened: '{{ mariadb__users + mariadb__dependent_users + mariadb_users|d([]) }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.user|d(False) or item.name|d(False)) and
         (item.state is defined and item.state == "absent"))
  no_log: True

- name: Create user accounts
  mysql_user:
    name: '{{ item.user | d(item.name) }}'
    host: '{{ item.host | default(mariadb__client) }}'
    state: 'present'
    password: '{{ item.password | default(lookup("password",
                  secret + "/mariadb/" + mariadb__delegate_to +
                  "/credentials/" + item.user | d(item.name) + "/password " +
                  "length=" + mariadb__password_length)) }}'
  with_flattened: '{{ mariadb__users + mariadb__dependent_users + mariadb_users|d([]) }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  register: mariadb__register_create_users
  when: ((item.user|d(False) or item.name|d(False)) and
         (item.state is undefined or item.state != "absent"))
  no_log: True

- name: Grant default privileges to users
  mysql_user:
    name: '{{ item.0.user | d(item.0.name) }}'
    host: '{{ item.0.host | default(mariadb__client) }}'
    priv: '{{ (item.0.database | d(item.0.name)) + ".*:" + mariadb__default_privileges_grant }}'
    append_privs: True
  with_together:
    - '{{ mariadb__users + lookup("flattened", mariadb__dependent_users, wantlist=True) + mariadb_users|d([]) }}'
    - '{{ mariadb__register_create_users.results }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.0.user|d(False) or item.0.name|d(False)) and
         (item.0.state is undefined or item.0.state != "absent") and
         mariadb__default_privileges|d(False) and
         (item.0.priv_default is undefined or item.0.priv_default))
  no_log: True

- name: Grant auxiliary privileges to users
  mysql_user:
    name: '{{ item.0.user | d(item.0.name) }}'
    host: '{{ item.0.host | default(mariadb__client) }}'
    priv: '{{ (item.0.database | d(item.0.name)) + "\_%.*:" + mariadb__default_privileges_grant }}'
    append_privs: True
  with_together:
    - '{{ mariadb__users + lookup("flattened", mariadb__dependent_users, wantlist=True) + mariadb_users|d([]) }}'
    - '{{ mariadb__register_create_users.results }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.0.user|d(False) or item.0.name|d(False)) and
         (item.0.state is undefined or item.0.state != "absent") and
         mariadb__default_privileges_aux|d(False) and
         (item.0.priv_aux is undefined or item.0.priv_aux))
  no_log: True

- name: Grant custom privileges to users
  mysql_user:
    name: '{{ item.0.user | d(item.0.name) }}'
    host: '{{ item.0.host | default(mariadb__client) }}'
    priv: '{{ item.0.priv if (item.0.priv is string) else (item.0.priv | join("/")) }}'
    append_privs: '{{ item.0.append_privs | default(True) }}'
  with_together:
    - '{{ mariadb__users + lookup("flattened", mariadb__dependent_users, wantlist=True) + mariadb_users|d([]) }}'
    - '{{ mariadb__register_create_users.results }}'
  delegate_to: '{{ mariadb__delegate_to }}'
  when: ((item.0.user|d(False) or item.0.name|d(False)) and
         (item.0.state is undefined or item.0.state != "absent") and
         item.0.priv|d(False))
  no_log: True

- name: Make sure required system groups exist
  group:
    name: '{{ item.group | d(item.owner) }}'
    state: 'present'
    system: '{{ item.system | d(True) }}'
  with_flattened: '{{ mariadb__users + mariadb__dependent_users + mariadb_users|d([]) }}'
  when: ((item.user|d(False) or item.name|d(False)) and
         (item.state is undefined or item.state != "absent") and
         item.owner|d(False) and item.home|d(False))
  no_log: True

- name: Make sure required system accounts exist
  user:
    name: '{{ item.owner }}'
    group: '{{ item.group | d(item.owner) }}'
    home: '{{ item.home }}'
    state: 'present'
    system: '{{ item.system | d(True) }}'
  with_flattened: '{{ mariadb__users + mariadb__dependent_users + mariadb_users|d([]) }}'
  when: ((item.user|d(False) or item.name|d(False)) and
         (item.state is undefined or item.state != "absent") and
         item.owner|d(False) and item.home|d(False))
  no_log: True

- name: Remove ~/.my.cnf from owner home if requested
  file:
    dest: '{{ "~" + item.owner + "/.my.cnf" }}'
    state: 'absent'
  with_flattened: '{{ mariadb__users + mariadb__dependent_users + mariadb_users|d([]) }}'
  when: ((item.user|d(False) or item.name|d(False)) and
         (item.state is defined and item.state == "absent") and
         item.owner|d(False))
  no_log: True

- name: Ensure that directory for custom file path .my.cnf exists
  file:
    path: '{{ item.0.creds_path | regex_replace("^(.*/).*$", "\\1") }}'
    state: 'directory'
  with_together:
    - '{{ mariadb__users + lookup("flattened", mariadb__dependent_users, wantlist=True) + mariadb_users|d([]) }}'
    - '{{ mariadb__register_create_users.results }}'
  when: ((item.0.user|d(False) or item.0.name|d(False)) and
         (item.0.state|d("present") != "absent") and
         item.0.creds_path|d(False) and
         item.0.owner|d(False))
  no_log: True

- name: Write ~/.my.cnf in owner home directory
  template:
    src: 'home/my.cnf.j2'
    dest: '{{ item.0.creds_path|d("~" + item.0.owner + "/.my.cnf") }}'
    owner: '{{ item.0.owner }}'
    group: '{{ item.0.group | default(item.0.owner) }}'
    mode: '{{ item.0.mode | default("0640") }}'
  with_together:
    - '{{ mariadb__users + lookup("flattened", mariadb__dependent_users, wantlist=True) + mariadb_users|d([]) }}'
    - '{{ mariadb__register_create_users.results }}'
  when: ((item.0.user|d(False) or item.0.name|d(False)) and
         (item.0.state is undefined or item.0.state != "absent") and
         item.0.owner|d(False))
  no_log: True
