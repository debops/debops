---

- import_role:
    name: 'ansible_plugins'

- import_role:
    name: 'secret'

- name: Install required packages
  package:
    name: '{{ (docker_registry__base_packages
               + docker_registry__packages) | flatten }}'
    state: 'present'
  register: docker_registry__register_packages
  until: docker_registry__register_packages is succeeded

- name: Check current docker-registry diversions
  environment:
    LC_ALL: 'C'
  shell: set -o nounset -o pipefail -o errexit &&
         dpkg-divert --list '/etc/docker/registry/*.dpkg-divert' | awk '{print $NF}' || true
  args:
    executable: 'bash'
  register: docker_registry__register_diversions
  check_mode: False
  changed_when: False

- name: Divert the original docker-registry config file
  command: dpkg-divert --quiet --local
           --divert "/etc/docker/registry/config.yml.dpkg-divert"
           --rename "/etc/docker/registry/config.yml"
  args:
    creates: '/etc/docker/registry/config.yml.dpkg-divert'
  notify: [ 'Restart docker-registry' ]
  when: '"/etc/docker/registry/config.yml.dpkg-divert" not in docker_registry__register_diversions.stdout_lines'

- name: Create Docker Registry UNIX group
  group:
    name: '{{ docker_registry__group }}'
    state: 'present'
    system: True

- name: Create Docker Registry UNIX account
  user:
    name: '{{ docker_registry__user }}'
    group: '{{ docker_registry__group }}'
    groups: '{{ docker_registry__additional_groups | flatten }}'
    home: '{{ docker_registry__home }}'
    comment: '{{ docker_registry__comment }}'
    shell: '{{ docker_registry__shell }}'
    state: 'present'
    system: True

- name: Create required directories
  file:
    name: '{{ item.path }}'
    state: 'directory'
    owner: '{{ item.owner | d(omit) }}'
    group: '{{ item.group | d(omit) }}'
    mode: '{{ item.mode }}'
  with_items:

    - path: '{{ docker_registry__config_file | dirname }}'
      mode: '0755'

    - path: '{{ docker_registry__storage_dir | dirname }}'
      mode: '0755'

    - path: '{{ docker_registry__storage_dir }}'
      owner: '{{ docker_registry__user }}'
      group: '{{ docker_registry__group }}'
      mode: '{{ docker_registry__storage_mode }}'

- name: Build Docker Registry from upstream
  become: True
  become_user: '{{ docker_registry__user }}'
  when: docker_registry__upstream|bool
  block:

    - name: Create required build directories
      file:
        name: '{{ item.path }}'
        state: 'directory'
        mode: '{{ item.mode }}'
      with_items:

        - path: '{{ docker_registry__src }}'
          mode: '0755'

        - path: '{{ docker_registry__git_dir | dirname }}'
          mode: '0755'

    - name: Clone Docker Registry source code
      git:
        repo: '{{ docker_registry__git_repo }}'
        dest: '{{ docker_registry__git_dest }}'
        version: '{{ docker_registry__git_version }}'
        separate_git_dir: '{{ docker_registry__git_dir }}'
        verify_commit: True
      register: docker_registry__register_source

    - name: Build Docker Registry binaries
      environment:
        GOPATH: '{{ docker_registry__gopath }}'
        GOCACHE: '{{ docker_registry__gopath + "/cache" }}'
      command: 'make clean binaries'
      args:
        chdir: '{{ docker_registry__git_dest }}'
      when: docker_registry__register_source is changed
      register: docker_registry__register_build

- name: Install Docker Registry binary
  copy:
    src: '{{ docker_registry__git_dest + "/bin/registry" }}'
    dest: '/usr/local/bin/docker-registry'
    remote_src: True
    mode: '0755'
  notify: [ 'Restart docker-registry' ]
  when: docker_registry__upstream|bool and
        docker_registry__register_build is changed

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save Docker Registry local facts
  template:
    src: 'etc/ansible/facts.d/docker_registry.fact.j2'
    dest: '/etc/ansible/facts.d/docker_registry.fact'
    mode: '0755'
  register: docker_registry__register_facts

- name: Update Ansible facts if they were modified
  action: setup
  when: docker_registry__register_facts is changed

- name: Generate Docker Registry configuration
  template:
    src: 'etc/docker/registry/config.yml.j2'
    dest: '{{ docker_registry__config_file }}'
    owner: '{{ docker_registry__user }}'
    group: '{{ docker_registry__group }}'
    mode: '0600'
  notify: [ 'Restart docker-registry' ]
  register: docker_registry__register_config

- name: Generate Docker Registry systemd unit
  template:
    src: 'etc/systemd/system/docker-registry.service.j2'
    dest: '/etc/systemd/system/docker-registry.service'
    mode: '0644'
  register: docker_registry__register_systemd

- name: Enable Docker Registry service
  systemd:
    name: 'docker-registry'
    daemon_reload: '{{ True if docker_registry__register_systemd is changed else omit }}'
    enabled: True

- name: Install garbage collector script
  template:
    src: '{{ item.path }}.j2'
    dest: '/{{ item.path }}'
    mode: '{{ item.mode }}'
  loop:
    - { path: 'usr/local/bin/docker-registry-gc', mode: '0755' }
    - { path: 'etc/sudoers.d/docker-registry-gc', mode: '0440' }
  when: docker_registry__garbage_collector_enabled|bool

- name: Configure garbage collection in cron
  cron:
    name: 'Perform garbage collection in Docker Registry'
    cron_file: 'docker-registry-gc'
    user: '{{ docker_registry__user }}'
    job: '/usr/local/bin/docker-registry-gc'
    special_time: '{{ docker_registry__garbage_collector_interval }}'
    state: '{{ "present"
               if docker_registry__garbage_collector_enabled|bool
               else "absent" }}'
