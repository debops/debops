---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. Copyright (C) 2014-2021 Maciej Delmanowski <drybjed@gmail.com>
# .. Copyright (C) 2015-2021 DebOps <https://debops.org/>
# .. SPDX-License-Identifier: GPL-3.0-only

# .. _reprepro__ref_defaults:

# debops.reprepro default variables
# =================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# APT packages [[[
# ----------------

# .. envvar:: reprepro__base_packages [[[
#
# The list of default APT packages to install for repository management.
reprepro__base_packages: [ 'reprepro', 'dpkg-dev' ]

                                                                   # ]]]
# .. envvar:: reprepro__packages [[[
#
# List of additional APT packages to install with :command:`reprepro`.
reprepro__packages: []
                                                                   # ]]]
                                                                   # ]]]
# UNIX environment [[[
# --------------------

# .. envvar:: reprepro__user [[[
#
# UNIX system account which manages local APT repositories.
reprepro__user: 'reprepro'

                                                                   # ]]]
# .. envvar:: reprepro__group [[[
#
# UNIX system group which manages local APT repositories.
reprepro__group: 'reprepro'

                                                                   # ]]]
# .. envvar:: reprepro__additional_groups [[[
#
# List of additional UNIX groups which the :command:`reprepro` account should
# be a member of.
reprepro__additional_groups:

  # Allow direct SSH logins for administrators
  - '{{ ansible_local.system_groups.local_prefix + "sshusers" }}'

                                                                   # ]]]
# .. envvar:: reprepro__home [[[
#
# Path where :command:`reprepro` home directory is stored.
reprepro__home: '{{ (ansible_local.fhs.home | d("/var/local"))
                    + "/" + reprepro__user }}'

                                                                   # ]]]
# .. envvar:: reprepro__comment [[[
#
# The GECOS field of the :command:`reprepro` UNIX account.
reprepro__comment: 'Local APT repositories'

                                                                   # ]]]
# .. envvar:: reprepro__data_root [[[
#
# Path where :command:`reprepro` data files are stored, separated by instances.
reprepro__data_root: '{{ reprepro__home + "/repositories" }}'

                                                                   # ]]]
# .. envvar:: reprepro__public_root [[[
#
# Path where public contents of the APT repositories are stored, separated by
# instances.
reprepro__public_root: '{{ (ansible_local.fhs.www | d("/srv/www"))
                           + "/reprepro" }}'

                                                                   # ]]]
# .. envvar:: reprepro__spool_root [[[
#
# Path where uploads are stored for the incoming queue, separated by instances.
reprepro__spool_root: '{{ (ansible_local.fhs.spool | d("/var/spool"))
                          + "/reprepro" }}'

                                                                   # ]]]
# .. envvar:: reprepro__admin_sshkeys [[[
#
# List of public SSH keys which allow access to the :command:`reprepro` UNIX
# account via SSH. By default this role will add the SSH keys of the person
# currently executing the role to the account's SSH keyring.
reprepro__admin_sshkeys:
  - '{{ lookup("pipe", "ssh-add -L | grep ^\\\(sk-\\\)\\\?ssh || cat ~/.ssh/*.pub || cat ~/.ssh/authorized_keys || true") }}'
                                                                   # ]]]
                                                                   # ]]]
# Global reprepro configuration [[[
# ---------------------------------

# .. envvar:: reprepro__fqdn [[[
#
# The default Fully Qualified Domain Name used in various parts of the
# configuration.
reprepro__fqdn: '{{ ansible_fqdn }}'

                                                                   # ]]]
# .. envvar:: reprepro__domain [[[
#
# The default DNS domain used in various parts of the configuration.
reprepro__domain: '{{ ansible_domain }}'

                                                                   # ]]]
# .. envvar:: reprepro__origin [[[
#
# The value of the "Origin:" field defined for all APT repositories managed by
# :command:`reprepro`. This variable needs to be referenced in the
# :file:`conf/distributions` configuration to be effective.
reprepro__origin: '{{ ansible_local.machine.organization
                      | d(reprepro__domain.split(".")[0] | capitalize) }}'

                                                                   # ]]]
# .. envvar:: reprepro__mail_from [[[
#
# The default e-mail sender address for e-mails sent on each repository change.
reprepro__mail_from: '{{ reprepro__user + "@" + reprepro__fqdn }}'

                                                                   # ]]]
# .. envvar:: reprepro__mail_to [[[
#
# The default e-mail recipient for e-mails sent on each repository change.
reprepro__mail_to: '{{ "root@" + reprepro__domain }}'

                                                                   # ]]]
# .. envvar:: reprepro__max_body_size [[[
#
# Maximum size of a single upload to the incoming queue.
reprepro__max_body_size: '50M'

                                                                   # ]]]
# .. envvar:: reprepro__auth_realm [[[
#
# The default realm string used when access controls are enabled in a given APT
# repository.
reprepro__auth_realm: 'Access to this APT repository is restricted'
                                                                   # ]]]
                                                                   # ]]]
# GnuPG environment [[[
# ---------------------

# .. envvar:: reprepro__gpg_snapshot_name [[[
#
# Name of the snapshot file which contains :command:`reprepro` GnuPG snapshot.
# It will be backed up on Ansible Controller.
reprepro__gpg_snapshot_name: 'gnupg.tar'

                                                                   # ]]]
# .. envvar:: reprepro__gpg_snapshot_path [[[
#
# Directory on Ansible Controller where :command:`reprepro` GnuPG snapshot will
# be archived.
reprepro__gpg_snapshot_path: '{{ secret + "/reprepro/snapshots/" + inventory_hostname }}'

                                                                   # ]]]
# .. envvar:: reprepro__gpg_key_type [[[
#
# Settings for GPG key used to sign :command:`reprepro` repositories.
reprepro__gpg_key_type: 'RSA'

                                                                   # ]]]
# .. envvar:: reprepro__gpg_key_length [[[
#
# Length of the GPG key used by :command:`reprepro`.
reprepro__gpg_key_length: '4096'

                                                                   # ]]]
# .. envvar:: reprepro__gpg_name [[[
#
# String used as the name of the GPG key used to sign :command:`reprepro` APT
# repositories.
reprepro__gpg_name: '{{ reprepro__origin + " Automatic Signing Key" }}'

                                                                   # ]]]
# .. envvar:: reprepro__gpg_email [[[
#
# E-mail address of the GPG key used to sign :command:`reprepro` APT
# repositories.
reprepro__gpg_email: '{{ "apt-packages@" + reprepro__domain }}'

                                                                   # ]]]
# .. envvar:: reprepro__gpg_expire_days [[[
#
# Duration in days after which the GPG keys for the APT repositories will
# expire (default: 10 years).
reprepro__gpg_expire_days: '{{ (365 * 10) }}'

                                                                   # ]]]
# .. envvar:: reprepro__gpg_public_filename [[[
#
# Filename of the GPG public key published in the root of the APT repositories
# managed by :ref:`debops.reprepro` role.
reprepro__gpg_public_filename: '{{ reprepro__domain + ".asc" }}'

                                                                   # ]]]
# .. envvar:: reprepro__gpg_uploaders_keys [[[
#
# List of GPG fingerprints of people or services that are allowed to upload
# packages to APT repositories managed by :command:`reprepro`. They will be
# added to the UNIX account by the :ref:`debops.keyring` role. See its
# documentation for more details.
reprepro__gpg_uploaders_keys: []

                                                                   # ]]]
# .. envvar:: reprepro__installer_jessie_compatibility [[[
#
# The debian-installer version in jessie (and before) does not support GPG keys signatures
# using SHA512 or SHA384 digests. This variable configures GnuPG to not use these algorithms
# This is ONLY relevant if you want to install using your repository. The GnuPG and APT in
# an installed system support SHA512 and SHA384.
reprepro__installer_jessie_compatibility: False
                                                                   # ]]]
                                                                   # ]]]
# Local APT repository instances [[[
# ----------------------------------

# The variables below define list of APT repository instances managed by
# :ref:`debops.reprepro` role. See :ref:`reprepro__ref_instances` documentation
# for more details.

# .. envvar:: reprepro__default_instances [[[
#
# List of default APT repository instances managed by :ref:`debops.reprepro`.
reprepro__default_instances:

  - name: 'main'
    fqdn: '{{ reprepro__fqdn }}'

    incoming:

      - name: 'incoming'
        Allow:
          - 'trixie'
          - 'testing>trixie'
          - 'bookworm'
          - 'stable>bookworm'
          - 'bullseye'
          - 'oldstable>bullseye'
          - 'buster'
          - 'oldoldstable>buster'
        Options:
          - 'multiple_distributions'
        Cleanup:
          - 'on_deny'
          - 'on_error'

    distributions:

      - name: 'trixie'
        Description: 'Packages for Debian GNU/Linux 13 (Trixie)'
        Origin: '{{ reprepro__origin }}'
        Codename: 'trixie'
        Suite: 'testing'
        Architectures: [ 'source', 'amd64', 'arm64', 'armel', 'armhf', 'i386',
                         'mips64el', 'mipsel', 'ppc64el', 's390x' ]
        Components: [ 'main', 'contrib', 'non-free', 'non-free-firmware' ]
        Uploaders: 'uploaders/anybody'
        SignWith: 'default'
        DebIndices: [ 'Packages', 'Release', '.', '.gz', '.xz' ]
        DscIndices: [ 'Sources', 'Release', '.gz', '.xz' ]
        Log: |
          packages.bookworm.log
          --type=dsc email-changes.sh
        state: 'present'

      - name: 'bookworm'
        Description: 'Packages for Debian GNU/Linux 12 (Bookworm)'
        Origin: '{{ reprepro__origin }}'
        Codename: 'bookworm'
        Suite: 'stable'
        Architectures: [ 'source', 'amd64', 'arm64', 'armel', 'armhf', 'i386',
                         'mips64el', 'mipsel', 'ppc64el', 's390x' ]
        Components: [ 'main', 'contrib', 'non-free', 'non-free-firmware' ]
        Uploaders: 'uploaders/anybody'
        SignWith: 'default'
        DebIndices: [ 'Packages', 'Release', '.', '.gz', '.xz' ]
        DscIndices: [ 'Sources', 'Release', '.gz', '.xz' ]
        Log: |
          packages.bookworm.log
          --type=dsc email-changes.sh
        state: 'present'

      - name: 'bullseye'
        Description: 'Packages for Debian GNU/Linux 11 (Bullseye)'
        Origin: '{{ reprepro__origin }}'
        Codename: 'bullseye'
        Suite: 'oldstable'
        Architectures: [ 'source', 'amd64', 'arm64', 'armel', 'armhf', 'i386',
                         'mips64el', 'mipsel', 'ppc64el', 's390x' ]
        Components: [ 'main', 'contrib', 'non-free' ]
        Uploaders: 'uploaders/anybody'
        SignWith: 'default'
        DebIndices: [ 'Packages', 'Release', '.', '.gz', '.xz' ]
        DscIndices: [ 'Sources', 'Release', '.gz', '.xz' ]
        Log: |
          packages.bullseye.log
          --type=dsc email-changes.sh
        state: 'present'

      - name: 'buster'
        Description: 'Packages for Debian GNU/Linux 10 (Buster)'
        Origin: '{{ reprepro__origin }}'
        Codename: 'buster'
        Suite: 'oldoldstable'
        Architectures: [ 'source', 'amd64', 'arm64', 'armel', 'armhf', 'i386',
                         'mips', 'mips64el', 'mipsel', 'ppc64el', 's390x' ]
        Components: [ 'main', 'contrib', 'non-free' ]
        Uploaders: 'uploaders/anybody'
        SignWith: 'default'
        DebIndices: [ 'Packages', 'Release', '.', '.gz', '.xz' ]
        DscIndices: [ 'Sources', 'Release', '.gz', '.xz' ]
        Log: |
          packages.buster.log
          --type=dsc email-changes.sh
        state: 'present'

    uploaders:

      - name: 'anybody'
        raw: |
          allow * by any key
        state: 'present'

                                                                   # ]]]
# .. envvar:: reprepro__instances [[[
#
# List of APT repository instances that should be created on all hosts in the
# Ansible inventory.
reprepro__instances: []

                                                                   # ]]]
# .. envvar:: reprepro__group_instances [[[
#
# List of APT repository instances that should be created on hosts in
# a specific Ansible inventory group.
reprepro__group_instances: []

                                                                   # ]]]
# .. envvar:: reprepro__host_instances [[[
#
# List of APT repository instances that should be created on specific hosts in
# the Ansible inventory.
reprepro__host_instances: []

                                                                   # ]]]
# .. envvar:: reprepro__combined_instances [[[
#
# Variable which combines all APT repository instances and is used in role
# tasks and templates.
reprepro__combined_instances: '{{ reprepro__default_instances
                                     + reprepro__instances
                                     + reprepro__group_instances
                                     + reprepro__host_instances }}'
                                                                   # ]]]
                                                                   # ]]]
# Configuration for other Ansible roles [[[
# -----------------------------------------

# .. envvar:: reprepro__keyring__dependent_gpg_user [[[
#
# UNIX account which will contain GPG keys managed by the :ref:`debops.keyring`
# Ansible role.
reprepro__keyring__dependent_gpg_user: '{{ reprepro__user }}'

                                                                   # ]]]
# .. envvar:: reprepro__keyring__dependent_gpg_keys [[[
#
# List of GPG keys managed by the :ref:`debops.keyring` Ansible role.
reprepro__keyring__dependent_gpg_keys:

  - user: '{{ reprepro__user }}'
    group: '{{ reprepro__group }}'
    home: '{{ reprepro__home }}'

  - '{{ q("flattened", reprepro__gpg_uploaders_keys) }}'

                                                                   # ]]]
# .. envvar:: reprepro__nginx__dependent_servers [[[
#
# Server configuration for the :ref:`debops.nginx` Ansible role.
reprepro__nginx__dependent_servers: '{{ reprepro__env_nginx_servers }}'
                                                                   # ]]]
                                                                   # ]]]
