{# Copyright (C) 2015 Patryk Ściborek <patryk@sciborek.com>
 # Copyright (C) 2015-2018 Maciej Delmanowski <drybjed@gmail.com>
 # Copyright (C) 2015-2017 Robin Schneider <ypid@riseup.net>
 # Copyright (C) 2023 David Härdeman <david@hardeman.nu>
 # Copyright (C) 2015-2023 DebOps <https://debops.org/>
 # SPDX-License-Identifier: GPL-3.0-only
 #}
# {{ ansible_managed }}

# You should not make changes to this file directly, but instead make changes
# through the Ansible inventory. The "grub" role will make sure to run
# 'update-grub' afterwards to update /boot/grub/grub.cfg.
#
# For full documentation of the options in this file, see:
#   info -f grub -n 'Simple configuration'

{% for element in grub__combined_configuration | debops.debops.parse_kv_config %}
{%   if element.state | d('present') not in [ 'absent', 'ignore', 'init' ] %}
{%     set element_comment = ('#' if element.state | d('present') == 'comment' else '') %}
{%     set element_export = ('export ' if (element.export | d(False)) | bool else '') %}
{%     set element_quote = ('"' if (element.quote | d(True)) | bool else '') %}
{%     set element_name = ('grub_' + (element.name | lower | regex_replace('^grub_',''))) | upper %}
{%     set element_original = ((('$grub_' + (element.name | lower | regex_replace('^grub_',''))) | upper) if (element.original | d()) | bool else '')  %}
{%     set element_value = element.value | d('') %}
{##}
{%     if element.comment | d() %}
{{       element.comment | regex_replace('\n$','') | comment(prefix='\n', postfix='') -}}
{%     endif %}
{##}
{%     if element_value is string %}
{%       set element_str = element_value %}
{%     elif element_value is not iterable %}
{%       if element_value | bool %}
{%         if element_value | string == '1' %}
{%           set element_str = element_value %}
{%         else %}
{%           set element_str = 'true' %}
{%         endif %}
{%       else %}
{%         if element_value | int %}
{%           set element_str = element_value %}
{%         elif element_value | string == '0' %}
{%           set element_str = element_value %}
{%         else %}
{%           set element_str = 'false' %}
{%         endif %}
{%       endif %}
{%     elif element_value is not mapping %}
{%       set element_str = element_value | selectattr('state', 'equalto', 'present') | map(attribute='name') | list | join(' ') %}
{%     else %}
{%       set element_str = '' %}
{%     endif %}
{##}
{%     set element_str = [ element_original, element_str ] | join(' ') | trim %}
{{     '{}{}{}={}{}{}'.format(element_comment, element_export, element_name, element_quote, element_str, element_quote) }}
{%   endif %}
{% endfor %}
