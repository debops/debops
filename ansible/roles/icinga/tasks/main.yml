---
# Copyright (C) 2018 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2018 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import Custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  import_role:
    name: 'secret'

- name: Install required Icinga packages
  package:
    name: '{{ lookup("flattened",
                     (icinga__base_packages + icinga__packages),
                     wantlist=True) }}'
    state: 'present'
  register: icinga__register_packages
  until: icinga__register_packages is succeeded

- name: Add Icinga user to system UNIX groups
  user:
    name: '{{ icinga__user }}'
    groups: '{{ lookup("flattened", icinga__additional_groups, wantlist=True) | join(",") }}'
    append: True
  notify: [ 'Check icinga2 configuration and restart' ]

- name: Load dependent configuration variables
  include_vars:
    dir: '{{ secret + "/icinga/dependent_config/" + inventory_hostname }}'
    depth: 1
    name: 'icinga__vars_dependent_configuration'
  when: (ansible_local|d() and ansible_local.icinga|d() and
         (ansible_local.icinga.configured|d())|bool)

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save Icinga local facts
  template:
    src: 'etc/ansible/facts.d/icinga.fact.j2'
    dest: '/etc/ansible/facts.d/icinga.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  meta: 'flush_handlers'

- name: Check current Icinga diversions
  environment:
    LC_ALL: 'C'
  shell: set -o nounset -o pipefail -o errexit &&
         dpkg-divert --list '/etc/icinga2/*.dpkg-divert' | grep -E '^local diversion' | awk '{print $NF}' || true
  args:
    executable: 'bash'
  register: icinga__register_diversions
  check_mode: False
  changed_when: False

- name: Divert Icinga configuration
  command: dpkg-divert --quiet --local
                       --divert /etc/icinga2/{{ item.filename
                                                | d(item.name | regex_replace('.conf$','') + '.conf') }}.dpkg-divert
                       --rename /etc/icinga2/{{ item.filename | d(item.name | regex_replace('.conf$','') + '.conf') }}
  with_items: '{{ icinga__combined_configuration | debops.debops.parse_kv_items }}'
  notify: [ 'Check icinga2 configuration and restart' ]
  when: (item.name|d() and item.state|d('present') not in [ 'absent', 'ignore', 'init', 'feature' ] and
         (item.divert|d())|bool and
         ('/etc/icinga2/' + (item.filename | d(item.name | regex_replace('.conf$','') + '.conf'))
                          + '.dpkg-divert' not in icinga__register_diversions.stdout_lines))

- name: Ensure that configuration directories exist
  file:
    path: '/etc/icinga2/{{ (item.filename | d(item.name | regex_replace(".conf$","") + ".conf")) | dirname }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items: '{{ icinga__combined_configuration | debops.debops.parse_kv_items }}'
  when: (item.name|d() and item.state|d('present') not in [ 'absent', 'ignore', 'init', 'feature' ] and
         ((item.filename | d(item.name | regex_replace(".conf$","") + ".conf")) | dirname | d()))

- name: Remove Icinga configuration if requested
  file:
    path: '/etc/icinga2/{{ item.filename | d(item.name | regex_replace(".conf$","") + ".conf") }}'
    state: 'absent'
  with_items: '{{ icinga__combined_configuration | debops.debops.parse_kv_items }}'
  notify: [ 'Check icinga2 configuration and restart' ]
  when: (item.name|d() and item.state|d('present') == 'absent' and item.divert is undefined)

- name: Generate Icinga configuration files
  template:
    src: 'etc/icinga2/template.conf.j2'
    dest: '/etc/icinga2/{{ item.filename | d(item.name | regex_replace(".conf$","") + ".conf") }}'
    owner: '{{ item.owner | d("root") }}'
    group: '{{ item.group | d("root") }}'
    mode:  '{{ item.mode  | d("0644") }}'
  with_items: '{{ icinga__combined_configuration | debops.debops.parse_kv_items }}'
  notify: [ 'Check icinga2 configuration and restart' ]
  when: (item.name|d() and item.state|d('present') not in [ 'absent', 'ignore', 'init', 'divert', 'feature' ])
  no_log: '{{ item.no_log | d(omit) }}'

- name: Ensure that configuration directories exist on the master node
  file:
    path: '/etc/icinga2/zones.d/{{ (item.filename | d(item.name | regex_replace(".conf$","") + ".conf")) | dirname }}'
    state: 'directory'
    recurse: true
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items: '{{ icinga__master_combined_configuration | debops.debops.parse_kv_items }}'
  delegate_to: '{{ icinga__master_delegate_to }}'
  when: (item.name|d() and item.state|d('present') not in [ 'absent', 'ignore', 'init', 'feature' ] and
         ((item.filename | d(item.name | regex_replace(".conf$","") + ".conf")) | dirname | d()))

- name: Remove Icinga configuration on the master node if requested
  file:
    path: '/etc/icinga2/zones.d/{{ item.filename | d(item.name | regex_replace(".conf$","") + ".conf") }}'
    state: 'absent'
  with_items: '{{ icinga__master_combined_configuration | debops.debops.parse_kv_items }}'
  delegate_to: '{{ icinga__master_delegate_to }}'
  notify: [ 'Check icinga2 configuration and restart it on the master node' ]
  when: (item.name|d() and item.state|d('present') == 'absent')

- name: Generate Icinga configuration files on the master node
  template:
    src: 'etc/icinga2/template.conf.j2'
    dest: '/etc/icinga2/zones.d/{{ item.filename | d(item.name | regex_replace(".conf$","") + ".conf") }}'
    owner: '{{ item.owner | d("root") }}'
    group: '{{ item.group | d("root") }}'
    mode:  '{{ item.mode  | d("0644") }}'
  with_items: '{{ icinga__master_combined_configuration | debops.debops.parse_kv_items }}'
  delegate_to: '{{ icinga__master_delegate_to }}'
  notify: [ 'Check icinga2 configuration and restart it on the master node' ]
  when: (item.name|d() and item.state|d('present') not in [ 'absent', 'ignore', 'init', 'divert', 'feature' ])
  no_log: '{{ item.no_log | d(omit) }}'

- name: Revert original Icinga configuration
  shell: rm -f /etc/icinga2/{{ item.filename | d(item.name | regex_replace('.conf$','') + '.conf') }}
         ; dpkg-divert --quiet --local --rename
                       --remove /etc/icinga2/{{ item.filename | d(item.name | regex_replace('.conf$','') + '.conf') }}
  args:
    warn: False
  with_items: '{{ icinga__combined_configuration | debops.debops.parse_kv_items }}'
  notify: [ 'Check icinga2 configuration and restart' ]
  when: (item.name|d() and item.state|d('present') == 'absent' and (item.divert|d())|bool and
         ('/etc/icinga2/' + (item.filename | d(item.name | regex_replace('.conf$','') + '.conf'))
                          + '.dpkg-divert' in icinga__register_diversions.stdout_lines))

- name: Configure state of Icinga features
  file:
    path: '/etc/icinga2/features-enabled/{{ item.feature_name }}.conf'
    src: '{{ ("../features-available/" + item.feature_name + ".conf")
             if (item.feature_state|d("present") == "present") else omit }}'
    state: '{{ "link" if item.feature_state|d("present") == "present" else "absent" }}'
    mode: '0644'
    force: '{{ True if ansible_check_mode|bool else omit }}'
  with_items: '{{ icinga__combined_configuration | debops.debops.parse_kv_items }}'
  notify: [ 'Check icinga2 configuration and restart' ]
  when: (item.name|d() and item.state|d('present') not in [ 'absent', 'ignore', 'init', 'divert' ] and
         item.feature_name|d() and item.feature_state|d())

- name: Copy custom files for Icinga
  copy:
    content: '{{ item.content | d(omit) }}'
    src:     '{{ item.src     | d(omit) }}'
    dest:    '{{ item.dest    | d(omit) }}'
    force:   '{{ item.force   | d(omit) }}'
    owner:   '{{ item.owner   | d("root") }}'
    group:   '{{ item.group   | d("root") }}'
    mode:    '{{ item.mode    | d("0755") }}'
  with_flattened:
    - '{{ icinga__custom_files }}'
    - '{{ icinga__group_custom_files }}'
    - '{{ icinga__host_custom_files }}'
  when: ((item.src|d() or item.content|d()) and
         item.dest|d() and item.state|d("present") != "absent")

- name: Save dependent configuration on Ansible Controller
  template:
    src: 'secret/icinga/dependent_config/inventory_hostname/configuration.json.j2'
    dest: '{{ secret + "/icinga/dependent_config/" + inventory_hostname + "/configuration.json" }}'
    mode: '0644'
  become: False
  delegate_to: 'localhost'

- name: Register Icinga node in Icinga Director
  uri:
    body_format: 'json'
    headers:
      Accept: 'application/json'
    method: 'POST'
    body: '{{ icinga__director_register_host_object }}'
    url: '{{ icinga__director_register_api_url }}'
    user: '{{ icinga__director_register_api_user }}'
    password: '{{ icinga__director_register_api_password }}'
    status_code: '201,422,500'
    force_basic_auth: True
  register: icinga__register_director_host
  notify: [ 'Trigger Icinga Director configuration deployment' ]
  when: icinga__director_enabled|bool and icinga__director_register|bool and
        icinga__node_type != 'master'
  changed_when: icinga__register_director_host.status == 201
  tags: [ 'role::icinga:register' ]
  no_log: True
