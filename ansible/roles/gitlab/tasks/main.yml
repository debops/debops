---
# Copyright (C) 2015-2017 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2017 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps secret role
  import_role:
    name: 'secret'

- name: Install required packages
  package:
    name: '{{ q("flattened", (gitlab__base_packages
                              + (gitlab__release_packages[gitlab__distribution_release] | d([]))
                              + (gitlab__database_packages[gitlab__distribution_release][gitlab__database] | d([])))) }}'
    state: 'present'
  register: gitlab__register_packages
  until: gitlab__register_packages is succeeded

- name: Create GitLab system group
  group:
    name: '{{ gitlab_group }}'
    system: True
    state: 'present'

- name: Create GitLab user
  user:
    name: '{{ gitlab_user }}'
    group: '{{ gitlab_group }}'
    home: '{{ gitlab_home }}'
    shell: '{{ gitlab__shell }}'
    comment: 'GitLab'
    groups: '{{ gitlab_user_append_groups | join(",") | default(omit) }}'
    append: True
    system: True
    state: 'present'

- name: Create GitLab application directory
  file:
    path: '{{ gitlab_app_root_path }}'
    state: 'directory'
    owner: '{{ gitlab_user }}'
    group: '{{ gitlab_group }}'
    mode: '0750'

- name: Allow access to GitLab application directory by the webserver
  acl:
    name: '{{ gitlab_app_root_path }}'
    entity: 'www-data'
    etype: 'group'
    permissions: 'x'
    state: 'present'
  when: gitlab_support_filesystem_acl|bool

- name: Allow GitLab user to the ~/.ssh directory
  file:
    path: '{{ gitlab_home + "/.ssh" }}'
    state: 'directory'
    owner: '{{ gitlab_user }}'
    group: '{{ gitlab_group }}'
    mode: '0700'

- name: Configure ~/.gitconfig
  template:
    src: 'var/local/git/gitconfig.j2'
    dest: '{{ gitlab_home + "/.gitconfig" }}'
    owner: '{{ gitlab_user }}'
    group: '{{ gitlab_group }}'
    mode: '0644'

- include: download_gitlab_ce.yml

- name: Check GitLab version numbers
  script: 'script/gitlab-version{{ "2" if (ansible_python_version is version_compare("3.5", "<")) else "3" }}
           {{ gitlab_ce_git_checkout }}'
  register: gitlab__register_version
  changed_when: False
  check_mode: False

- name: Set facts about GitLab version numbers
  set_fact:
    gitlab__fact_version:
      gitaly:    '{{ (gitlab__register_version.stdout | from_json)["gitaly_server_version"]    | d("") }}'
      pages:     '{{ (gitlab__register_version.stdout | from_json)["gitlab_pages_version"]     | d("") }}'
      shell:     '{{ (gitlab__register_version.stdout | from_json)["gitlab_shell_version"]     | d("") }}'
      workhorse: '{{ (gitlab__register_version.stdout | from_json)["gitlab_workhorse_version"] | d("") }}'
      ce:        '{{ (gitlab__register_version.stdout | from_json)["version"]                  | d("") }}'

- include: configure_gitlab-shell.yml

- include: configure_gitlab-pages.yml
  when: gitlab_enable_pages | bool

- include: configure_gitlab-workhorse.yml

- include: configure_gitlab_ce.yml

- include: configure_gitaly.yml
  when: gitlab_version is version_compare("9.0", operator="gt", strict=True)

- include: start_gitlab_ce.yml

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save information about GitLab CE in Ansible Facts
  template:
    src: 'etc/ansible/facts.d/gitlab.fact.j2'
    dest: '/etc/ansible/facts.d/gitlab.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  tags: [ 'meta::facts' ]
