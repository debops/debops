---
# Copyright (C) 2020 Pedro Luis Lopez <pedroluis.lopezsanchez@gmail.com>
# Copyright (C) 2020 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- import_role:
    name: 'ansible_plugins'

- import_role:
    name: 'secret'

- name: Check if the dependent config file exists
  stat:
    path: '{{ secret + "/logstash/dependent_config/" + inventory_hostname + "/config.json" }}'
  register: logstash__register_dependent_config_file
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.logstash|d() and
         ansible_local.logstash.installed|d())
  tags: [ 'role::logstash:config' ]

- name: Load the dependent configuration from Ansible Controller
  slurp:
    src: '{{ secret + "/logstash/dependent_config/" + inventory_hostname + "/config.json" }}'
  register: logstash__register_dependent_config
  become: False
  delegate_to: 'localhost'
  when: (ansible_local|d() and ansible_local.logstash|d() and
         ansible_local.logstash.installed|d() and
         logstash__register_dependent_config_file.stat.exists|bool)
  tags: [ 'role::logstash:config' ]

- name: Add Logstash server user to specified groups
  user:
    name: '{{ logstash__user }}'
    groups: '{{ logstash__append_groups | join(",") | default(omit) }}'
    append: True
    createhome: False
  when: logstash__pki|bool

- name: Divert original configuration files
  dpkg_divert:
    path: '{{ item }}'
    state: 'present'
    delete: True
  with_items:
    - '/etc/logstash/logstash.yml'
    - '/etc/logstash/pipelines.yml'
    - '/etc/logstash/jvm.options'
  notify: [ 'Start logstash' ]
  tags: [ 'role::logstash:config' ]

  # https://github.com/elastic/logstash/issues/9897
- name: Generate private key in PKCS8 format
  command: '{{ "openssl pkcs8 -topk8 -inform pem -in " + logstash__pki_path + "/" + logstash__pki_realm +
               "/" + logstash__pki_key + " -outform pem -nocrypt -out " + logstash__pki_path + "/" +
               logstash__pki_realm + "/" + logstash__pki_key_pkcs8 }}'
  when: logstash__pki

- name: Set correct permissions for key in PKCS8 format
  file:
    path: '{{ logstash__pki_path + "/" + logstash__pki_realm + "/" + logstash__pki_key_pkcs8 }}'
    owner: 'root'
    group: 'ssl-cert'
    mode: '0640'
  when: logstash__pki

- name: Generate Logstash configuration
  template:
    src: '{{ item }}.j2'
    dest: '/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart logstash' ]
  with_items:
    - 'etc/logstash/logstash.yml'
    - 'etc/logstash/pipelines.yml'
  tags: [ 'role::logstash:config' ]

- name: Generate Logstash pipelines configuration
  template:
    src: 'etc/logstash/conf.d/pipeline.conf.j2'
    dest: '/etc/logstash/conf.d/{{ item.name }}.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart logstash' ]
  tags: [ 'role::logstash:config' ]
  with_items: '{{ logstash__combined_pipelines }}'

- name: Generate Logstash JVM configuration
  template:
    src: 'etc/logstash/jvm.options.j2'
    dest: '/etc/logstash/jvm.options'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart logstash' ]
  tags: [ 'role::logstash:config' ]

- name: Manage data path
  file:
    path:    '{{ logstash__path_data }}'
    state:   'directory'
    owner:   '{{ logstash__user }}'
    group:   '{{ logstash__group }}'
    mode:    '0750'

- name: Check state of installed Logstash plugins
  command: bin/logstash-plugin list
  args:
    chdir: '/usr/share/logstash'
  register: logstash__register_plugins
  changed_when: False
  check_mode: False

- name: Install Logstash plugins
  command: bin/logstash-plugin install {{ item.url | d(item.name) }} --batch
  args:
    chdir: '/usr/share/logstash'
  notify: [ 'Restart logstash' ]
  with_flattened:
    - '{{ logstash__combined_plugins }}'
  when: (item.name|d() and item.state|d('present') != 'absent' and
         (item.name if ':' not in item.name else item.name.split(':')[1])
         not in logstash__register_plugins.stdout_lines)

- name: Remove Logstash plugins
  command: bin/logstash-plugin remove {{ item.name }}
  args:
    chdir: '/usr/share/logstash'
  notify: [ 'Restart logstash' ]
  with_flattened:
    - '{{ logstash__combined_plugins }}'
  when: (item.name|d() and item.state|d('present') == 'absent' and
         (item.name if ':' not in item.name else item.name.split(':')[1])
         in logstash__register_plugins.stdout_lines)

- name: Save Logstash dependent configuration on Ansible Controller
  template:
    src: 'secret/logstash/dependent_config/config.json.j2'
    dest: '{{ secret + "/logstash/dependent_config/" + inventory_hostname + "/config.json" }}'
  become: False
  delegate_to: 'localhost'
  tags: [ 'role::logstash:config' ]

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save Logstash local facts
  template:
    src: 'etc/ansible/facts.d/logstash.fact.j2'
    dest: '/etc/ansible/facts.d/logstash.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: logstash__register_facts

- name: Update Ansible facts if they were modified
  action: setup
  when: logstash__register_facts is changed
