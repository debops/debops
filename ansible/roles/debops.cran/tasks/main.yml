---

- name: Get upstream APT GPG key
  apt_key:
    id: '{{ cran__upstream_apt_key.id }}'
    data: '{{ cran__upstream_apt_key.data | d(omit) }}'
    keyserver: '{{ cran__upstream_apt_key.keyserver | d(omit) }}'
    state: 'present'
  register: cran__register_apt_key
  until: cran__register_apt_key is succeeded
  when: cran__upstream|bool and ansible_pkg_mgr == 'apt'

- name: Configure upstream APT repository
  apt_repository:
    repo: '{{ cran__upstream_apt_repo }}'
    state: 'present'
    update_cache: True
  when: cran__upstream|bool and ansible_pkg_mgr == 'apt'

- name: Install system packages required for R support
  package:
    name: '{{ item }}'
    state: 'present'
  with_flattened:
    - '{{ cran__base_packages }}'
    - '{{ cran__packages }}'
    - '{{ cran__group_packages }}'
    - '{{ cran__host_packages }}'
    - '{{ cran__dependent_packages }}'
  register: cran__register_packages
  until: cran__register_packages is succeeded

- name: Configure Java environment in R
  command: R CMD javareconf
  when: (cran__java_integration|bool and
         (ansible_local|d() and ansible_local.cran is undefined))

- name: Manage R packages
  cran:
    name:  '{{ item.name  | d(item) }}'
    repo:  '{{ item.repo  | d(cran__upstream_mirror) }}'
    state: '{{ item.state | d("present") }}'
  with_flattened:
    - '{{ cran__r_packages }}'
    - '{{ cran__group_r_packages }}'
    - '{{ cran__host_r_packages }}'
    - '{{ cran__dependent_r_packages }}'

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save CRAN local facts
  template:
    src: 'etc/ansible/facts.d/cran.fact.j2'
    dest: '/etc/ansible/facts.d/cran.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: cran__register_facts

- name: Update Ansible facts if they were modified
  action: setup
  when: cran__register_facts is changed
