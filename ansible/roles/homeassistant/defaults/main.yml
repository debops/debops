---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. Copyright (C) 2017 Robin Schneider <ypid@riseup.net>
# .. Copyright (C) 2017 DebOps <https://debops.org/>
# .. SPDX-License-Identifier: GPL-3.0-only

# .. _homeassistant__ref_defaults:

# debops-contrib.homeassistant default variables [[[
# ==================================================

# .. contents:: Sections
#    :local:
#
# .. include:: includes/all.rst


# Packages and installation [[[
# -----------------------------

# .. envvar:: homeassistant__base_packages [[[
#
# List of base packages to install.
homeassistant__base_packages:
  - 'libffi-dev'
  - 'libssl-dev'
  - 'libjpeg-dev'
  - 'zlib1g-dev'
  - 'autoconf'
  - 'build-essential'
  - 'libopenjp2-7'
  - 'libtiff5'
  - '{{ "libturbojpeg"
        if (ansible_distribution == "Ubuntu")
        else "libturbojpeg0" }}'
  - 'tzdata'
                                                                   # ]]]
# .. envvar:: homeassistant__packages [[[
#
# List of additional packages to install.
homeassistant__packages: []

                                                                   # ]]]
# .. envvar:: homeassistant__dependency_python_packages [[[
#
# List of Home Assistant Core dependency packages.
# This refers to Debian system packages and not Python packages.
homeassistant__dependency_python_packages:
  - 'python3-dev'
  - 'python3-venv'
  - 'python3-pip'
  - 'python3-virtualenv'
  - 'python3-requests'
  - 'python3-yaml'
  - 'python3-tz'
  - 'python3-jinja2'
  - 'python3-voluptuous'

  - '{{ ["python3-aiohttp"]
        if (ansible_distribution_release not in ["trusty"])
        else [] }}'
  - '{{ ["python3-async-timeout"]
        if (ansible_distribution == "Debian" and ansible_distribution_major_version|int >= 9)
        else [] }}'
  - 'python3-chardet'
                                                                   # ]]]
# .. envvar:: homeassistant__optional_python_packages [[[
#
# List of optional packages.
# This refers to Debian system packages and not Python packages.
homeassistant__optional_python_packages:
  - '{{ ["python3-colorlog"]
        if (ansible_distribution_release not in ["trusty"])
        else [] }}'
  - 'libffi-dev'
  - 'libssl-dev'
  - 'python3-crypto'
  - 'python3-cryptography'
  - 'python3-pyparsing'
  - 'python3-appdirs'

                                                                   # ]]]
# .. envvar:: homeassistant__combined_packages [[[
#
# List of all system packages which will be installed by the role.
homeassistant__combined_packages: '{{ (
      homeassistant__base_packages +
      homeassistant__packages +
      (homeassistant__dependency_python_packages if (not homeassistant__virtualenv|bool) else []) +
      (homeassistant__optional_python_packages if (not homeassistant__virtualenv|bool) else [])
    ) | unique | sort }}'

                                                                   # ]]]
# .. envvar:: homeassistant__deploy_state [[[
#
# What is the desired state which this role should achieve? Possible options:
#
# ``present``
#   Default. Ensure that Home Assistant is installed and configured as requested.
#
# ``absent``
#   Ensure that Home Assistant is uninstalled. Not fully supported yet.
#
homeassistant__deploy_state: 'present'
                                                                   # ]]]
                                                                   # ]]]
# FQDN and DNS addresses [[[
# --------------------------

# .. envvar:: homeassistant__fqdn [[[
#
# The Fully Qualified Domain Name of the Home Assistant instance. This address is
# used to configure the webserver frontend.
homeassistant__fqdn: 'ha.{{ homeassistant__domain }}'

                                                                   # ]]]
# .. envvar:: homeassistant__domain [[[
#
# Domain that will be configured for the Home Assistant instance.
homeassistant__domain: '{{ ansible_domain }}'
                                                                   # ]]]
                                                                   # ]]]
# Reverse proxy configuration [[[
# -------------------------------

# While Home Assistant provides it’s own authentication methods one might want
# to enable multiple authentications after each other that are enforced by
# different components (Security in Depth).
# Also refer to
# `RFC: Support subpath/subdir hosting for additional security`__.
#
# .. __: https://github.com/debops/debops/issues/1233

# .. envvar:: homeassistant__verify_client_certificate [[[
#
# Should a valid client certificate be required to access Home Assistant?
homeassistant__verify_client_certificate: False

                                                                   # ]]]
# .. envvar:: homeassistant__basic_auth [[[
#
# Enable or disable HTTP Basic Authentication in the webserver frontend.
# Note that there is an unhandled issue that you might face when enabling this.
# Ref: https://github.com/home-assistant/core/issues/6184
homeassistant__basic_auth: False

                                                                   # ]]]
# .. envvar:: homeassistant__basic_auth_realm [[[
#
# The HTTP Basic Auth realm used for Home Assistant.
homeassistant__basic_auth_realm: 'Home Assistant'

                                                                   # ]]]
# .. envvar:: homeassistant__basic_auth_name [[[
#
# Name of the :command:`htpasswd` file stored in the
# :file:`/etc/nginx/private/` directory which contains HTTP Basic Auth
# credentials.
homeassistant__basic_auth_name: 'homeassistant'

                                                                   # ]]]
# .. envvar:: homeassistant__basic_auth_users [[[
#
# List of user accounts which will be allowed access to Home Assistant.
homeassistant__basic_auth_users: '{{ ansible_local.core.admin_users|d([]) }}'

                                                                   # ]]]
# .. envvar:: homeassistant__webserver_user [[[
#
# Name of the webserver user account which will be granted read only access to
# the www directory outside of the Home Assistant configuration directory.
homeassistant__webserver_user: '{{ ansible_local.nginx.user|d("www-data") }}'
                                                                   # ]]]
                                                                   # ]]]
# Directory paths [[[
# -------------------

# .. envvar:: homeassistant__home_path [[[
#
# The Home Assistant system account home directory.
homeassistant__home_path: '{{ (ansible_local.fhs.home | d("/var/local"))
                              + "/" + homeassistant__user }}'

                                                                   # ]]]
# .. envvar:: homeassistant__virtualenv_path [[[
#
# Path to the virtualenv where Home Assistant will be installed.
homeassistant__virtualenv_path: '{{ homeassistant__home_path + "/prod_venv" }}'
                                                                   # ]]]
                                                                   # ]]]
# System user and group [[[
# -------------------------

# .. envvar:: homeassistant__user [[[
#
# System UNIX account under which Home Assistant is run.
homeassistant__user: 'homeassistant'

                                                                   # ]]]
# .. envvar:: homeassistant__group [[[
#
# System UNIX group used by Home Assistant.
homeassistant__group: 'homeassistant'

                                                                   # ]]]
# .. envvar:: homeassistant__groups [[[
#
# List of additional system groups of the system UNIX account.
# The ``dialout`` group grants accesses to devices typically used for home
# automation which can be found under :file:`/dev/ttyACM*` for example.
# If you don’t use such devices, you can remove the group from the list.
homeassistant__groups: [ 'dialout' ]

                                                                   # ]]]
# .. envvar:: homeassistant__gecos [[[
#
# Contents of the GECOS field set for the Home Assistant account.
homeassistant__gecos: 'Home Assistant'

                                                                   # ]]]
# .. envvar:: homeassistant__shell [[[
#
# The default shell set on the Home Assistant account.
homeassistant__shell: '/usr/sbin/nologin'
                                                                   # ]]]
                                                                   # ]]]
# Home Assistant sources and deployment [[[
# -----------------------------------------

# .. envvar:: homeassistant__virtualenv [[[
#
# Should a Python virtualenv be created and used for Home Assistant deployment?
# Virualenv is currently the only supported way. Listing all dependencies here
# has is too high maintenance and does not help much because Home Assistant
# might install dependencies ad-hoc.
homeassistant__virtualenv: True

                                                                   # ]]]
# .. envvar:: homeassistant__release_channel [[[
#
# Which release channel should be installed?
#
# Choices:
#
# * ``release``: Latest release.
# * ``develop``: Latest development version.
#
homeassistant__release_channel: 'release'

                                                                   # ]]]
# .. envvar:: homeassistant__git_repo [[[
#
# The URI of the Home Assistant git source repository.
homeassistant__git_repo: 'https://github.com/home-assistant/home-assistant.git'

                                                                   # ]]]
# .. envvar:: homeassistant__git_version [[[
#
# The git branch or tag which will be installed.
# Refer to the `releasing documentation
# <https://home-assistant.io/developers/releasing/>`__ for details.
homeassistant__git_version: '{{ "master" if (homeassistant__release_channel in ["release"]) else "dev" }}'

                                                                   # ]]]
# .. envvar:: homeassistant__git_dest [[[
#
# Path where the Home Assistant sources will be checked out (installation path).
homeassistant__git_dest: '{{ homeassistant__home_path + "/home-assistant" }}'

                                                                   # ]]]
# .. envvar:: homeassistant__git_recursive [[[
#
# Should the git repository be cloned recursively?
homeassistant__git_recursive: True

                                                                   # ]]]
# .. envvar:: homeassistant__git_depth [[[
#
# To which depth should the git repository be cloned?
# Default is to clone the whole repository.
homeassistant__git_depth: '{{ omit }}'

                                                                   # ]]]
# .. envvar:: homeassistant__git_update [[[
#
# Should new revisions be retrieved from the origin repository?
homeassistant__git_update: True

                                                                   # ]]]
# .. envvar:: homeassistant__daemon_path [[[
#
# File path where the Home Assistant console script is located.
homeassistant__daemon_path: '{{ (homeassistant__home_path + "/prod_venv/bin/hass")
                                if (homeassistant__virtualenv|bool)
                                else (homeassistant__home_path + "/.local/bin/hass") }}'
                                                                   # ]]]
                                                                   # ]]]
# Configuration for other Ansible roles [[[
# -----------------------------------------

# .. envvar:: homeassistant__nginx__dependent_upstreams [[[
#
# Configuration of the Home Assistant nginx upstream, used by the debops.nginx_
# Ansible role.
homeassistant__nginx__dependent_upstreams:

  - name: 'homeassistant'
    type: 'default'
    state: '{{ "present" if (homeassistant__deploy_state == "present") else "absent" }}'
    enabled: True
    server: 'localhost:8123'

                                                                   # ]]]
# .. envvar:: homeassistant__nginx__dependent_htpasswd [[[
#
# HTTP Basic Auth password configuration for the :ref:`debops.nginx` Ansible
# role.
homeassistant__nginx__dependent_htpasswd:
  name: '{{ homeassistant__basic_auth_name }}'
  users: '{{ homeassistant__basic_auth_users }}'

                                                                   # ]]]
# .. envvar:: homeassistant__nginx__dependent_servers [[[
#
# Configuration of the Home Assistant nginx server, used by the debops.nginx_
# Ansible role.
homeassistant__nginx__dependent_servers:

  - name: '{{ homeassistant__fqdn }}'
    filename: 'debops.homeassistant'
    by_role: 'debops-contrib.homeassistant'
    state: '{{ "present" if (homeassistant__deploy_state == "present") else "absent" }}'
    type: 'proxy'
    ssl_verify_client: '{{ homeassistant__verify_client_certificate|bool }}'
    auth_basic: '{{ homeassistant__basic_auth | bool }}'
    auth_basic_realm: '{{ homeassistant__basic_auth_realm }}'
    auth_basic_name: '{{ homeassistant__basic_auth_name }}'
    options: |
      proxy_buffering off;

      location /local/ {
              autoindex off;
              alias {{ homeassistant__home_path }}/www/;
      }
    proxy_pass: 'http://homeassistant'
    proxy_options: |
      proxy_redirect http:// https://;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

# ]]]
# ]]]
# ]]]
