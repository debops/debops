---

- name: Install required packages
  package:
    name: '{{ q("flattened", ([ "git", "python-pip" ]
                              + debops__base_packages
                              + debops__packages)) }}'
    state: 'present'
  register: debops__register_packages
  until: debops__register_packages is succeeded

- name: Install DebOps from PyPI
  pip:
    name: '{{ q("flattened", debops__pip_packages) }}'
    state: 'present'
  register: debops__register_pip_install
  until: debops__register_pip_install is succeeded
  notify: '{{ [ "Update DebOps in the background with " + debops__update_method ]
              if not debops__update_method == "sync" else omit }}'

- name: Configure system-wide DebOps scripts
  template:
    src: 'etc/debops.cfg.j2'
    dest: '/etc/debops.cfg'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: debops__install_systemwide|bool

- name: Update roles and playbooks
  become: '{{ debops__install_systemwide|bool }}'
  command: debops-update
  when: debops__update_method == 'sync'

- name: Clone project repository
  become: '{{ debops__install_systemwide|bool }}'
  git:
    repo: '{{ debops__project_git_repo }}'
    dest: '{{ debops__project_name if debops__project_name else debops__project_git_repo | basename }}'
    version: 'master'
    update: True
  when: debops__project_git_repo|d()

- name: Initialize new project
  become: '{{ debops__install_systemwide|bool }}'
  command: debops-init '{{ debops__project_name }}'
  args:
    creates: '{{ debops__project_name }}/.debops.cfg'
  when: debops__project_name|d() and
        not debops__project_git_repo|d()
