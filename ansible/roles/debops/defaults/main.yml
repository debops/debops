---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# .. _debops__ref_defaults:

# debops.debops default variables [[[
# ===================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# DebOps packages [[[
# -------------------

# .. envvar:: debops__base_packages [[[
#
# List of APT packages required by DebOps on Ansible Controller.
debops__base_packages: [ 'uuid-runtime' ]

                                                                   # ]]]
# .. envvar:: debops__packages [[[
#
# List of additional APT packages to install with DebOps.
debops__packages: []

                                                                   # ]]]
# .. envvar:: debops__pip_packages [[[
#
# List of packages to install from PyPI using the ``pip`` command.
debops__pip_packages: [ 'debops' ]
                                                                   # ]]]
                                                                   # ]]]
# Playbook and role installation [[[
# ----------------------------------

# .. envvar:: debops__install_systemwide [[[
#
# Download playbooks and roles to a system-wide location, on installation. If
# set to ``False`` the playbooks and roles will be installed locally for the
# current Ansible user.
debops__install_systemwide: True

                                                                   # ]]]
# .. envvar:: debops__update_method [[[
#
# Specify the method which should be used to download playbooks and roles:
#
# - ``batch``: use the ``batch`` command from the ``at`` package, depends on system
#   load, sends back email with results;
#
# - ``async``: use ``async`` Ansible support, does not create any output;
#
# - ``sync``: immediately sync and only continue after everything is in place
#
debops__update_method: '{{ ("batch"
                            if (ansible_local|d() and ansible_local.atd|d() and
                                ansible_local.atd.enabled|bool)
                            else "async") }}'

                                                                   # ]]]
# .. envvar:: debops__async_timeout [[[
#
# Specify timeout of the ``async`` Ansible command that downloads DebOps
# playbooks and roles, in seconds.
debops__async_timeout: '{{ (60 * 20) }}'
                                                                   # ]]]
                                                                   # ]]]
# DebOps system-wide configuration [[[
# ------------------------------------

# .. envvar:: debops__data_path [[[
#
# Path where DebOps playbooks and roles will be installed system-wide.
debops__data_path: '{{ (ansible_local.root.share
                        if (ansible_local|d() and ansible_local.root|d() and
                            ansible_local.root.share|d())
                        else "/usr/local/share") + "/debops" }}'
                                                                   # ]]]
                                                                   # ]]]
# DebOps project configuration [[[
# --------------------------------

# .. envvar:: debops__project_git_repo [[[
#
# Git URL to a DebOps project repository which will be cloned after installing
# DebOps.
debops__project_git_repo: ''

                                                                   # ]]]
# .. envvar:: debops__project_name [[[
#
# Name of a new DebOps project to initialize or name of the project download
# directory in case :envvar:`debops__project_git_repo` is defined.
debops__project_name: ''
                                                                   # ]]]
                                                                   # ]]]
# Configuration for other Ansible roles [[[
# -----------------------------------------

# .. envvar:: debops__python__dependent_packages3 [[[
#
# Configuration for the :ref:`debops.python` Ansible role.
debops__python__dependent_packages3:

  - 'python3-dev'
  - 'python3-dnspython'
  - 'python3-netaddr'
  - 'python3-passlib'
  - 'python3-setuptools'
  - '{{ ([]
         if (ansible_distribution_release in
             ([ "wheezy", "jessie", "stretch",
                "precise", "trusty", "xenial" ]))
         else "python3-ldap") }}'

                                                                   # ]]]
# .. envvar:: debops__python__dependent_packages2 [[[
#
# Configuration for the :ref:`debops.python` Ansible role.
debops__python__dependent_packages2:

  - 'python-dev'
  - 'python-dnspython'
  - 'python-ldap'
  - 'python-netaddr'
  - 'python-passlib'
  - 'python-setuptools'
                                                                   # ]]]
                                                                   # ]]]
                                                                   # ]]]
