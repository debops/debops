---

- name: Install requested packages
  package:
    name: '{{ item }}'
    state: 'present'
  with_flattened: '{{ machine__packages }}'
  when: machine__enabled|bool

- name: Generate machine-info config file
  template:
    src: 'etc/machine-info.j2'
    dest: '/etc/machine-info'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: machine__enabled|bool

- name: Divert original /etc/issue file
  command: dpkg-divert --quiet --local --divert /etc/issue.dpkg-divert --rename /etc/issue
  args:
    creates: '/etc/issue.dpkg-divert'
  when: machine__enabled|bool and machine__etc_issue_state|d('present') != 'absent'

- name: Configure /etc/issue file
  template:
    src: '{{ machine__etc_issue_template }}'
    dest: '/etc/issue'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: machine__enabled|bool and machine__etc_issue_state|d('present') != 'absent'

- name: Revert original /etc/issue file
  shell: rm -f /etc/issue ; dpkg-divert --quiet --local --rename --remove /etc/issue
  args:
    warn: False
    removes: '/etc/issue.dpkg-divert'
  when: machine__enabled|bool and machine__etc_issue_state|d('present') == 'absent'

- name: Remove static /etc/motd file if requested
  file:
    path: '/etc/motd'
    state: 'absent'
  when: machine__enabled|bool and machine__etc_motd_state == 'absent'

- name: Generate static /etc/motd file
  copy:
    content: "{{ machine__motd }}"
    dest: '/etc/motd'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: machine__enabled|bool and machine__etc_motd_state|d('present') != 'absent' and
        machine__motd|d()

- name: Ensure that required directories exist
  file:
    path: '{{ machine__motd_update_dir }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: machine__enabled|bool

- name: Fix issue with dynamic MOTD on older OS releases
  template:
    src: 'etc/tmpfiles.d/motd-dynamic.conf.j2'
    dest: '/etc/tmpfiles.d/motd-dynamic.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: machine__register_tmpfiles
  when: machine__enabled|bool and ansible_distribution_release in [ 'wheezy', 'jessie' ]

- name: Create /run/motd.dynamic symlink
  command: systemd-tmpfiles --create
  when: machine__enabled|bool and ansible_service_mgr == 'systemd' and
        machine__register_tmpfiles is changed

- name: Check current MOTD diversions
  environment:
    LC_ALL: 'C'
  shell: dpkg-divert --list '/etc/update-motd.d/*.disabled' | awk '{print $NF}'
  register: machine__register_motd_diversions
  check_mode: False
  changed_when: False

- name: Divert packaged MOTD scripts
  command: dpkg-divert --quiet --local --divert /etc/update-motd.d/{{ item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name) }}.disabled --rename /etc/update-motd.d/{{ item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name) }}
  args:
    creates: '{{ "/etc/update-motd.d/" + (item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name)) + ".disabled" }}'
  with_flattened: '{{ machine__motd_combined_scripts | parse_kv_items }}'
  when: (machine__enabled|bool and
         (item.filename is defined or item.name is defined) and
         (item.state|d('present') not in [ 'init', 'absent', 'ignore', 'revert' ]) and
         ((item.divert|d())|bool and
         '/etc/update-motd.d/' + (item.filename | d(item.weight|string + "-" + item.name)) + '.disabled' not in machine__register_motd_diversions.stdout_lines))

- name: Remove dynamic MOTD scripts
  file:
    path: '{{ machine__motd_update_dir + "/" + (item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name)) }}'
    state: 'absent'
  with_flattened: '{{ machine__motd_combined_scripts | parse_kv_items }}'
  register: machine__register_motd_scripts_removed
  when: (machine__enabled|bool and
         (item.filename is defined or item.name is defined) and
         item.state|d('present') == 'absent' and not (item.divert|d()|bool))

- name: Install dynamic MOTD scripts
  copy:
    src: '{{ item.src | d(omit) }}'
    content: '{{ item.content | d(omit) }}'
    dest: '{{ machine__motd_update_dir + "/" + (item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name)) }}'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_flattened: '{{ machine__motd_combined_scripts | parse_kv_items }}'
  register: machine__register_motd_scripts_created
  when: (machine__enabled|bool and
         (item.filename is defined or item.name is defined) and
         (item.src is defined or item.content is defined) and
         item.state|d('present') not in [ 'init', 'absent', 'ignore', 'divert', 'revert' ])

- name: Remove unknown MOTD scripts
  shell: find /etc/update-motd.d -maxdepth 1 -type f
         -name '*-{{ item.item.name }}'
         ! -name '{{ ("%02d" | format((item.item.weight | d("0"))|int))|string + "-" + item.item.name }}' -exec rm -vf {} +
  with_items:
    - '{{ machine__register_motd_scripts_removed.results }}'
    - '{{ machine__register_motd_scripts_created.results }}'
  when: (item.item.name|d() and not (item.item.divert|d())|bool and
         item.item.filename is undefined and item is changed)

- name: Revert packaged MOTD scripts
  shell: rm -f /etc/update-motd.d/{{ item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name) }} ; dpkg-divert --quiet --local --rename --remove /etc/update-motd.d/{{ item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name) }}
  args:
    warn: False
    removes: '{{ "/etc/update-motd.d/" + (item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name)) + ".disabled" }}'
  with_flattened: '{{ machine__motd_combined_scripts | parse_kv_items }}'
  when: ((not machine__enabled|bool and (item.divert|d())|bool) or
          ((item.filename is defined or item.name is defined) and
           item.state|d('present') in [ 'absent', 'revert' ] and
           (item.divert|d())|bool and
           '/etc/update-motd.d/' + (item.filename | d(("%02d" | format(item.weight|int))|string + "-" + item.name)) + '.disabled' in machine__register_motd_diversions.stdout_lines))

- name: Configure local facts
  import_tasks: local_facts.yml

- name: Update Ansible facts if they were modified
  action: setup
  when: local_facts__register_facts is changed
