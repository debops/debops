---

  # When nested KVM is enabled on a host, Ansible does not recognize the
  # hardware virtualization support in the guest correctly. This is an
  # additional runtime check to account for that.
- name: Check if host supports hardware virtualization
  shell: set -o nounset -o pipefail -o errexit &&
         egrep 'vmx|svm|0xc0f' /proc/cpuinfo || true
  args:
    executable: 'bash'
  register: libvirtd__register_hw_virt
  check_mode: False
  changed_when: False

- name: Install libvirtd support
  package:
    name: '{{ q("flattened", (libvirtd__network_packages
                              + libvirtd__misc_packages
                              + libvirtd__packages
                              + (libvirtd__base_packages_map[ansible_distribution_release]
                                 if (ansible_distribution_release in libvirtd__base_packages_map.keys())
                                 else libvirtd__base_packages)
                              + (libvirtd__kvm_packages
                                 if libvirtd__kvm_support|bool
                                 else []))) }}'
    state: 'present'
    install_recommends: False
  register: libvirtd__register_packages
  until: libvirtd__register_packages is succeeded

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save libvirtd local facts
  template:
    src: 'etc/ansible/facts.d/libvirtd.fact.j2'
    dest: '/etc/ansible/facts.d/libvirtd.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: libvirtd__register_facts

- name: Update Ansible facts if they were modified
  action: setup
  when: libvirtd__register_facts is changed

- name: Divert managed configuration files
  command: 'dpkg-divert --quiet --local --divert {{ item }}.dpkg-divert --rename {{ item }}'
  args:
    creates: '{{ item }}.dpkg-divert'
  with_items:
    - '/etc/libvirt/libvirt.conf'
    - '/etc/libvirt/libvirtd.conf'

- name: Generate libvirt configuration files
  template:
    src: '{{ item }}.j2'
    dest: '/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items:
    - 'etc/libvirt/libvirt.conf'

- name: Generate libvirtd configuration files
  template:
    src: '{{ item }}.j2'
    dest: '/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items:
    - 'etc/libvirt/libvirtd.conf'
  notify: [ 'Restart libvirtd', 'Restart libvirt-bin' ]

- name: Add administrators to libvirtd access group
  user:
    name: '{{ item }}'
    groups: "{{ libvirtd__unix_sock_group }}"
    append: True
  with_items: '{{ libvirtd__admins }}'
  when: libvirtd__admins|d()

- name: Install ferm post hook
  template:
    src: 'etc/ferm/hooks/post.d/reload-libvirtd.j2'
    dest: '/etc/ferm/hooks/post.d/reload-libvirtd'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: libvirtd__ferm_post_hook|bool

- name: Configure Kernel Same-page Merging
  template:
    src: 'etc/sysfs.d/ksm.conf.j2'
    dest: '/etc/sysfs.d/ksm.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart sysfsutils' ]
  when: ansible_distribution_release not in [ 'wheezy' ]

- name: Check /sys filesystem mount options
  shell: set -o nounset -o pipefail -o errexit &&
         findmnt -n -o FS-OPTIONS --target /sys | tr ',' '\n'
  args:
    executable: 'bash'
  register: libvirtd__register_sysfs
  changed_when: False
  check_mode: False
