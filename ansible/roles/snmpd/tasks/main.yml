---
# Copyright (C) 2015 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  import_role:
    name: 'secret'

- name: Check if snmpd is installed
  environment:
    LC_MESSAGES: 'C'
  command: dpkg-query -W -f='${Version}\n' snmpd
  register: snmpd_register_version
  changed_when: False
  failed_when: False
  check_mode: False

- name: Install required packages
  package:
    name: '{{ q("flattened", ([ "snmp", "snmpd" ]
                              + ([ "snmp-mibs-downloader" ]
                                 if snmpd_download_mibs
                                 else [])
                              + ([ "lm-sensors" ]
                                 if (ansible_virtualization_role is undefined or
                                     ansible_virtualization_role not in [ "guest" ])
                                 else [] )
                              + snmpd_packages)) }}'
    state: 'present'
  register: snmpd__register_packages
  until: snmpd__register_packages is succeeded

- name: Install custom snmpd.service unit file
  copy:
    src: 'etc/systemd/system/snmpd.service'
    dest: '/etc/systemd/system/snmpd.service'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart snmpd' ]

- name: Reload systemd daemon and enable snmpd.service
  systemd:
    daemon_reload: True
    name: 'snmpd.service'
    enabled: True
  when: ((ansible_service_mgr == "systemd") and not ansible_local.snmpd|d())

- name: Allow 'snmp' user access to /proc if needed
  user:
    name: '{{ snmpd_user }}'
    groups: '{{ snmpd_proc_hidepid_group }}'
    append: True
    create_home: False
  when: snmpd_proc_hidepid | bool
  notify: [ 'Restart snmpd' ]

- name: Enable MIBs support
  lineinfile:
    dest: '/etc/snmp/snmp.conf'
    state: 'present'
    regexp: 'mibs\s:'
    line: '#mibs :'
    mode: '0644'
  notify: [ 'Restart snmpd' ]
  when: snmpd_download_mibs|d() and snmpd_download_mibs

- name: Divert default configuration file
  command: dpkg-divert --quiet --local --divert /etc/snmp/snmpd.conf.dpkg-divert --rename /etc/snmp/snmpd.conf
  args:
    creates: '/etc/snmp/snmpd.conf.dpkg-divert'
  notify: [ 'Restart snmpd' ]

- name: Initialize local account
  set_fact:
    snmpd_account_local_username: '{{ ansible_local.snmpd.username
                                      if (ansible_local|d() and ansible_local.snmpd|d() and
                                          ansible_local.snmpd.username)
                                      else lookup("pipe", "openssl rand -hex "
                                                  + (((snmpd_account_username_length | int) / 2) | int) | string) }}'
    snmpd_account_local_password: '{{ ansible_local.snmpd.password|d(lookup("pipe", "openssl rand -base64 " + snmpd_account_password_length)) }}'
  no_log: True

- name: Configure snmpd daemon variables
  template:
    src: 'etc/default/snmpd.j2'
    dest: '/etc/default/snmpd'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart snmpd' ]

- name: Configure local SNMP credentials
  template:
    src: 'etc/snmp/snmp.local.conf.j2'
    dest: '/etc/snmp/snmp.local.conf'
    owner: 'root'
    group: 'root'
    mode: '0600'

- name: Create snmpd extension script directory
  file:
    path: '{{ snmpd_extension_scripts }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Install snmpd extension scripts
  copy:
    src: 'usr/local/lib/snmpd/'
    dest: '{{ snmpd_extension_scripts + "/" }}'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Initialize admin and agent accounts
  set_fact:
    snmpd_fact_account_admin_username: '{{ snmpd_account_admin_username }}'
    snmpd_fact_account_admin_password: '{{ snmpd_account_admin_password }}'
    snmpd_fact_account_agent_username: '{{ snmpd_account_agent_username }}'
    snmpd_fact_account_agent_password: '{{ snmpd_account_agent_password }}'
  no_log: True
  when: snmpd_account|d() and snmpd_account

- name: Configure snmpd service
  template:
    src: '{{ lookup("debops.debops.template_src", "etc/snmp/snmpd.conf.j2") }}'
    dest: '/etc/snmp/snmpd.conf'
    owner: 'root'
    group: 'root'
    mode: '0600'
  notify: [ 'Restart snmpd' ]

- name: Configure SNMPv3 credentials
  include: configure_snmpv3_credentials.yml
  when: ((snmpd_register_version|d() and not snmpd_register_version.stdout) and
         (snmpd_account|d() and snmpd_account))

- name: Save local SNMPv3 password for retrieval via Ansible facts
  template:
    src: 'etc/snmp/ansible-local-password.json.j2'
    dest: '/etc/snmp/ansible-local-password.json'
    mode: '0600'
  no_log: True

- name: Make sure that Ansible local fact directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save snmpd local facts
  template:
    src: 'etc/ansible/facts.d/snmpd.fact.j2'
    dest: '/etc/ansible/facts.d/snmpd.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  meta: 'flush_handlers'
