---
# Copyright (C) 2015-2016 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2016 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Create required directories
  ansible.builtin.file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  loop:
    - '{{ docker_gen__src }}'
    - '{{ docker_gen__lib }}'
    - '{{ docker_gen__templates }}'
    - '{{ ((docker_gen__nginx_dest | dirname)
           if (docker_gen__nginx | d() and docker_gen__nginx)
           else []) }}'

- name: Download docker-gen sources
  ansible.builtin.get_url:
    url: '{{ docker_gen__release }}'
    dest: '{{ docker_gen__src + "/" + docker_gen__release | basename }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Unpack docker-gen
  ansible.builtin.unarchive:
    src: '{{ docker_gen__src + "/" + docker_gen__release | basename }}'
    dest: '{{ docker_gen__lib }}'
    copy: False
    owner: 'root'
    group: 'root'
    mode: 'u=rwX,g=rX,o=rX'
  register: docker_gen__register_install

- name: Copy docker-gen templates to remote host
  ansible.builtin.copy:
    src: 'usr/local/lib/templates/'
    dest: '{{ docker_gen__templates + "/" }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart docker-gen' ]

- name: Configure docker-gen
  ansible.builtin.template:
    src: 'etc/docker-gen.conf.j2'
    dest: '/etc/docker-gen.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart docker-gen' ]

- name: Configure docker-gen service options
  ansible.builtin.template:
    src: 'etc/default/docker-gen.j2'
    dest: '/etc/default/docker-gen'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart docker-gen' ]

- name: Configure docker-gen init script
  ansible.builtin.template:
    src: 'etc/init.d/docker-gen.j2'
    dest: '/etc/init.d/docker-gen'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Reload service manager', 'Restart docker-gen' ]
  when: ansible_service_mgr != 'systemd'

- name: Configure docker-gen systemd service
  ansible.builtin.template:
    src: 'etc/systemd/system/docker-gen.service.j2'
    dest: '/etc/systemd/system/docker-gen.service'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: docker_gen__register_service
  notify: [ 'Reload service manager', 'Restart docker-gen' ]
  when: ansible_service_mgr == 'systemd'

- name: Reload systemd daemons
  ansible.builtin.meta: 'flush_handlers'

- name: Start docker-gen on install
  ansible.builtin.service:  # noqa no-handler
    name: 'docker-gen'
    state: 'started'
    enabled: True
  when: docker_gen__register_install | d() and
        docker_gen__register_install is changed
