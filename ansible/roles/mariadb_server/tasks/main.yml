---
# Copyright (C) 2015-2016 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2017 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  ansible.builtin.import_role:
    name: 'secret'

# We want to have our configuration enabled as soon as possible for UTF-8
# support, this check lets us know if MariaDB / MySQL server has just been
# installed and we can quickly apply our own configuration and restart the
# server before any more changes happen.
- name: Check if database server is installed
  environment:
    LC_MESSAGES: 'C'
  ansible.builtin.shell: set -o nounset -o pipefail -o errexit &&
         dpkg-query -W -f='${Version}\n' 'mariadb-server' 'mysql-server'
                                         'percona-server-server' 'mysql-wsrep-server-5.6'
         | grep -v '^$'
  args:
    executable: 'bash'
  register: mariadb_server__register_version
  check_mode: False
  changed_when: False
  failed_when: False

- name: Confgure upstream MariaDB repositories if required
  ansible.builtin.deb822_repository:
    name: 'MariaDB'
    uris: 'https://deb.mariadb.org/{{ mariadb_server__upstream_version }}/{{ ansible_local.core.distribution | d(ansible__distribution) | lower }}'
    signed_by: 'https://mariadb.org/mariadb_release_signing_key.pgp'
    components: 'main'
    suites: '{{ ansible_distribution_release }}'
  when: mariadb_server__flavor == "mariadb_upstream"

- name: Install database server packages
  ansible.builtin.package:
    name: '{{ q("flattened", (mariadb_server__base_packages
                              + mariadb_server__packages_map[mariadb_server__flavor]
                              + mariadb_server__packages
                              + (["automysqlbackup"]
                                 if mariadb_server__backup | bool
                                 else []))) }}'
    state: 'present'
  register: mariadb_server__register_install_status
  until: mariadb_server__register_install_status is succeeded

- name: Stop database server on first install
  ansible.builtin.service:  # noqa no-handler
    name: 'mysql'
    state: 'stopped'
  when: ((mariadb_server__register_version | d() and not mariadb_server__register_version.stdout) and
         (mariadb_server__register_install_status | d() and mariadb_server__register_install_status is changed))

- name: Add database server user to specified groups
  ansible.builtin.user:
    name: 'mysql'
    groups: '{{ mariadb_server__append_groups | join(",") | default(omit) }}'
    append: True
    createhome: False
  when: mariadb_server__pki | bool

- name: Check if MariaDB config directory exists
  ansible.builtin.stat:
    path: '/etc/mysql/mariadb.conf.d'
  register: mariadb_server__register_confd

- name: Ensure MariaDB data directory exists
  ansible.builtin.file:
    path: '{{ mariadb_server__datadir }}'
    state: 'directory'
    owner: 'mysql'
    group: 'mysql'
    mode: '0755'

- name: Move MariaDB data files to data directory
  ansible.builtin.shell:  # noqa no-handler
    'mv {{ mariadb_server__default_datadir }}/* {{ mariadb_server__datadir }}'
  register: mariadb_server__register_move
  changed_when: mariadb_server__register_move.changed | bool
  when: ((mariadb_server__register_version | d() and not mariadb_server__register_version.stdout) and
         (mariadb_server__register_install_status | d() and mariadb_server__register_install_status is changed) and
         (mariadb_server__datadir != mariadb_server__default_datadir))

- name: Configure database client on first install
  ansible.builtin.template:
    src: 'etc/mysql/conf.d/client.cnf.j2'
    dest: '{{ mariadb_server__client_cnf_file }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: (mariadb_server__register_version | d() and not mariadb_server__register_version.stdout)

- name: Configure database server
  ansible.builtin.include_tasks: 'configure_server.yml'
  tags: [ 'role::mariadb_server:configure' ]

- name: Start database server on first install
  ansible.builtin.service:  # noqa no-handler
    name: 'mysql'
    state: 'started'
  when: ((mariadb_server__register_version | d() and not mariadb_server__register_version.stdout) and
         (mariadb_server__register_install_status | d() and mariadb_server__register_install_status is changed))

- name: Secure database server
  ansible.builtin.include_tasks: 'secure_installation.yml'
  tags: [ 'role::mariadb_server:secure' ]

- name: Make sure that local fact directory exists
  ansible.builtin.file:
    dest: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save MariaDB local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/mariadb.fact.j2'
    dest: '/etc/ansible/facts.d/mariadb.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Re-read local facts if they have been modified
  ansible.builtin.meta: 'flush_handlers'
