---
# Copyright (C) 2016 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2016 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- import_role:
    name: 'secret'

- name: Install required packages
  package:
    name: '{{ q("flattened", (nullmailer__base_packages
                              + nullmailer__smtpd_packages
                              + nullmailer__packages)) }}'
    state: 'present'
  register: nullmailer__register_packages
  until: nullmailer__register_packages is succeeded
  when: nullmailer__deploy_state|d('present') != 'absent'

- name: Purge other SMTP servers
  apt:
    name: '{{ nullmailer__purge_mta_packages | flatten }}'
    state: 'absent'
    purge: True
  when: (nullmailer__deploy_state|d('present') != 'absent' and
         nullmailer__purge_mta_packages)

- name: Generate configuration files
  copy:
    dest:    '{{ item.dest }}'
    content: "{{ (item.content + '\n') if item.content|d() else ('' if item.content is defined else omit) }}"
    src:     '{{ item.src   | d(omit) }}'
    owner:   '{{ item.owner | d(omit) }}'
    group:   '{{ item.group | d(omit) }}'
    mode:    '{{ item.mode  | d(omit) }}'
  with_flattened:
    - '{{ nullmailer__configuration_files }}'
  notify: [ 'Restart nullmailer' ]
  when: (nullmailer__deploy_state|d('present') != 'absent' and
         (item.dest|d() and (item.src|d() or item.content is defined) and
          item.state|d('present') != 'absent'))

- name: Generate private configuration files
  copy:
    dest:    '{{ item.dest }}'
    content: "{{ (item.content + '\n') if item.content|d() else omit }}"
    src:     '{{ item.src   | d(omit) }}'
    owner:   '{{ item.owner | d(omit) }}'
    group:   '{{ item.group | d(omit) }}'
    mode:    '{{ item.mode  | d(omit) }}'
  with_flattened:
    - '{{ nullmailer__private_configuration_files }}'
  notify: [ 'Restart nullmailer' ]
  when: (nullmailer__deploy_state|d('present') != 'absent' and
         (item.dest|d() and (item.src|d() or item.content|d()) and
          item.state|d('present') != 'absent'))
  no_log: True

- name: Remove configuration files if requested
  file:
    path: '{{ item.dest }}'
    state: 'absent'
  with_flattened:
    - '{{ nullmailer__configuration_files }}'
  notify: [ 'Restart nullmailer' ]
  when: (nullmailer__deploy_state|d('present') != 'absent' and
         (item.dest|d() and (item.src|d() or item.content is defined) and
          item.state|d('present') == 'absent'))

- name: Remove private configuration files if requested
  file:
    path: '{{ item.dest }}'
    state: 'absent'
  with_flattened:
    - '{{ nullmailer__private_configuration_files }}'
  notify: [ 'Restart nullmailer' ]
  when: (nullmailer__deploy_state|d('present') != 'absent' and
         (item.dest|d() and (item.src|d() or item.content is defined) and
          item.state|d('present') == 'absent'))
  no_log: True

- name: Configure nullmailer services in xinetd
  template:
    src: 'etc/xinetd.d/{{ item }}.j2'
    dest: '/etc/xinetd.d/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  loop:
    - 'nullmailer-smtpd'
    - 'nullmailer-smtpd6'
  notify: [ 'Reload xinetd' ]
  when: (nullmailer__deploy_state|d('present') != 'absent' and nullmailer__smtpd|bool)

- name: Disable nullmailer-smtpd service in xinetd
  file:
    path: '/etc/xinetd.d/{{ item }}'
    state: 'absent'
  loop:
    - 'nullmailer-smtpd'
    - 'nullmailer-smtpd6'
  notify: [ 'Reload xinetd' ]
  when: ((nullmailer__deploy_state|d() and nullmailer__deploy_state == 'absent') or
         not nullmailer__smtpd|bool)

- name: Remove old dpkg cleanup hook and script
  file:
    path: '{{ item }}'
    state: 'absent'
  loop:
    - '/etc/dpkg/dpkg.cfg.d/debops-nullmailer'
    - '/usr/local/lib/debops-nullmailer-dpkg-cleanup'
  when: nullmailer__deploy_state|d('present') != 'absent'

- import_role:
    name: 'dpkg_cleanup'
  vars:
    dpkg_cleanup__dependent_packages:
      - '{{ nullmailer__dpkg_cleanup__dependent_packages }}'
  when: nullmailer__deploy_state|d('present') != 'absent'
  tags: [ 'role::dpkg_cleanup', 'skip::dpkg_cleanup',
          'role::nullmailer:dpkg_cleanup' ]
