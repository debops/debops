---
# Copyright (C) 2019-2023 Robin Schneider <ypid@riseup.net>
# Copyright (C) 2023 David HÃ¤rdeman <david@hardeman.nu>
# Copyright (C) 2019-2023 DebOps https://debops.org/
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  ansible.builtin.import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Import DebOps secret role
  ansible.builtin.import_role:
    name: 'secret'

- name: Assert that basic variables have been defined
  ansible.builtin.assert:
    that:
      - borgbackup__type | d("") in ["server", "client", "controlled_client", "controller"]
      - borgbackup__servers | d([]) | length > 0

- name: Assert that client settings have been defined
  ansible.builtin.assert:
    that:
      - borgbackup__combined_source_directories | d([]) | flatten | length > 0
      - borgbackup__encryption | d("") != ""
  when: borgbackup__type in ["client", "controlled_client"]

- name: Assert that source directories don't include /root
  ansible.builtin.assert:
    that:
      - not "/root" in borgbackup__combined_source_directories | flatten
  when: borgbackup__protect_root | d(True) and borgbackup__type in ["client", "controlled_client"]

- name: Assert that a controller has been defined
  ansible.builtin.assert:
    that:
      - borgbackup__controller | d("") != ""
  when: borgbackup__type in ["controller", "controlled_client"]

- name: Install required borgbackup packages
  ansible.builtin.package:
    name: '{{ (borgbackup__base_packages + borgbackup__packages) | flatten }}'
    state: 'present'
  register: borgbackup__register_packages
  until: borgbackup__register_packages is succeeded
  tags: [ 'role::borgbackup:install' ]

- name: Import borgbackup controller tasks
  ansible.builtin.include_tasks: 'controller.yml'
  when: borgbackup__type == "controller"
  tags: [ 'role::borgbackup:config' ]

- name: Import borgbackup server tasks
  ansible.builtin.include_tasks: 'server.yml'
  when: borgbackup__type == "server"
  tags: [ 'role::borgbackup:config' ]

- name: Import borgbackup client tasks
  ansible.builtin.include_tasks: 'client.yml'
  when: borgbackup__type in ["client", "controlled_client"]
  tags: [ 'role::borgbackup:config' ]

- name: Make sure that Ansible local facts directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save borgbackup local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/borgbackup.fact.j2'
    dest: '/etc/ansible/facts.d/borgbackup.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  ansible.builtin.meta: 'flush_handlers'
