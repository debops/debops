---
# Copyright (C) 2016-2018 Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# Copyright (C) 2016-2018 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

# ---- System Account ----

- name: Create Roundcube group
  ansible.builtin.group:
    name: '{{ roundcube__group }}'
    system: True
    state: 'present'

- name: Create Roundcube user
  ansible.builtin.user:
    name: '{{ roundcube__user }}'
    group: '{{ roundcube__group }}'
    home: '{{ roundcube__home }}'
    shell: '{{ roundcube__shell }}'
    comment: '{{ roundcube__comment }}'
    system: True
    state: 'present'


# ---- Deployment ----

- name: Create required Roundcube directories
  ansible.builtin.file:
    path: '{{ item.path }}'
    state: 'directory'
    owner: '{{ roundcube__user }}'
    group: '{{ roundcube__group }}'
    mode: '{{ item.mode | d("0755") }}'
  loop:
    - { path: '{{ roundcube__src }}' }
    - { path: '{{ roundcube__git_dir | dirname }}', mode: "0750" }
    - { path: '{{ roundcube__git_dest | dirname }}' }

- name: Clone Roundcube source from upstream repository
  ansible.builtin.git:
    repo: '{{ roundcube__git_repo }}'
    dest: '{{ roundcube__git_dest }}'
    version: '{{ roundcube__git_version }}'
    separate_git_dir: '{{ roundcube__git_dir }}'
    verify_commit: True
    # FIXME: At the moment GPG whitelisting does not work correctly
    #gpg_whitelist: '{{ [ roundcube__git_gpg_key ]
    #                   + roundcube__git_additional_gpg_keys
    #                   | flatten }}'
  become: True
  become_user: '{{ roundcube__user }}'
  register: roundcube__register_git
  notify: [ 'Refresh host facts' ]

- name: Read PHP composer data from upstream
  ansible.builtin.slurp:  # noqa no-handler
    src: '{{ roundcube__git_dest + "/composer.json-dist" }}'
  register: roundcube__register_composer_dist
  when: roundcube__register_git is changed

- name: Read currently deployed PHP composer data
  ansible.builtin.slurp:  # noqa no-handler
    src: '{{ roundcube__git_dest + "/composer.json" }}'
  register: roundcube__register_composer_installed
  when: (ansible_local | d() and ansible_local.roundcube | d() and
         (ansible_local.roundcube.installed | d()) | bool and
        roundcube__register_git is changed)

- name: Update PHP composer data
  ansible.builtin.template:  # noqa no-handler
    src: 'srv/www/sites/roundcube/public/composer.json.j2'
    dest: '{{ roundcube__git_dest + "/composer.json" }}'
    owner: '{{ roundcube__user }}'
    group: '{{ roundcube__group }}'
    mode: '0644'
  when: roundcube__register_git is changed

# ---- Post deployment ----

- name: Install or upgrade PHP packages via Composer
  community.general.composer:  # noqa no-handler
    command: '{{ "upgrade"
                 if (ansible_local | d() and ansible_local.roundcube | d() and
                     (ansible_local.roundcube.installed | d()) | bool)
                 else "install" }}'
    working_dir: '{{ roundcube__git_dest }}'
    no_dev: True
  become: True
  become_user: '{{ roundcube__user }}'
  register: roundcube__register_composer
  until: roundcube__register_composer is succeeded
  when: roundcube__register_git is changed

- name: Install Roundcube plugins via Composer
  community.general.composer:  # noqa var-spacing
    command: 'require'
    arguments: '{{ item }}'
    working_dir: '{{ roundcube__git_dest }}'
    no_dev: True
  loop: '{{ roundcube__combined_plugins | debops.debops.parse_kv_items
            | selectattr("state", "match", "^(enabled|present)$")
            | selectattr("package", "defined")
            | map(attribute="package") | list }}'
  become: True
  become_user: '{{ roundcube__user }}'
  register: roundcube__register_composer_plugins
  until: roundcube__register_composer_plugins is succeeded
  tags: [ 'skip::roundcube:plugins' ]

- name: Install Javascript packages
  ansible.builtin.command: bin/install-jsdeps.sh
  args:
    chdir: '{{ roundcube__git_dest }}'
  become: True
  become_user: '{{ roundcube__user }}'
  # The script does not have any useful status output
  # FIXME: Find better way to make this task idempotent
  changed_when: False

- name: Enable cleandb.sh Cron job
  ansible.builtin.cron:
    name: Roundcube daily database housekeeping
    user: '{{ roundcube__user }}'
    job: '{{ roundcube__git_dest }}/bin/cleandb.sh > /dev/null'
    cron_file: 'roundcube'
    hour: '22'
    minute: '0'
